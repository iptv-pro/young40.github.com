#+TITLE: UniRx源码分析(一)
#+DATE: 2021-06-24T17:26:34+08:00
#+TAGS[]: Unity UniRx
#+CATEGORIES[]: UniRx源码分析
#+LAYOUT: post
#+OPTIONS: toc:nil
#+DRAFT: true

* 源码目录
UniRx的源码位于 =UniRx/Assets/Plugins/UniRx/Scripts= 目录, 用例位于 =Assets/Plugins/UniRx/Examples= 目录.

重要的文件或目录有:

# more

| 文件/目录         | 说明           |
|-------------------+----------------|
| Observer.cs       | 观察者类的实现 |
| Observable*.cs    | 被观察者的实现 |
| Notifiers         |                |
| Operator          | 运算符的实现   |
| Schedulers        | 调度器         |
| Subjects          |                |
| Disposables       |                |
| UnityEngineBridge | Unity扩展目录  |
| InternalUtil      | 内部工具目录   |

* 接口
UniRx 使用了观察者模式, 我们先看下观察者模式的几个重要接口.

** IObserve
观察者需要实现 =OnNext=, =OnError=, =OnCompleted= 三个方法.

#+begin_src csharp
  public interface IObserver<in T>
  {
      void OnCompleted();
  
      void OnError(Exception error);
  
      void OnNext(T value);
  }
#+end_src
   
** IObservable   
被观察者需要实现 =Subscribe= 方法, 通过该方法被观察者可以订阅观察者.

#+begin_src csharp
  public interface IObservable<out T>
  {
      IDisposable Subscribe(IObserver<T> observer);
  }
#+end_src
