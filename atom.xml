<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[喜气羊羊]]></title>
  <link href="http://young40.github.com/atom.xml" rel="self"/>
  <link href="http://young40.github.com/"/>
  <updated>2013-02-24T18:43:17+08:00</updated>
  <id>http://young40.github.com/</id>
  <author>
    <name><![CDATA[Young40]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[搭建Mac OS X下cocos2d-x的Android开发环境]]></title>
    <link href="http://young40.github.com/blog/2013/02/23/setting-up-android-development-envirment-on-mac-os-x/"/>
    <updated>2013-02-23T21:14:00+08:00</updated>
    <id>http://young40.github.com/blog/2013/02/23/setting-up-android-development-envirment-on-mac-os-x</id>
    <content type="html"><![CDATA[<h2>版本</h2>

<ul>
<li>Cocos2d-x: cocos2d-2.1beta3-x-2.1.1</li>
<li>OS X: 10.8</li>
<li>Android ADT Bundle: v21.1.0</li>
<li>Android NDK: android-ndk-r8d</li>
<li>Device: Android 4.2.1   <br/>
这次我们测试的设备安装的是Android4.2.1, Cocos2d-x能支持Android2.2以上版本.</li>
</ul>


<h4>文件路径:</h4>

<ul>
<li>Cocos2d-x: /opt/cocos2d-2.1beta3-x-2.1.1</li>
<li>Android ADT Bundle: /opt/adt-bundle-mac-x86_64</li>
<li>Android NDK: /opt/android-ndk
下文中提及的这些路径, 请替换成您自己的路径</li>
</ul>


<h2>下载最新版本Cocos2d-x</h2>

<p>您可以在Cocos2d-x官网找到<a href="http://www.cocos2d-x.org/projects/cocos2d-x/wiki/Download">下载页面</a>  <br/>
解压后到您需要的位置, 本文假设解压到以下位置</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>/opt/cocos2d-2.1beta3-x-2.1.1</span></code></pre></td></tr></table></div></figure>


<h2>检查JDK</h2>

<p>在终端中输入</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>java -version
</span></code></pre></td></tr></table></div></figure>


<p>如果您没有安装JDK, 系统会帮您自动安装JDK. <br/>
<img src="http://young40.github.com/upload/2013-02/set-up-c-a-osx-001-jdk.png"> <br/>
安装过后您会看到如下输出</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>java version <span class="s2">&quot;1.6.0_37&quot;</span>
</span><span class='line'>Java<span class="o">(</span>TM<span class="o">)</span> SE Runtime Environment <span class="o">(</span>build 1.6.0_37-b06-434-11M3909<span class="o">)</span>
</span><span class='line'>Java HotSpot<span class="o">(</span>TM<span class="o">)</span> 64-Bit Server VM <span class="o">(</span>build 20.12-b01-434, mixed mode<span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<h2>下载最新版本Android ADT Bundle</h2>

<p>Google将Android SDK, Eclipse, ADT(Android Developer Tools)打包在一起,称作Android ADT Bundle, 简化了Android开发环境的搭建. <br/>
您可以在Android官网找到<a href="http://developer.android.com/sdk/index.html">下载页面</a>  <br/>
解压到您需要的位置, 本文假设解压到以下位置</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>/opt/adt-bundle-mac-x86_64
</span></code></pre></td></tr></table></div></figure>


<p>在终端中运行下面命令, 将ADT中的Eclipse放入您的程序文件夹, 方便启动</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>ln -s /opt/adt-bundle-mac-x86_64/eclipse/Eclipse.app/ /Applications/Eclipse-ADT.app
</span></code></pre></td></tr></table></div></figure>


<p>在/Applications中或者Launchpad中找到并打开Eclipse-ADT
<img src="http://young40.github.com/upload/2013-02/set-up-c-a-osx-002-adt.png"></p>

<h2>Eclipse的Retina支持</h2>

<p>如果您在使用带Retina的Mackbook Pro, Eclipse暂时还不支持Retina. 但有一个简单的<a href="https://bugs.eclipse.org/bugs/show_bug.cgi?id=382972">解决方案</a></p>

<ol>
<li>在 /opt/adt-bundle-mac-x86_64/eclipse 找到 Eclipse.app</li>
<li>编辑<code>Contents/Info.plist</code></li>
<li>找到</li>
</ol>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>&lt;/dict&gt;
</span><span class='line'>&lt;/plist&gt;
</span></code></pre></td></tr></table></div></figure>


<p>在其上面添加</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>&lt;key&gt;NSHighResolutionCapable&lt;/key&gt;
</span><span class='line'>&lt;<span class="nb">true</span>/&gt;
</span></code></pre></td></tr></table></div></figure>


<ol>
<li>将Eclipse.app移动到新的文件夹, 然后再移动回来. (防止系统缓存了上面提及的Info.plist)</li>
<li>OK啦.</li>
</ol>


<h2>Android SDK Manager</h2>

<p>Android ADT Bundle中是包含了Android SDK Manager的. 启动您的Eclipse-ADT. 可以在工具栏中或者菜单中找到Android SDK Manager. <br/>
<img src="http://young40.github.com/upload/2013-02/set-up-c-a-osx-003-sdk-1.png">  <br/>
<img src="http://young40.github.com/upload/2013-02/set-up-c-a-osx-004-sdk-2.png"></p>

<h2>Android NDK</h2>

<p>您可以在Android官网找到Android的<a href="http://developer.android.com/tools/sdk/ndk/index.html">下载页面</a>  <br/>
下载后解压到您需要的位置, 本文假设解压到以下位置</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>/opt/android-ndk
</span></code></pre></td></tr></table></div></figure>


<h2>设置环境变量</h2>

<p>我们需要将SDK, NDK以及Cocos2d-x的路径中添加到环境变量中. 将以下内容添加到~/.bash_profile文件</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nb">export </span><span class="nv">COCOS2DX_ROOT</span><span class="o">=</span>/opt/cocos2d-2.1beta3-x-2.1.1
</span><span class='line'><span class="nb">export </span><span class="nv">ANDROID_SDK_ROOT</span><span class="o">=</span>/opt/adt-bundle-mac-x86_64/sdk
</span><span class='line'><span class="nb">export </span><span class="nv">ANDROID_NDK_ROOT</span><span class="o">=</span>/opt/android-ndk
</span><span class='line'><span class="nb">export </span><span class="nv">NDK_ROOT</span><span class="o">=</span>/opt/android-ndk
</span><span class='line'><span class="nb">export </span><span class="nv">PATH</span><span class="o">=</span><span class="nv">$PATH</span>:<span class="nv">$ANDROID_NDK_ROOT</span>
</span><span class='line'><span class="nb">export </span><span class="nv">PATH</span><span class="o">=</span><span class="nv">$PATH</span>:<span class="nv">$ANDROID_SDK_ROOT</span>
</span></code></pre></td></tr></table></div></figure>


<h2>HelloWorld</h2>

<p>万事俱备, 我们现在就可以开始激动人心的Cocos2d-x之旅了.   <br/>
打开终端, 进入cocos2d-x所在目录并执行 <code>/opt/cocos2d-2.1beta3-x-2.1.1/create-android-project.sh</code>文件  <br/>
根据提示输入对应信息.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>Youngs-MacBook-Air:~ young40<span class="nv">$ </span><span class="nb">cd</span> /opt/cocos2d-2.1beta3-x-2.1.1/
</span><span class='line'>Youngs-MacBook-Air:cocos2d-2.1beta3-x-2.1.1 young40<span class="nv">$ </span>./create-android-project.sh
</span><span class='line'>use global definition of NDK_ROOT: /opt/android-ndk
</span><span class='line'>use global definition of ANDROID_SDK_ROOT: /opt/adt-bundle-mac-x86_64/sdk
</span><span class='line'>Input package path. For example: org.cocos2dx.example
</span><span class='line'>com.young40.test  //这里输入了包名
</span><span class='line'>Now cocos2d-x supports Android 2.2 or upper version
</span><span class='line'>Available Android targets:
</span><span class='line'>----------
</span><span class='line'>id: 1 or <span class="s2">&quot;android-17&quot;</span>
</span><span class='line'>     Name: Android 4.2
</span><span class='line'>     Type: Platform
</span><span class='line'>     API level: 17
</span><span class='line'>     Revision: 1
</span><span class='line'>     Skins: HVGA, QVGA, WQVGA400, WQVGA432, WSVGA, WVGA800 <span class="o">(</span>default<span class="o">)</span>, WVGA854, WXGA720, WXGA800, WXGA800-7in
</span><span class='line'>     ABIs : armeabi-v7a
</span><span class='line'>input target id:
</span><span class='line'>1 //选择您需要的平台id
</span><span class='line'>input your project name:
</span><span class='line'>HelloWorld  //输入项目名称
</span><span class='line'>Created project directory: /opt/cocos2d-2.1beta3-x-2.1.1/HelloWorld/proj.android
</span><span class='line'>
</span><span class='line'>.....
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>Updated project.properties
</span><span class='line'>Updated local.properties
</span><span class='line'>Updated file /opt/cocos2d-2.1beta3-x-2.1.1/HelloWorld/proj.android/proguard-project.txt
</span><span class='line'>Youngs-MacBook-Air:cocos2d-2.1beta3-x-2.1.1 young40<span class="nv">$ </span>
</span></code></pre></td></tr></table></div></figure>


<p>从以上输出我们可以看到<code>create-android-project.sh</code>这个脚本帮我们在 /opt/cocos2d-2.1beta3-x-2.1.1/HelloWorld 下建立了新项目.</p>

<p>然后我们可以先在终端中调用&#8221;build_native.sh&#8221;脚本编译该项目的C++部分.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>Youngs-MacBook-Air:~ young40<span class="nv">$ </span><span class="nb">cd</span> /opt/cocos2d-2.1beta3-x-2.1.1/HelloWorld/proj.android/
</span><span class='line'>Youngs-MacBook-Air:proj.android young40<span class="nv">$ </span>./build_native.sh
</span><span class='line'><span class="nv">NDK_ROOT</span> <span class="o">=</span> /opt/android-ndk
</span><span class='line'><span class="nv">COCOS2DX_ROOT</span> <span class="o">=</span> /opt/cocos2d-2.1beta3-x-2.1.1/HelloWorld/proj.android/../..
</span><span class='line'><span class="nv">APP_ROOT</span> <span class="o">=</span> /opt/cocos2d-2.1beta3-x-2.1.1/HelloWorld/proj.android/..
</span><span class='line'><span class="nv">APP_ANDROID_ROOT</span> <span class="o">=</span> /opt/cocos2d-2.1beta3-x-2.1.1/HelloWorld/proj.android
</span><span class='line'>Using prebuilt externals
</span><span class='line'>make: Entering directory <span class="sb">`</span>/opt/cocos2d-2.1beta3-x-2.1.1/HelloWorld/proj.android<span class="s1">&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="s1">.....</span>
</span><span class='line'>
</span><span class='line'><span class="s1">StaticLibrary  : libchipmunk.a</span>
</span><span class='line'><span class="s1">StaticLibrary  : libextension.a</span>
</span><span class='line'><span class="s1">SharedLibrary  : libgame.so</span>
</span><span class='line'><span class="s1">Install        : libgame.so =&gt; libs/armeabi/libgame.so</span>
</span><span class='line'><span class="s1">make: Leaving directory `/opt/cocos2d-2.1beta3-x-2.1.1/HelloWorld/proj.android&#39;</span>
</span><span class='line'>Youngs-MacBook-Air:proj.android young40<span class="nv">$ </span>
</span></code></pre></td></tr></table></div></figure>


<h2>导入Eclipse-ADT</h2>

<p>打开Eclipse-ADT, 点击快捷键<code>command+N</code>打开新建项目窗口并选择<code>Android Project from Existing Code</code>   <br/>
<img src="http://young40.github.com/upload/2013-02/set-up-c-a-osx-005-helloworld-1.png">  <br/>
<img src="http://young40.github.com/upload/2013-02/set-up-c-a-osx-006-helloworld-2.png">  <br/>
这时您可能会在eclipse的<code>Problems</code>窗口看到如下错误</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>The import org.cocos2dx.lib cannot be resolved HelloWorld.java /HelloWorld/src/com/young40/test    line 26 Java Problem
</span><span class='line'>Cocos2dxActivity cannot be resolved to a <span class="nb">type    </span>HelloWorld.java  /HelloWorld/src/com/young40/test    line 30 Java Problem
</span><span class='line'>Cocos2dxActivity cannot be resolved to a <span class="nb">type    </span>HelloWorld.java  /HelloWorld/src/com/young40/test    line 33 Java Problem
</span></code></pre></td></tr></table></div></figure>


<p>您需要将<code>/opt/cocos2d-2.1beta3-x-2.1.1/cocos2dx/platform/android/java</code>如上面处理一样也作为一个项目导入eclipse中  <br/>
然后在HelloWorld项目上点击右键选择刷新, 可以看到错误就消失了.</p>

<p>将您的手机设置成调试模式并用USB线连接到电脑, 在Eclipse中运行HelloWorld, 然后就能在手机上看到已经运行的HelloWorld了  <br/>
<img src="http://young40.github.com/upload/2013-02/set-up-c-a-osx-007-screen.png"></p>

<p>好了, 享受您的奇妙的Cocos2d-x之旅吧!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[2d-x深读4:CCAutoReleasePool]]></title>
    <link href="http://young40.github.com/blog/2013/01/03/cocos2d-x-source-code-research-4-ccautoreleasepool/"/>
    <updated>2013-01-03T15:09:00+08:00</updated>
    <id>http://young40.github.com/blog/2013/01/03/cocos2d-x-source-code-research-4-ccautoreleasepool</id>
    <content type="html"><![CDATA[<p><code>CCAutoReleasePool.h</code>主要定义了两个类<code>CCAutoReleasePool</code>和<code>CCPoolManager</code>.</p>

<p>其实因为cocos2d-x自动管理内存的原因, 所以, 我们平时很少需要直接使用这两个类.  <br/>
为了探究其中的自动管理内存的机制, 我们直接分析其代码.</p>

<p>总体上来讲, 内存管理这块的机制难度或许比较大. 我研究了一天, 还是有诸多疑问.  <br/>
暂时先放一放, 待我功力进化后再来继续研究这块.</p>

<!--more-->


<ul>
<li>版本:<code>cocos2d-2.1beta3-x-2.1.0</code></li>
<li>路径:<code>cocos2d-2.1beta3-x-2.1.0/cocos2dx/cocoa/CCAutoReleasePool.h</code></li>
<li>路径:<code>cocos2d-2.1beta3-x-2.1.0/cocos2dx/cocoa/CCAutoReleasePool.cpp</code></li>
</ul>


<figure class='code'><figcaption><span>CCAutoReleasePool&#46;h   (CCAutoReleasePool.h)</span> <a href='http://young40.github.com/downloads/code/cocos2d-x-research/2.1.1/cocos2dx/cocoa/CCAutoReleasePool.h'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="c1">// 声明CCAutoreleasePool类</span>
</span><span class='line'><span class="k">class</span> <span class="nc">CC_DLL</span> <span class="n">CCAutoreleasePool</span> <span class="o">:</span> <span class="k">public</span> <span class="n">CCObject</span>
</span><span class='line'><span class="p">{</span><span class="c1">//注意这个m_pCurReleasePool是一个私有成员. 居然没有加标号.</span>
</span><span class='line'>    <span class="n">CCArray</span><span class="o">*</span>    <span class="n">m_pManagedObjectArray</span><span class="p">;</span>
</span><span class='line'><span class="k">public</span><span class="o">:</span>
</span><span class='line'>    <span class="n">CCAutoreleasePool</span><span class="p">(</span><span class="kt">void</span><span class="p">);</span>
</span><span class='line'>    <span class="o">~</span><span class="n">CCAutoreleasePool</span><span class="p">(</span><span class="kt">void</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="kt">void</span> <span class="n">addObject</span><span class="p">(</span><span class="n">CCObject</span> <span class="o">*</span><span class="n">pObject</span><span class="p">);</span>
</span><span class='line'>    <span class="kt">void</span> <span class="n">removeObject</span><span class="p">(</span><span class="n">CCObject</span> <span class="o">*</span><span class="n">pObject</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="kt">void</span> <span class="n">clear</span><span class="p">();</span>
</span><span class='line'><span class="p">};</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">CC_DLL</span> <span class="n">CCPoolManager</span>
</span><span class='line'><span class="p">{</span><span class="c1">//下面这三个成员变量依然是私有的.</span>
</span><span class='line'>    <span class="n">CCArray</span><span class="o">*</span>    <span class="n">m_pReleasePoolStack</span><span class="p">;</span>
</span><span class='line'>    <span class="n">CCAutoreleasePool</span><span class="o">*</span>                    <span class="n">m_pCurReleasePool</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">CCAutoreleasePool</span><span class="o">*</span> <span class="n">getCurReleasePool</span><span class="p">();</span>
</span><span class='line'><span class="k">public</span><span class="o">:</span>
</span><span class='line'>    <span class="n">CCPoolManager</span><span class="p">();</span>
</span><span class='line'>    <span class="o">~</span><span class="n">CCPoolManager</span><span class="p">();</span>
</span><span class='line'>    <span class="kt">void</span> <span class="n">finalize</span><span class="p">();</span>
</span><span class='line'>    <span class="kt">void</span> <span class="n">push</span><span class="p">();</span>
</span><span class='line'>    <span class="kt">void</span> <span class="n">pop</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>    <span class="kt">void</span> <span class="n">removeObject</span><span class="p">(</span><span class="n">CCObject</span><span class="o">*</span> <span class="n">pObject</span><span class="p">);</span>
</span><span class='line'>    <span class="kt">void</span> <span class="n">addObject</span><span class="p">(</span><span class="n">CCObject</span><span class="o">*</span> <span class="n">pObject</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">static</span> <span class="n">CCPoolManager</span><span class="o">*</span> <span class="n">sharedPoolManager</span><span class="p">();</span>
</span><span class='line'>    <span class="k">static</span> <span class="kt">void</span> <span class="n">purgePoolManager</span><span class="p">();</span>
</span><span class='line'>    <span class="c1">//友元</span>
</span><span class='line'>    <span class="k">friend</span> <span class="k">class</span> <span class="nc">CCAutoreleasePool</span><span class="p">;</span>
</span><span class='line'><span class="p">};</span>
</span></code></pre></td></tr></table></div></figure>


<figure class='code'><figcaption><span>CCAutoReleasePool&#46;cpp   (CCAutoReleasePool.cpp)</span> <a href='http://young40.github.com/downloads/code/cocos2d-x-research/2.1.1/cocos2dx/cocoa/CCAutoReleasePool.cpp'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
<span class='line-number'>136</span>
<span class='line-number'>137</span>
<span class='line-number'>138</span>
<span class='line-number'>139</span>
<span class='line-number'>140</span>
<span class='line-number'>141</span>
<span class='line-number'>142</span>
<span class='line-number'>143</span>
<span class='line-number'>144</span>
<span class='line-number'>145</span>
<span class='line-number'>146</span>
<span class='line-number'>147</span>
<span class='line-number'>148</span>
<span class='line-number'>149</span>
<span class='line-number'>150</span>
<span class='line-number'>151</span>
<span class='line-number'>152</span>
<span class='line-number'>153</span>
<span class='line-number'>154</span>
<span class='line-number'>155</span>
<span class='line-number'>156</span>
<span class='line-number'>157</span>
<span class='line-number'>158</span>
<span class='line-number'>159</span>
<span class='line-number'>160</span>
<span class='line-number'>161</span>
<span class='line-number'>162</span>
<span class='line-number'>163</span>
<span class='line-number'>164</span>
<span class='line-number'>165</span>
<span class='line-number'>166</span>
<span class='line-number'>167</span>
<span class='line-number'>168</span>
<span class='line-number'>169</span>
<span class='line-number'>170</span>
<span class='line-number'>171</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="k">static</span> <span class="n">CCPoolManager</span><span class="o">*</span> <span class="n">s_pPoolManager</span> <span class="o">=</span> <span class="nb">NULL</span><span class="p">;</span><span class="c1">// 用作单例模式的静态变量.</span>
</span><span class='line'>
</span><span class='line'><span class="n">CCAutoreleasePool</span><span class="o">::</span><span class="n">CCAutoreleasePool</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">m_pManagedObjectArray</span> <span class="o">=</span> <span class="k">new</span> <span class="n">CCArray</span><span class="p">();</span>
</span><span class='line'>    <span class="n">m_pManagedObjectArray</span><span class="o">-&gt;</span><span class="n">init</span><span class="p">();</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">CCAutoreleasePool</span><span class="o">::~</span><span class="n">CCAutoreleasePool</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">CC_SAFE_DELETE</span><span class="p">(</span><span class="n">m_pManagedObjectArray</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">void</span> <span class="n">CCAutoreleasePool</span><span class="o">::</span><span class="n">addObject</span><span class="p">(</span><span class="n">CCObject</span><span class="o">*</span> <span class="n">pObject</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">m_pManagedObjectArray</span><span class="o">-&gt;</span><span class="n">addObject</span><span class="p">(</span><span class="n">pObject</span><span class="p">);</span>
</span><span class='line'>    <span class="c1">// CCAutoreleasePool是CCObject的友元类, 可以直接访问CCObject的protect成员变量.</span>
</span><span class='line'>    <span class="n">CCAssert</span><span class="p">(</span><span class="n">pObject</span><span class="o">-&gt;</span><span class="n">m_uReference</span> <span class="o">&gt;</span> <span class="mi">1</span><span class="p">,</span> <span class="s">&quot;reference count should be greater than 1&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="o">++</span><span class="p">(</span><span class="n">pObject</span><span class="o">-&gt;</span><span class="n">m_uAutoReleaseCount</span><span class="p">);</span>
</span><span class='line'>    <span class="n">pObject</span><span class="o">-&gt;</span><span class="n">release</span><span class="p">();</span> <span class="c1">// no ref count, in this case autorelease pool added.</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="c1">// 下面这个遍历似乎是为了应对被多次加入pool</span>
</span><span class='line'><span class="kt">void</span> <span class="n">CCAutoreleasePool</span><span class="o">::</span><span class="n">removeObject</span><span class="p">(</span><span class="n">CCObject</span><span class="o">*</span> <span class="n">pObject</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">for</span> <span class="p">(</span><span class="kt">unsigned</span> <span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">pObject</span><span class="o">-&gt;</span><span class="n">m_uAutoReleaseCount</span><span class="p">;</span> <span class="o">++</span><span class="n">i</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="n">m_pManagedObjectArray</span><span class="o">-&gt;</span><span class="n">removeObject</span><span class="p">(</span><span class="n">pObject</span><span class="p">,</span> <span class="kc">false</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="c1">// 清空池</span>
</span><span class='line'><span class="kt">void</span> <span class="n">CCAutoreleasePool</span><span class="o">::</span><span class="n">clear</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">if</span><span class="p">(</span><span class="n">m_pManagedObjectArray</span><span class="o">-&gt;</span><span class="n">count</span><span class="p">()</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="c1">//CCAutoreleasePool* pReleasePool;</span>
</span><span class='line'><span class="cp">#ifdef _DEBUG</span>
</span><span class='line'>        <span class="kt">int</span> <span class="n">nIndex</span> <span class="o">=</span> <span class="n">m_pManagedObjectArray</span><span class="o">-&gt;</span><span class="n">count</span><span class="p">()</span> <span class="o">-</span> <span class="mi">1</span><span class="p">;</span>
</span><span class='line'><span class="cp">#endif</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">CCObject</span><span class="o">*</span> <span class="n">pObj</span> <span class="o">=</span> <span class="nb">NULL</span><span class="p">;</span>
</span><span class='line'>        <span class="n">CCARRAY_FOREACH_REVERSE</span><span class="p">(</span><span class="n">m_pManagedObjectArray</span><span class="p">,</span> <span class="n">pObj</span><span class="p">)</span><span class="c1">//反序遍历</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>            <span class="c1">// 这里还是令人费解, 为何会使用break, 而不是使用continue完成遍历????</span>
</span><span class='line'>            <span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="n">pObj</span><span class="p">)</span>
</span><span class='line'>                <span class="k">break</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>            <span class="o">--</span><span class="p">(</span><span class="n">pObj</span><span class="o">-&gt;</span><span class="n">m_uAutoReleaseCount</span><span class="p">);</span>
</span><span class='line'>            <span class="c1">//(*it)-&gt;release();</span>
</span><span class='line'>            <span class="c1">//delete (*it);</span>
</span><span class='line'><span class="cp">#ifdef _DEBUG</span>
</span><span class='line'>            <span class="n">nIndex</span><span class="o">--</span><span class="p">;</span>
</span><span class='line'><span class="cp">#endif</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">m_pManagedObjectArray</span><span class="o">-&gt;</span><span class="n">removeAllObjects</span><span class="p">();</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// CCPoolManager的单例</span>
</span><span class='line'><span class="n">CCPoolManager</span><span class="o">*</span> <span class="n">CCPoolManager</span><span class="o">::</span><span class="n">sharedPoolManager</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">s_pPoolManager</span> <span class="o">==</span> <span class="nb">NULL</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="n">s_pPoolManager</span> <span class="o">=</span> <span class="k">new</span> <span class="n">CCPoolManager</span><span class="p">();</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">s_pPoolManager</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// 销毁当前manager</span>
</span><span class='line'><span class="kt">void</span> <span class="n">CCPoolManager</span><span class="o">::</span><span class="n">purgePoolManager</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">CC_SAFE_DELETE</span><span class="p">(</span><span class="n">s_pPoolManager</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="c1">//构造函数</span>
</span><span class='line'><span class="n">CCPoolManager</span><span class="o">::</span><span class="n">CCPoolManager</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">m_pReleasePoolStack</span> <span class="o">=</span> <span class="k">new</span> <span class="n">CCArray</span><span class="p">();</span>
</span><span class='line'>    <span class="n">m_pReleasePoolStack</span><span class="o">-&gt;</span><span class="n">init</span><span class="p">();</span>
</span><span class='line'>    <span class="n">m_pCurReleasePool</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="c1">// 析构函数</span>
</span><span class='line'><span class="n">CCPoolManager</span><span class="o">::~</span><span class="n">CCPoolManager</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>     <span class="n">finalize</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>     <span class="c1">// 这个注释也让人费解. 为什么只移除第一个, 而不是遍历????</span>
</span><span class='line'>     <span class="c1">// we only release the last autorelease pool here </span>
</span><span class='line'>    <span class="n">m_pCurReleasePool</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>     <span class="n">m_pReleasePoolStack</span><span class="o">-&gt;</span><span class="n">removeObjectAtIndex</span><span class="p">(</span><span class="mi">0</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>     <span class="n">CC_SAFE_DELETE</span><span class="p">(</span><span class="n">m_pReleasePoolStack</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">void</span> <span class="n">CCPoolManager</span><span class="o">::</span><span class="n">finalize</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">if</span><span class="p">(</span><span class="n">m_pReleasePoolStack</span><span class="o">-&gt;</span><span class="n">count</span><span class="p">()</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="c1">//CCAutoreleasePool* pReleasePool;</span>
</span><span class='line'>        <span class="n">CCObject</span><span class="o">*</span> <span class="n">pObj</span> <span class="o">=</span> <span class="nb">NULL</span><span class="p">;</span>
</span><span class='line'>        <span class="n">CCARRAY_FOREACH</span><span class="p">(</span><span class="n">m_pReleasePoolStack</span><span class="p">,</span> <span class="n">pObj</span><span class="p">)</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>            <span class="c1">// 这里有点令人不解, 为什么遍历还没有完成就break了??? </span>
</span><span class='line'>            <span class="c1">// 或许是因为pop push的方式不会在中间产生为NULL的池.</span>
</span><span class='line'>            <span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="n">pObj</span><span class="p">)</span>
</span><span class='line'>                <span class="k">break</span><span class="p">;</span>
</span><span class='line'>            <span class="n">CCAutoreleasePool</span><span class="o">*</span> <span class="n">pPool</span> <span class="o">=</span> <span class="p">(</span><span class="n">CCAutoreleasePool</span><span class="o">*</span><span class="p">)</span><span class="n">pObj</span><span class="p">;</span>
</span><span class='line'>            <span class="n">pPool</span><span class="o">-&gt;</span><span class="n">clear</span><span class="p">();</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="c1">//创建一个新池, 注意其中pPool的引用计数的变化.</span>
</span><span class='line'><span class="kt">void</span> <span class="n">CCPoolManager</span><span class="o">::</span><span class="n">push</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">CCAutoreleasePool</span><span class="o">*</span> <span class="n">pPool</span> <span class="o">=</span> <span class="k">new</span> <span class="n">CCAutoreleasePool</span><span class="p">();</span>       <span class="c1">//ref = 1</span>
</span><span class='line'>    <span class="n">m_pCurReleasePool</span> <span class="o">=</span> <span class="n">pPool</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">m_pReleasePoolStack</span><span class="o">-&gt;</span><span class="n">addObject</span><span class="p">(</span><span class="n">pPool</span><span class="p">);</span>                   <span class="c1">//ref = 2</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">pPool</span><span class="o">-&gt;</span><span class="n">release</span><span class="p">();</span>                                       <span class="c1">//ref = 1</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="c1">//销毁当前池</span>
</span><span class='line'><span class="kt">void</span> <span class="n">CCPoolManager</span><span class="o">::</span><span class="n">pop</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="o">!</span> <span class="n">m_pCurReleasePool</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="k">return</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>     <span class="kt">int</span> <span class="n">nCount</span> <span class="o">=</span> <span class="n">m_pReleasePoolStack</span><span class="o">-&gt;</span><span class="n">count</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">m_pCurReleasePool</span><span class="o">-&gt;</span><span class="n">clear</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>      <span class="k">if</span><span class="p">(</span><span class="n">nCount</span> <span class="o">&gt;</span> <span class="mi">1</span><span class="p">)</span>
</span><span class='line'>      <span class="p">{</span><span class="c1">//注意这里removeObjectAtIndex会将当前池的引用技术减1, 从而销毁当前池.</span>
</span><span class='line'>        <span class="n">m_pReleasePoolStack</span><span class="o">-&gt;</span><span class="n">removeObjectAtIndex</span><span class="p">(</span><span class="n">nCount</span><span class="o">-</span><span class="mi">1</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//         if(nCount &gt; 1)</span>
</span><span class='line'><span class="c1">//         {</span>
</span><span class='line'><span class="c1">//             m_pCurReleasePool = m_pReleasePoolStack-&gt;objectAtIndex(nCount - 2);</span>
</span><span class='line'><span class="c1">//             return;</span>
</span><span class='line'><span class="c1">//         }</span>
</span><span class='line'>        <span class="n">m_pCurReleasePool</span> <span class="o">=</span> <span class="p">(</span><span class="n">CCAutoreleasePool</span><span class="o">*</span><span class="p">)</span><span class="n">m_pReleasePoolStack</span><span class="o">-&gt;</span><span class="n">objectAtIndex</span><span class="p">(</span><span class="n">nCount</span> <span class="o">-</span> <span class="mi">2</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="c1">//如果没有意外, 这里会最少保留一个池不会被销毁. 但最后一个池还是会被清空..</span>
</span><span class='line'>    <span class="cm">/*m_pCurReleasePool = NULL;*/</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="c1">// 从当前池中移除对象.</span>
</span><span class='line'><span class="kt">void</span> <span class="n">CCPoolManager</span><span class="o">::</span><span class="n">removeObject</span><span class="p">(</span><span class="n">CCObject</span><span class="o">*</span> <span class="n">pObject</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">CCAssert</span><span class="p">(</span><span class="n">m_pCurReleasePool</span><span class="p">,</span> <span class="s">&quot;current auto release pool should not be null&quot;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">m_pCurReleasePool</span><span class="o">-&gt;</span><span class="n">removeObject</span><span class="p">(</span><span class="n">pObject</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="c1">//添加一个对象到当前池</span>
</span><span class='line'><span class="kt">void</span> <span class="n">CCPoolManager</span><span class="o">::</span><span class="n">addObject</span><span class="p">(</span><span class="n">CCObject</span><span class="o">*</span> <span class="n">pObject</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">getCurReleasePool</span><span class="p">()</span><span class="o">-&gt;</span><span class="n">addObject</span><span class="p">(</span><span class="n">pObject</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//形成单例模式</span>
</span><span class='line'><span class="n">CCAutoreleasePool</span><span class="o">*</span> <span class="n">CCPoolManager</span><span class="o">::</span><span class="n">getCurReleasePool</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="n">m_pCurReleasePool</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="n">push</span><span class="p">();</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">CCAssert</span><span class="p">(</span><span class="n">m_pCurReleasePool</span><span class="p">,</span> <span class="s">&quot;current auto release pool should not be null&quot;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="n">m_pCurReleasePool</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>参考1: http://4137613.blog.51cto.com/4127613/784134</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[2d-x深读3:CCObject]]></title>
    <link href="http://young40.github.com/blog/2012/12/31/cocos2d-x-source-code-research-3-ccobject/"/>
    <updated>2012-12-31T17:21:00+08:00</updated>
    <id>http://young40.github.com/blog/2012/12/31/cocos2d-x-source-code-research-3-ccobject</id>
    <content type="html"><![CDATA[<p>CCObject是绝大部分cocos2d-x类的基类, 我们就从这里一步一步揭开cocos2d-x的奥秘.</p>

<p>CCObject承担了两个重要的功能, 拷贝机制和内存管理.</p>

<h2>拷贝机制</h2>

<p>打开<code>CCObject.h</code> 首先看到的是类CCCopying, 而CCObject是从该类派生. 从这个意义上来讲CCCopying才是大部分类的基类. <br/>
但CCCopying其实非常简单, 再加上没有其他类从CCCopying派生, 所以说CCObject才是大部分类的基类也是不错的. 我认为CCCopying仅仅是一个接口性质.</p>

<p>CCCopying这个类非常简单, 只有一个成员函数copyWithZone(CCZone *pZone); 简单到其实现只是为了报错. 尽管如此, 但其却承担了拷贝机制这一重要的功能.</p>

<p>cocos2d-x和cocos2d-iphone是近亲, 所以cocos2d-x在API上会和cocos2d-iphone保持一致, 代码上也多有借鉴. CCObject明显就有很多NSObject的痕迹.
当然我对Objective-c并不熟悉, 这里都是些猜测罢了. copyWithZone或许就是借鉴了Obj-c.</p>

<p>我们先来看下拷贝机制, 至于CCObject的代码倒不忙着看.</p>

<!--more-->


<p>这两段代码来至于类CCArray, 我们可以看到调用了原对象的copy()来拷贝一份新的CCArray.<br/>
而copy()则定义于CCObject中, 其工作就是调用copyWithZone.</p>

<figure class='code'><figcaption><span>CCArray</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="n">CCArray</span><span class="o">*</span> <span class="n">CCArray</span><span class="o">::</span><span class="n">createWithArray</span><span class="p">(</span><span class="n">CCArray</span><span class="o">*</span> <span class="n">otherArray</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">CCArray</span><span class="o">*</span> <span class="n">pRet</span> <span class="o">=</span> <span class="p">(</span><span class="n">CCArray</span><span class="o">*</span><span class="p">)</span><span class="n">otherArray</span><span class="o">-&gt;</span><span class="n">copy</span><span class="p">();</span>
</span><span class='line'>    <span class="n">pRet</span><span class="o">-&gt;</span><span class="n">autorelease</span><span class="p">();</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">pRet</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="c1">/////----------////</span>
</span><span class='line'><span class="n">CCObject</span><span class="o">*</span> <span class="n">CCArray</span><span class="o">::</span><span class="n">copyWithZone</span><span class="p">(</span><span class="n">CCZone</span><span class="o">*</span> <span class="n">pZone</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">CCAssert</span><span class="p">(</span><span class="n">pZone</span> <span class="o">==</span> <span class="nb">NULL</span><span class="p">,</span> <span class="s">&quot;CCArray should not be inherited.&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="n">CCArray</span><span class="o">*</span> <span class="n">pArray</span> <span class="o">=</span> <span class="k">new</span> <span class="n">CCArray</span><span class="p">();</span>
</span><span class='line'>    <span class="n">pArray</span><span class="o">-&gt;</span><span class="n">initWithCapacity</span><span class="p">(</span><span class="k">this</span><span class="o">-&gt;</span><span class="n">data</span><span class="o">-&gt;</span><span class="n">num</span> <span class="o">&gt;</span> <span class="mi">0</span> <span class="o">?</span> <span class="k">this</span><span class="o">-&gt;</span><span class="n">data</span><span class="o">-&gt;</span><span class="n">num</span> <span class="o">:</span> <span class="mi">1</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">CCObject</span><span class="o">*</span> <span class="n">pObj</span> <span class="o">=</span> <span class="nb">NULL</span><span class="p">;</span>
</span><span class='line'>    <span class="n">CCObject</span><span class="o">*</span> <span class="n">pTmpObj</span> <span class="o">=</span> <span class="nb">NULL</span><span class="p">;</span>
</span><span class='line'>    <span class="n">CCARRAY_FOREACH</span><span class="p">(</span><span class="k">this</span><span class="p">,</span> <span class="n">pObj</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="n">pTmpObj</span> <span class="o">=</span> <span class="n">pObj</span><span class="o">-&gt;</span><span class="n">copy</span><span class="p">();</span>
</span><span class='line'>        <span class="n">pArray</span><span class="o">-&gt;</span><span class="n">addObject</span><span class="p">(</span><span class="n">pTmpObj</span><span class="p">);</span>
</span><span class='line'>        <span class="n">pTmpObj</span><span class="o">-&gt;</span><span class="n">release</span><span class="p">();</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">pArray</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>这里面牵涉到两个概念, 深拷贝和浅拷贝. 不清楚的大家可以搜索下, 简而言之, 深拷贝才真正的完全拷贝. cocos2d-x实现的是深拷贝. <br/>
我们在上面CCArray::copyWithZone中可以看到拷贝时对array的各个成员也执行了copy()的动作. <br/>
这样才能防止如果obj2是obj1的浅拷贝, 很容易出现array的元素有可能被过早释放的情况.</p>

<p>这里我们还可以一并说下CCZone这个类, 这个类也很简单, 只有一个构造函数和成员变量.</p>

<figure class='code'><figcaption><span>CCZone</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="k">class</span> <span class="nc">CC_DLL</span> <span class="n">CCZone</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'><span class="k">public</span><span class="o">:</span>
</span><span class='line'>    <span class="n">CCZone</span><span class="p">(</span><span class="n">CCObject</span> <span class="o">*</span><span class="n">pObject</span> <span class="o">=</span> <span class="nb">NULL</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="k">public</span><span class="o">:</span>
</span><span class='line'>    <span class="n">CCObject</span> <span class="o">*</span><span class="n">m_pCopyObject</span><span class="p">;</span>
</span><span class='line'><span class="p">};</span>
</span></code></pre></td></tr></table></div></figure>


<p>我想CCZone存在的目的就是为了调用copyWithZone的时候对象传递方便.比如我们还可以看下CCSpeed的copyWithZone函数.</p>

<figure class='code'><figcaption><span>CCSpeed</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="n">CCObject</span> <span class="o">*</span><span class="n">CCSpeed</span><span class="o">::</span><span class="n">copyWithZone</span><span class="p">(</span><span class="n">CCZone</span> <span class="o">*</span><span class="n">pZone</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">CCZone</span><span class="o">*</span> <span class="n">pNewZone</span> <span class="o">=</span> <span class="nb">NULL</span><span class="p">;</span>
</span><span class='line'>    <span class="n">CCSpeed</span><span class="o">*</span> <span class="n">pRet</span> <span class="o">=</span> <span class="nb">NULL</span><span class="p">;</span>
</span><span class='line'>    <span class="k">if</span><span class="p">(</span><span class="n">pZone</span> <span class="o">&amp;&amp;</span> <span class="n">pZone</span><span class="o">-&gt;</span><span class="n">m_pCopyObject</span><span class="p">)</span> <span class="c1">//in case of being called at sub class</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="n">pRet</span> <span class="o">=</span> <span class="p">(</span><span class="n">CCSpeed</span><span class="o">*</span><span class="p">)(</span><span class="n">pZone</span><span class="o">-&gt;</span><span class="n">m_pCopyObject</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">else</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="n">pRet</span> <span class="o">=</span> <span class="k">new</span> <span class="n">CCSpeed</span><span class="p">();</span>
</span><span class='line'>        <span class="n">pZone</span> <span class="o">=</span> <span class="n">pNewZone</span> <span class="o">=</span> <span class="k">new</span> <span class="n">CCZone</span><span class="p">(</span><span class="n">pRet</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="n">CCAction</span><span class="o">::</span><span class="n">copyWithZone</span><span class="p">(</span><span class="n">pZone</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">pRet</span><span class="o">-&gt;</span><span class="n">initWithAction</span><span class="p">(</span> <span class="p">(</span><span class="n">CCActionInterval</span><span class="o">*</span><span class="p">)(</span><span class="n">m_pInnerAction</span><span class="o">-&gt;</span><span class="n">copy</span><span class="p">()</span><span class="o">-&gt;</span><span class="n">autorelease</span><span class="p">())</span> <span class="p">,</span> <span class="n">m_fSpeed</span> <span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">CC_SAFE_DELETE</span><span class="p">(</span><span class="n">pNewZone</span><span class="p">);</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">pRet</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>我们可以看到构建了一个pZone, 然后调用父类的<code>CCAction::copyWithZone(pZone);</code>. <br/>
完全是为了copyWithZone方便传递变量而创建的.</p>

<p>拷贝机制看起来有点复杂, 但其实用起来很简单. 我觉得就两点, 1,使用copy()调用 2.各个类对自己的copyWithZone负责.</p>

<h2>内存管理</h2>

<p>cocos2d-x的内存管理采用了引用计数的方法. 曾经看到过有人吐槽其内存管理在多线程下不好用.</p>

<p>CCObject及其子类的对象在创建时, 引用计数默认为1, 每次retain后引用计数加1. 每次release后引用计数减1.
被自动管理的对象引用计数为0时, 会被自动释放.</p>

<p>老G总结的内存管理使用的几点原则(见参考1): <br/>
- 原则1: 谁生成(new, copy)谁负责release. <br/>
- 原则2: 谁retain, 谁负责release.  <br/>
- 原则3: 对于使用了autorelease的对象则不必管他.</p>

<h2>几个常用的函数指针</h2>

<p>当我看到下面这两句的时候, 我完全懵了.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="k">typedef</span> <span class="kt">void</span> <span class="p">(</span><span class="n">CCObject</span><span class="o">::*</span><span class="n">SEL_SCHEDULE</span><span class="p">)(</span><span class="kt">float</span><span class="p">);</span>
</span><span class='line'><span class="cp">#define schedule_selector(_SELECTOR) (SEL_SCHEDULE)(&amp;_SELECTOR)</span>
</span></code></pre></td></tr></table></div></figure>


<p>
如果你也对函数指针不熟悉的话, 请翻下相关内容吧.
在这两句里面, 第一句其实是定义了一个返回类型为void的, 名字为SEL_SCHEDULE的, 参数为float的函数指针. <br/>
第二句其实是一个函数类型转换, 将(&amp;_SELECTOR)强制转换成SEL_SCHEDULE类型的函数指针.</p>

<p>通常需要回调函数的时候, 就需要用到这些函数指针. 这里就不再赘述, 以后应该会提及相关知识.</p>

<p>好, 我们接下来直接翻代码吧.</p>

<ul>
<li>版本:<code>cocos2d-2.1beta3-x-2.1.0</code></li>
<li>路径:<code>cocos2d-2.1beta3-x-2.1.0/cocos2dx/cocoa/CCObject.h</code></li>
<li>路径:<code>cocos2d-2.1beta3-x-2.1.0/cocos2dx/cocoa/CCObject.cpp</code></li>
</ul>


<figure class='code'><figcaption><span>CCobject&#46;h   (CCObject.h)</span> <a href='http://young40.github.com/downloads/code/cocos2d-x-research/2.1.1/cocos2dx/cocoa/CCObject.h'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="k">class</span> <span class="nc">CC_DLL</span> <span class="n">CCCopying</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'><span class="k">public</span><span class="o">:</span>
</span><span class='line'>    <span class="k">virtual</span> <span class="n">CCObject</span><span class="o">*</span> <span class="n">copyWithZone</span><span class="p">(</span><span class="n">CCZone</span><span class="o">*</span> <span class="n">pZone</span><span class="p">);</span>
</span><span class='line'><span class="p">};</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">CC_DLL</span> <span class="n">CCObject</span> <span class="o">:</span> <span class="k">public</span> <span class="n">CCCopying</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'><span class="k">public</span><span class="o">:</span>
</span><span class='line'>    <span class="kt">unsigned</span> <span class="kt">int</span>        <span class="n">m_uID</span><span class="p">;</span><span class="c1">//这两个是支持lua等脚本语言用的, 我们不去管他.</span>
</span><span class='line'>    <span class="kt">int</span>                 <span class="n">m_nLuaID</span><span class="p">;</span>
</span><span class='line'><span class="k">protected</span><span class="o">:</span>
</span><span class='line'>    <span class="kt">unsigned</span> <span class="kt">int</span>        <span class="n">m_uReference</span><span class="p">;</span><span class="c1">//引用计数</span>
</span><span class='line'>    <span class="kt">unsigned</span> <span class="kt">int</span>        <span class="n">m_uAutoReleaseCount</span><span class="p">;</span><span class="c1">//autorelease计数</span>
</span><span class='line'><span class="k">public</span><span class="o">:</span>
</span><span class='line'>    <span class="n">CCObject</span><span class="p">(</span><span class="kt">void</span><span class="p">);</span>
</span><span class='line'>    <span class="k">virtual</span> <span class="o">~</span><span class="n">CCObject</span><span class="p">(</span><span class="kt">void</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="kt">void</span> <span class="n">release</span><span class="p">(</span><span class="kt">void</span><span class="p">);</span>
</span><span class='line'>    <span class="kt">void</span> <span class="n">retain</span><span class="p">(</span><span class="kt">void</span><span class="p">);</span>
</span><span class='line'>    <span class="n">CCObject</span><span class="o">*</span> <span class="n">autorelease</span><span class="p">(</span><span class="kt">void</span><span class="p">);</span>
</span><span class='line'>    <span class="n">CCObject</span><span class="o">*</span> <span class="n">copy</span><span class="p">(</span><span class="kt">void</span><span class="p">);</span>
</span><span class='line'>    <span class="kt">bool</span> <span class="n">isSingleReference</span><span class="p">(</span><span class="kt">void</span><span class="p">);</span>
</span><span class='line'>    <span class="kt">unsigned</span> <span class="kt">int</span> <span class="n">retainCount</span><span class="p">(</span><span class="kt">void</span><span class="p">);</span>
</span><span class='line'>    <span class="k">virtual</span> <span class="kt">bool</span> <span class="n">isEqual</span><span class="p">(</span><span class="k">const</span> <span class="n">CCObject</span><span class="o">*</span> <span class="n">pObject</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">virtual</span> <span class="kt">void</span> <span class="n">update</span><span class="p">(</span><span class="kt">float</span> <span class="n">dt</span><span class="p">)</span> <span class="p">{</span><span class="n">CC_UNUSED_PARAM</span><span class="p">(</span><span class="n">dt</span><span class="p">);};</span>
</span><span class='line'>   <span class="c1">//CCAutoreleasePool作为友元类 </span>
</span><span class='line'>    <span class="k">friend</span> <span class="k">class</span> <span class="nc">CCAutoreleasePool</span><span class="p">;</span>
</span><span class='line'><span class="p">};</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//几个常用的函数指针.</span>
</span><span class='line'><span class="k">typedef</span> <span class="kt">void</span> <span class="p">(</span><span class="n">CCObject</span><span class="o">::*</span><span class="n">SEL_SCHEDULE</span><span class="p">)(</span><span class="kt">float</span><span class="p">);</span>
</span><span class='line'><span class="k">typedef</span> <span class="kt">void</span> <span class="p">(</span><span class="n">CCObject</span><span class="o">::*</span><span class="n">SEL_CallFunc</span><span class="p">)();</span>
</span><span class='line'><span class="k">typedef</span> <span class="kt">void</span> <span class="p">(</span><span class="n">CCObject</span><span class="o">::*</span><span class="n">SEL_CallFuncN</span><span class="p">)(</span><span class="n">CCNode</span><span class="o">*</span><span class="p">);</span>
</span><span class='line'><span class="k">typedef</span> <span class="kt">void</span> <span class="p">(</span><span class="n">CCObject</span><span class="o">::*</span><span class="n">SEL_CallFuncND</span><span class="p">)(</span><span class="n">CCNode</span><span class="o">*</span><span class="p">,</span> <span class="kt">void</span><span class="o">*</span><span class="p">);</span>
</span><span class='line'><span class="k">typedef</span> <span class="kt">void</span> <span class="p">(</span><span class="n">CCObject</span><span class="o">::*</span><span class="n">SEL_CallFuncO</span><span class="p">)(</span><span class="n">CCObject</span><span class="o">*</span><span class="p">);</span>
</span><span class='line'><span class="k">typedef</span> <span class="kt">void</span> <span class="p">(</span><span class="n">CCObject</span><span class="o">::*</span><span class="n">SEL_MenuHandler</span><span class="p">)(</span><span class="n">CCObject</span><span class="o">*</span><span class="p">);</span>
</span><span class='line'><span class="k">typedef</span> <span class="kt">void</span> <span class="p">(</span><span class="n">CCObject</span><span class="o">::*</span><span class="n">SEL_EventHandler</span><span class="p">)(</span><span class="n">CCEvent</span><span class="o">*</span><span class="p">);</span>
</span><span class='line'><span class="k">typedef</span> <span class="kt">int</span> <span class="p">(</span><span class="n">CCObject</span><span class="o">::*</span><span class="n">SEL_Compare</span><span class="p">)(</span><span class="n">CCObject</span><span class="o">*</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#define schedule_selector(_SELECTOR) (SEL_SCHEDULE)(&amp;_SELECTOR)</span>
</span><span class='line'><span class="cp">#define callfunc_selector(_SELECTOR) (SEL_CallFunc)(&amp;_SELECTOR)</span>
</span><span class='line'><span class="cp">#define callfuncN_selector(_SELECTOR) (SEL_CallFuncN)(&amp;_SELECTOR)</span>
</span><span class='line'><span class="cp">#define callfuncND_selector(_SELECTOR) (SEL_CallFuncND)(&amp;_SELECTOR)</span>
</span><span class='line'><span class="cp">#define callfuncO_selector(_SELECTOR) (SEL_CallFuncO)(&amp;_SELECTOR)</span>
</span><span class='line'><span class="cp">#define menu_selector(_SELECTOR) (SEL_MenuHandler)(&amp;_SELECTOR)</span>
</span><span class='line'><span class="cp">#define event_selector(_SELECTOR) (SEL_EventHandler)(&amp;_SELECTOR)</span>
</span><span class='line'><span class="cp">#define compare_selector(_SELECTOR) (SEL_Compare)(&amp;_SELECTOR)</span>
</span></code></pre></td></tr></table></div></figure>


<figure class='code'><figcaption><span>CCobject&#46;cpp   (CCObject.cpp)</span> <a href='http://young40.github.com/downloads/code/cocos2d-x-research/2.1.1/cocos2dx/cocoa/CCObject.cpp'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="n">CCObject</span><span class="o">*</span> <span class="n">CCCopying</span><span class="o">::</span><span class="n">copyWithZone</span><span class="p">(</span><span class="n">CCZone</span> <span class="o">*</span><span class="n">pZone</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span><span class="c1">//CCObject的派生类需要调用copy()则必须重写该函数</span>
</span><span class='line'>    <span class="n">CC_UNUSED_PARAM</span><span class="p">(</span><span class="n">pZone</span><span class="p">);</span>
</span><span class='line'>    <span class="n">CCAssert</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="s">&quot;not implement&quot;</span><span class="p">);</span><span class="c1">//不重写会报错.</span>
</span><span class='line'>    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">CCObject</span><span class="o">::</span><span class="n">CCObject</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span>
</span><span class='line'><span class="o">:</span><span class="n">m_uAutoReleaseCount</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span>
</span><span class='line'><span class="p">,</span><span class="n">m_uReference</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span> <span class="c1">// 引用计数默认为1</span>
</span><span class='line'><span class="p">,</span><span class="n">m_nLuaID</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">static</span> <span class="kt">unsigned</span> <span class="kt">int</span> <span class="n">uObjectCount</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>    <span class="n">m_uID</span> <span class="o">=</span> <span class="o">++</span><span class="n">uObjectCount</span><span class="p">;</span><span class="c1">//脚本语言相关, 不去管他.</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">CCObject</span><span class="o">::~</span><span class="n">CCObject</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span><span class="c1">//析构函数</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">m_uAutoReleaseCount</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span><span class="c1">//自动引用计数则从管理池中删除</span>
</span><span class='line'>        <span class="n">CCPoolManager</span><span class="o">::</span><span class="n">sharedPoolManager</span><span class="p">()</span><span class="o">-&gt;</span><span class="n">removeObject</span><span class="p">(</span><span class="k">this</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">m_nLuaID</span><span class="p">)</span><span class="c1">//脚本语言相关.</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="n">CCScriptEngineManager</span><span class="o">::</span><span class="n">sharedManager</span><span class="p">()</span><span class="o">-&gt;</span><span class="n">getScriptEngine</span><span class="p">()</span><span class="o">-&gt;</span><span class="n">removeScriptObjectByCCObject</span><span class="p">(</span><span class="k">this</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">else</span>
</span><span class='line'>    <span class="p">{</span><span class="c1">//看起来脚本语言支持被深度嵌入, 如果能设置个宏直接去掉其支持多好.</span>
</span><span class='line'>        <span class="n">CCScriptEngineProtocol</span><span class="o">*</span> <span class="n">pEngine</span> <span class="o">=</span> <span class="n">CCScriptEngineManager</span><span class="o">::</span><span class="n">sharedManager</span><span class="p">()</span><span class="o">-&gt;</span><span class="n">getScriptEngine</span><span class="p">();</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="n">pEngine</span> <span class="o">!=</span> <span class="nb">NULL</span> <span class="o">&amp;&amp;</span> <span class="n">pEngine</span><span class="o">-&gt;</span><span class="n">getScriptType</span><span class="p">()</span> <span class="o">==</span> <span class="n">kScriptTypeJavascript</span><span class="p">)</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>            <span class="n">pEngine</span><span class="o">-&gt;</span><span class="n">removeScriptObjectByCCObject</span><span class="p">(</span><span class="k">this</span><span class="p">);</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="c1">// copy实质上是对copyWithZone的调用.</span>
</span><span class='line'><span class="n">CCObject</span><span class="o">*</span> <span class="n">CCObject</span><span class="o">::</span><span class="n">copy</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">copyWithZone</span><span class="p">(</span><span class="mi">0</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">void</span> <span class="n">CCObject</span><span class="o">::</span><span class="n">release</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">CCAssert</span><span class="p">(</span><span class="n">m_uReference</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">,</span> <span class="s">&quot;reference count should greater than 0&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="o">--</span><span class="n">m_uReference</span><span class="p">;</span><span class="c1">//引用计数自减</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">m_uReference</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span><span class="c1">//如果引用计数为0, 调用release会立即释放内存.</span>
</span><span class='line'>        <span class="k">delete</span> <span class="k">this</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">void</span> <span class="n">CCObject</span><span class="o">::</span><span class="n">retain</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">CCAssert</span><span class="p">(</span><span class="n">m_uReference</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">,</span> <span class="s">&quot;reference count should greater than 0&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="o">++</span><span class="n">m_uReference</span><span class="p">;</span><span class="c1">//引用计数自增.</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">CCObject</span><span class="o">*</span> <span class="n">CCObject</span><span class="o">::</span><span class="n">autorelease</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span><span class="c1">//autorelease将对象加入自动内存管理池.</span>
</span><span class='line'>    <span class="n">CCPoolManager</span><span class="o">::</span><span class="n">sharedPoolManager</span><span class="p">()</span><span class="o">-&gt;</span><span class="n">addObject</span><span class="p">(</span><span class="k">this</span><span class="p">);</span>
</span><span class='line'>    <span class="k">return</span> <span class="k">this</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">bool</span> <span class="n">CCObject</span><span class="o">::</span><span class="n">isSingleReference</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span><span class="c1">//判断对象是否仅被引用了一次</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">m_uReference</span> <span class="o">==</span> <span class="mi">1</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">unsigned</span> <span class="kt">int</span> <span class="n">CCObject</span><span class="o">::</span><span class="n">retainCount</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span><span class="c1">//返回引用次数</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">m_uReference</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">bool</span> <span class="n">CCObject</span><span class="o">::</span><span class="n">isEqual</span><span class="p">(</span><span class="k">const</span> <span class="n">CCObject</span> <span class="o">*</span><span class="n">pObject</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span><span class="c1">//判断对象是否为同一个对象.</span>
</span><span class='line'>    <span class="k">return</span> <span class="k">this</span> <span class="o">==</span> <span class="n">pObject</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>参考1: http://4137613.blog.51cto.com/4127613/784134</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[一步一步CocosBuilder(4)[完结]]]></title>
    <link href="http://young40.github.com/blog/2012/12/29/cocosbuilder-step-by-step-part-four/"/>
    <updated>2012-12-29T10:54:00+08:00</updated>
    <id>http://young40.github.com/blog/2012/12/29/cocosbuilder-step-by-step-part-four</id>
    <content type="html"><![CDATA[<p>这一节也是很轻松, 主要是牵涉到Timeline的切换. 其他的都是简单的界面制作. <br/>
所以CocosBuilder的威力也体现在这里, 很少的代码就能驱动界面了.</p>

<p>我们这次先做<code>Particle System</code>, <code>Scroll View</code>, 最后以<code>Animations</code>收官.</p>

<h5>1</h5>

<p>制作<code>Particle System</code>和<code>Scroll View</code>的界面很简单,我们也是以程序为重点, 所以不再赘述. <br/>
只需要一句<code>this-&gt;openTest("ccb/Scroll.ccbi");</code>就可以调用新的界面了. <br/>
其他诸如绑定之类相信大家已经是轻车熟路啦.</p>

<!--more-->


<p><img src="http://young40.github.com/upload/2012-12/ccb-sbs-4-001.png">
<img src="http://young40.github.com/upload/2012-12/ccb-sbs-4-002.png"></p>

<h5>2</h5>

<p>好吧, 我承认一点, 制作<code>Animations</code>的界面的时候, 我直接复制了例子中的节点. <br/>
5个Timeline, 还是很复杂的, 应该是一个非常精细的工作. 向美术们致敬.</p>

<figure class='code'><figcaption><span>AnimationsLayer.h</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="k">class</span> <span class="nc">AnimationsLayer</span>
</span><span class='line'><span class="o">:</span> <span class="k">public</span> <span class="n">cocos2d</span><span class="o">::</span><span class="n">CCLayer</span>
</span><span class='line'><span class="p">,</span> <span class="k">public</span> <span class="n">cocos2d</span><span class="o">::</span><span class="n">extension</span><span class="o">::</span><span class="n">CCBSelectorResolver</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'><span class="k">public</span><span class="o">:</span>
</span><span class='line'>    <span class="n">AnimationsLayer</span><span class="p">();</span>
</span><span class='line'>    <span class="o">~</span><span class="n">AnimationsLayer</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">CCB_STATIC_NEW_AUTORELEASE_OBJECT_WITH_INIT_METHOD</span><span class="p">(</span><span class="n">AnimationsLayer</span><span class="p">,</span> <span class="n">create</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">virtual</span> <span class="n">cocos2d</span><span class="o">::</span><span class="n">SEL_MenuHandler</span> <span class="n">onResolveCCBCCMenuItemSelector</span><span class="p">(</span><span class="n">CCObject</span> <span class="o">*</span> <span class="n">pTarget</span><span class="p">,</span> <span class="k">const</span> <span class="kt">char</span><span class="o">*</span> <span class="n">pSelectorName</span><span class="p">);</span>
</span><span class='line'>    <span class="k">virtual</span> <span class="n">cocos2d</span><span class="o">::</span><span class="n">extension</span><span class="o">::</span><span class="n">SEL_CCControlHandler</span> <span class="n">onResolveCCBCCControlSelector</span><span class="p">(</span><span class="n">CCObject</span> <span class="o">*</span> <span class="n">pTarget</span><span class="p">,</span> <span class="k">const</span> <span class="kt">char</span><span class="o">*</span> <span class="n">pSelectorName</span><span class="p">);</span>
</span><span class='line'>    <span class="kt">void</span> <span class="n">setAnimationManager</span><span class="p">(</span><span class="n">cocos2d</span><span class="o">::</span><span class="n">extension</span><span class="o">::</span><span class="n">CCBAnimationManager</span> <span class="o">*</span><span class="n">pAnimationManager</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="kt">void</span> <span class="n">onIdle</span><span class="p">(</span><span class="n">cocos2d</span><span class="o">::</span><span class="n">CCObject</span> <span class="o">*</span> <span class="n">pSender</span><span class="p">,</span> <span class="n">cocos2d</span><span class="o">::</span><span class="n">extension</span><span class="o">::</span><span class="n">CCControlEvent</span> <span class="n">pCCControlEvent</span><span class="p">);</span>
</span><span class='line'>    <span class="kt">void</span> <span class="n">onWave</span><span class="p">(</span><span class="n">cocos2d</span><span class="o">::</span><span class="n">CCObject</span> <span class="o">*</span> <span class="n">pSender</span><span class="p">,</span> <span class="n">cocos2d</span><span class="o">::</span><span class="n">extension</span><span class="o">::</span><span class="n">CCControlEvent</span> <span class="n">pCCControlEvent</span><span class="p">);</span>
</span><span class='line'>    <span class="kt">void</span> <span class="n">onJump</span><span class="p">(</span><span class="n">cocos2d</span><span class="o">::</span><span class="n">CCObject</span> <span class="o">*</span> <span class="n">pSender</span><span class="p">,</span> <span class="n">cocos2d</span><span class="o">::</span><span class="n">extension</span><span class="o">::</span><span class="n">CCControlEvent</span> <span class="n">pCCControlEvent</span><span class="p">);</span>
</span><span class='line'>    <span class="kt">void</span> <span class="n">onFunky</span><span class="p">(</span><span class="n">cocos2d</span><span class="o">::</span><span class="n">CCObject</span> <span class="o">*</span> <span class="n">pSender</span><span class="p">,</span> <span class="n">cocos2d</span><span class="o">::</span><span class="n">extension</span><span class="o">::</span><span class="n">CCControlEvent</span> <span class="n">pCCControlEvent</span><span class="p">);</span>
</span><span class='line'><span class="k">private</span><span class="o">:</span>
</span><span class='line'>    <span class="n">cocos2d</span><span class="o">::</span><span class="n">extension</span><span class="o">::</span><span class="n">CCBAnimationManager</span> <span class="o">*</span><span class="n">mAnimationManager</span><span class="p">;</span>
</span><span class='line'><span class="p">};</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">AnimationsLayerLoader</span> <span class="o">:</span> <span class="k">public</span> <span class="n">cocos2d</span><span class="o">::</span><span class="n">extension</span><span class="o">::</span><span class="n">CCNodeLoader</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'><span class="k">public</span><span class="o">:</span>
</span><span class='line'>    <span class="n">CCB_STATIC_NEW_AUTORELEASE_OBJECT_METHOD</span><span class="p">(</span><span class="n">AnimationsLayerLoader</span><span class="p">,</span> <span class="n">loader</span><span class="p">);</span>
</span><span class='line'><span class="k">protected</span><span class="o">:</span>
</span><span class='line'>    <span class="n">CCB_VIRTUAL_NEW_AUTORELEASE_CREATECCNODE_METHOD</span><span class="p">(</span><span class="n">AnimationsLayer</span><span class="p">);</span>
</span><span class='line'><span class="p">};</span>
</span></code></pre></td></tr></table></div></figure>


<p></p>

<figure class='code'><figcaption><span>AnimationsLayer.cpp</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="n">AnimationsLayer</span><span class="o">::</span><span class="n">AnimationsLayer</span><span class="p">()</span>
</span><span class='line'><span class="o">:</span> <span class="n">mAnimationManager</span><span class="p">(</span><span class="nb">NULL</span><span class="p">)</span>
</span><span class='line'><span class="p">{}</span>
</span><span class='line'>
</span><span class='line'><span class="n">AnimationsLayer</span><span class="o">::~</span><span class="n">AnimationsLayer</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">CC_SAFE_RELEASE_NULL</span><span class="p">(</span><span class="n">mAnimationManager</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">SEL_MenuHandler</span> <span class="n">AnimationsLayer</span><span class="o">::</span><span class="n">onResolveCCBCCMenuItemSelector</span><span class="p">(</span><span class="n">cocos2d</span><span class="o">::</span><span class="n">CCObject</span> <span class="o">*</span><span class="n">pTarget</span><span class="p">,</span> <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">pSelectorName</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="nb">NULL</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">SEL_CCControlHandler</span> <span class="n">AnimationsLayer</span><span class="o">::</span><span class="n">onResolveCCBCCControlSelector</span><span class="p">(</span><span class="n">cocos2d</span><span class="o">::</span><span class="n">CCObject</span> <span class="o">*</span><span class="n">pTarget</span><span class="p">,</span> <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">pSelectorName</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">CCB_SELECTORRESOLVER_CCCONTROL_GLUE</span><span class="p">(</span><span class="k">this</span><span class="p">,</span> <span class="s">&quot;onIdle&quot;</span><span class="p">,</span> <span class="n">AnimationsLayer</span><span class="o">::</span><span class="n">onIdle</span><span class="p">);</span>
</span><span class='line'>    <span class="n">CCB_SELECTORRESOLVER_CCCONTROL_GLUE</span><span class="p">(</span><span class="k">this</span><span class="p">,</span> <span class="s">&quot;onJump&quot;</span><span class="p">,</span> <span class="n">AnimationsLayer</span><span class="o">::</span><span class="n">onJump</span><span class="p">);</span>
</span><span class='line'>    <span class="n">CCB_SELECTORRESOLVER_CCCONTROL_GLUE</span><span class="p">(</span><span class="k">this</span><span class="p">,</span> <span class="s">&quot;onWave&quot;</span><span class="p">,</span> <span class="n">AnimationsLayer</span><span class="o">::</span><span class="n">onWave</span><span class="p">);</span>
</span><span class='line'>    <span class="n">CCB_SELECTORRESOLVER_CCCONTROL_GLUE</span><span class="p">(</span><span class="k">this</span><span class="p">,</span> <span class="s">&quot;onFunky&quot;</span><span class="p">,</span> <span class="n">AnimationsLayer</span><span class="o">::</span><span class="n">onFunky</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="nb">NULL</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">void</span> <span class="n">AnimationsLayer</span><span class="o">::</span><span class="n">setAnimationManager</span><span class="p">(</span><span class="n">cocos2d</span><span class="o">::</span><span class="n">extension</span><span class="o">::</span><span class="n">CCBAnimationManager</span> <span class="o">*</span><span class="n">pAnimationManager</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">CC_SAFE_RELEASE_NULL</span><span class="p">(</span><span class="n">mAnimationManager</span><span class="p">);</span>
</span><span class='line'>    <span class="n">mAnimationManager</span> <span class="o">=</span> <span class="n">pAnimationManager</span><span class="p">;</span>
</span><span class='line'>    <span class="n">CC_SAFE_RETAIN</span><span class="p">(</span><span class="n">mAnimationManager</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">void</span> <span class="n">AnimationsLayer</span><span class="o">::</span><span class="n">onIdle</span><span class="p">(</span><span class="n">cocos2d</span><span class="o">::</span><span class="n">CCObject</span> <span class="o">*</span><span class="n">pSender</span><span class="p">,</span> <span class="n">cocos2d</span><span class="o">::</span><span class="n">extension</span><span class="o">::</span><span class="n">CCControlEvent</span> <span class="n">pCCControlEvent</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">this</span><span class="o">-&gt;</span><span class="n">mAnimationManager</span><span class="o">-&gt;</span><span class="n">runAnimationsForSequenceNamedTweenDuration</span><span class="p">(</span><span class="s">&quot;Idle&quot;</span><span class="p">,</span> <span class="mf">0.3f</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">void</span> <span class="n">AnimationsLayer</span><span class="o">::</span><span class="n">onJump</span><span class="p">(</span><span class="n">cocos2d</span><span class="o">::</span><span class="n">CCObject</span> <span class="o">*</span><span class="n">pSender</span><span class="p">,</span> <span class="n">cocos2d</span><span class="o">::</span><span class="n">extension</span><span class="o">::</span><span class="n">CCControlEvent</span> <span class="n">pCCControlEvent</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">this</span><span class="o">-&gt;</span><span class="n">mAnimationManager</span><span class="o">-&gt;</span><span class="n">runAnimationsForSequenceNamedTweenDuration</span><span class="p">(</span><span class="s">&quot;Jump&quot;</span><span class="p">,</span> <span class="mf">0.3f</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">void</span> <span class="n">AnimationsLayer</span><span class="o">::</span><span class="n">onWave</span><span class="p">(</span><span class="n">cocos2d</span><span class="o">::</span><span class="n">CCObject</span> <span class="o">*</span><span class="n">pSender</span><span class="p">,</span> <span class="n">cocos2d</span><span class="o">::</span><span class="n">extension</span><span class="o">::</span><span class="n">CCControlEvent</span> <span class="n">pCCControlEvent</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">this</span><span class="o">-&gt;</span><span class="n">mAnimationManager</span><span class="o">-&gt;</span><span class="n">runAnimationsForSequenceNamedTweenDuration</span><span class="p">(</span><span class="s">&quot;Wave&quot;</span><span class="p">,</span> <span class="mf">0.3f</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">void</span> <span class="n">AnimationsLayer</span><span class="o">::</span><span class="n">onFunky</span><span class="p">(</span><span class="n">cocos2d</span><span class="o">::</span><span class="n">CCObject</span> <span class="o">*</span><span class="n">pSender</span><span class="p">,</span> <span class="n">cocos2d</span><span class="o">::</span><span class="n">extension</span><span class="o">::</span><span class="n">CCControlEvent</span> <span class="n">pCCControlEvent</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">this</span><span class="o">-&gt;</span><span class="n">mAnimationManager</span><span class="o">-&gt;</span><span class="n">runAnimationsForSequenceNamedTweenDuration</span><span class="p">(</span><span class="s">&quot;Funky&quot;</span><span class="p">,</span> <span class="mf">0.3f</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>整个代码还是很简单. 和以前的几个例子稍微有点不同的是在调用的时候, 需要把<code>CCBReader</code>里面的<code>AnimationManger</code>传入. <br/>
好, 还是看下调用的代码吧.</p>

<figure class='code'><figcaption><span>MainScene.cpp</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="kt">void</span> <span class="n">MainScene</span><span class="o">::</span><span class="n">onAnimations</span><span class="p">(</span><span class="n">cocos2d</span><span class="o">::</span><span class="n">CCObject</span> <span class="o">*</span><span class="n">pSender</span><span class="p">,</span> <span class="n">cocos2d</span><span class="o">::</span><span class="n">extension</span><span class="o">::</span><span class="n">CCControlEvent</span> <span class="n">pCCControlEvent</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span> <span class="n">pCCBFileName</span> <span class="o">=</span> <span class="s">&quot;ccb/Animations.ccbi&quot;</span><span class="p">;</span>
</span><span class='line'>    <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span> <span class="n">pCCNodeName</span> <span class="o">=</span> <span class="s">&quot;AnimationsLayer&quot;</span><span class="p">;</span>
</span><span class='line'>    <span class="n">cocos2d</span><span class="o">::</span><span class="n">extension</span><span class="o">::</span><span class="n">CCNodeLoader</span> <span class="o">*</span> <span class="n">pCCNodeLoader</span> <span class="o">=</span> <span class="n">AnimationsLayerLoader</span><span class="o">::</span><span class="n">loader</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">CCScene</span> <span class="o">*</span><span class="n">scene</span> <span class="o">=</span> <span class="n">CCScene</span><span class="o">::</span><span class="n">create</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">CCNodeLoaderLibrary</span> <span class="o">*</span><span class="n">lib</span> <span class="o">=</span> <span class="n">CCNodeLoaderLibrary</span><span class="o">::</span><span class="n">newDefaultCCNodeLoaderLibrary</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">lib</span><span class="o">-&gt;</span><span class="n">registerCCNodeLoader</span><span class="p">(</span><span class="s">&quot;HeaderLayer&quot;</span><span class="p">,</span> <span class="n">HeaderLayerLoader</span><span class="o">::</span><span class="n">loader</span><span class="p">());</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">pCCNodeName</span><span class="o">!=</span><span class="nb">NULL</span> <span class="o">&amp;&amp;</span> <span class="n">pCCNodeLoader</span><span class="o">!=</span><span class="nb">NULL</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="n">lib</span><span class="o">-&gt;</span><span class="n">registerCCNodeLoader</span><span class="p">(</span><span class="n">pCCNodeName</span><span class="p">,</span> <span class="n">pCCNodeLoader</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">CCBReader</span> <span class="o">*</span><span class="n">reader</span> <span class="o">=</span> <span class="k">new</span> <span class="n">CCBReader</span><span class="p">(</span><span class="n">lib</span><span class="p">);</span>
</span><span class='line'>    <span class="n">CCNode</span> <span class="o">*</span><span class="n">node</span> <span class="o">=</span> <span class="n">reader</span><span class="o">-&gt;</span><span class="n">readNodeGraphFromFile</span><span class="p">(</span><span class="n">pCCBFileName</span><span class="p">,</span> <span class="k">this</span><span class="p">);</span>
</span><span class='line'>    <span class="n">reader</span><span class="o">-&gt;</span><span class="n">autorelease</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">node</span> <span class="o">!=</span> <span class="nb">NULL</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="c1">//获取AnimationManger 并传给AnimationsLayer</span>
</span><span class='line'>        <span class="p">((</span><span class="n">AnimationsLayer</span><span class="o">*</span><span class="p">)</span><span class="n">node</span><span class="p">)</span> <span class="o">-&gt;</span><span class="n">setAnimationManager</span><span class="p">(</span><span class="n">reader</span><span class="o">-&gt;</span><span class="n">getAnimationManager</span><span class="p">());</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">scene</span><span class="o">-&gt;</span><span class="n">addChild</span><span class="p">(</span><span class="n">node</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">this</span><span class="o">-&gt;</span><span class="n">mTitleLabelTTF</span><span class="o">-&gt;</span><span class="n">setString</span><span class="p">(</span><span class="n">pCCBFileName</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">CCDirector</span><span class="o">::</span><span class="n">sharedDirector</span><span class="p">()</span><span class="o">-&gt;</span><span class="n">pushScene</span><span class="p">(</span><span class="n">scene</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://young40.github.com/upload/2012-12/ccb-sbs-4-003.png"></p>

<h3>后记</h3>

<p>看到微博上@做游戏的老G 吐槽说CocosBuilder如何不好用, 学习难度比较大. 我也是很认可这一点. <br/>
但是只要是坚持把TestCpp例子完全读完了, 相信掌握CocosBuilder也是很快能够做到的. <br/>
既然你看完了这个教程. 相信你也已经能够很好地驾驭CocosBuilder. 关键还在实践呦!</p>

<p>微博上@Ghost_233 说了一个很好的思路, 直接从ccb文件中生成对应的C++类, 而且他还做了一些实践. <br/>
我暂时还没有研究他的代码, 不过肯定是可行. 这是一个很赞的思路. <br/>
希望大家能动手, 最好合作出来一个较好的工具来, 我想, 是不是集成到CocosBuilder会更好?</p>

<p>谢谢大家耐心看完我的文章.</p>

<hr />


<p>代码打包下载:<a href="http://pan.baidu.com/share/link?shareid=158075&uk=2281999082" target="_blank">下载点</a></p>

<ul>
<li>本文是系列文章, 请查看其他文章:</li>
<li><a href="http://young40.github.com/blog/2012/12/21/cocosbuilder-step-by-step-part-one/">一步一步CocosBuilder(1)</a></li>
<li><a href="http://young40.github.com/blog/2012/12/25/cocosbuilder-step-by-step-part-two/">一步一步CocosBuilder(2)</a></li>
<li><a href="http://young40.github.com/blog/2012/12/28/cocosbuilder-step-by-step-part-three/">一步一步CocosBuilder(3)</a></li>
<li><a href="http://young40.github.com/blog/2012/12/29/cocosbuilder-step-by-step-part-four/">一步一步CocosBuilder(4)完结</a></li>
</ul>


<p>谢谢您耐心看完此文, 希望能对您有些帮助.如果有什么问题, 意见, 建议, 拍砖, 欢迎留言或者联系我.</p>

<p>新浪微博: <a href="http://weibo.com/young40">@杨世玲</a> <a href="http://weibo.com/young40">http://weibo.com/young40</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[一步一步CocosBuilder(3)]]></title>
    <link href="http://young40.github.com/blog/2012/12/28/cocosbuilder-step-by-step-part-three/"/>
    <updated>2012-12-28T00:54:00+08:00</updated>
    <id>http://young40.github.com/blog/2012/12/28/cocosbuilder-step-by-step-part-three</id>
    <content type="html"><![CDATA[<p>今天要说的内容比较轻松, 重要的知识点不多. <br/>
目标是实现<code>Menus &amp; Items</code>, <code>Sprites &amp; 9 Slice</code>, <code>Buttons &amp; Labels</code>.</p>

<h5>1</h5>

<p>首先我们在CocosBuilder中建立一个新的<code>Header.ccb</code>.具体请参见CocosBuilder的项目.   <br/>
在创建的时候,勾选<code>Full Sceen</code>, 并且将分辨率的<code>Height</code>都修改为40. <br/>
这个文件很简单, 根节点下只包含一个<code>CCLayerColor</code>,根节点的<code>Custom class</code>设置为<code>HeaderLayer</code>. <br/>
<code>CCLayerColor</code>下面包含一个<code>CCLabelTTF</code>和<code>CCMenu</code>. <br/>
<code>CCLabelTTF</code>的变量绑定为类型<code>Owner var</code>, 值为<code>mTitleLabelTTF</code>. <br/>
<code>CCMenu</code>包含一个<code>CCMenuItemImage</code>. <code>CCMenuItemImage</code>的<code>Selector</code>属性设置为<code>onBackClicked</code>.    <br/>
这个ccb作为一个公用的元素被其他ccb文件所引用. 是属于模块化的一个例子. <br/>
然后我们在Xcode中新建一个<code>HeaderLayer</code>类, 并同时声明一个<code>HeaderLayerLoader</code>类.</p>

<!--more-->




<figure class='code'><figcaption><span>HeaderLayer.h</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="k">class</span> <span class="nc">HeaderLayer</span>
</span><span class='line'><span class="o">:</span> <span class="k">public</span> <span class="n">cocos2d</span><span class="o">::</span><span class="n">CCLayer</span>
</span><span class='line'><span class="p">,</span> <span class="k">public</span> <span class="n">cocos2d</span><span class="o">::</span><span class="n">extension</span><span class="o">::</span><span class="n">CCBSelectorResolver</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'><span class="k">public</span><span class="o">:</span>
</span><span class='line'>    <span class="n">CCB_STATIC_NEW_AUTORELEASE_OBJECT_WITH_INIT_METHOD</span><span class="p">(</span><span class="n">HeaderLayer</span><span class="p">,</span> <span class="n">create</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">virtual</span> <span class="n">cocos2d</span><span class="o">::</span><span class="n">SEL_MenuHandler</span> <span class="n">onResolveCCBCCMenuItemSelector</span><span class="p">(</span><span class="n">CCObject</span> <span class="o">*</span> <span class="n">pTarget</span><span class="p">,</span> <span class="k">const</span> <span class="kt">char</span><span class="o">*</span> <span class="n">pSelectorName</span><span class="p">);</span>
</span><span class='line'>    <span class="k">virtual</span> <span class="n">cocos2d</span><span class="o">::</span><span class="n">extension</span><span class="o">::</span><span class="n">SEL_CCControlHandler</span> <span class="n">onResolveCCBCCControlSelector</span><span class="p">(</span><span class="n">CCObject</span> <span class="o">*</span> <span class="n">pTarget</span><span class="p">,</span> <span class="k">const</span> <span class="kt">char</span><span class="o">*</span> <span class="n">pSelectorName</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="kt">void</span> <span class="n">onBackClicked</span><span class="p">(</span><span class="n">CCObject</span> <span class="o">*</span><span class="n">pSender</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="p">};</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">HeaderLayerLoader</span> <span class="o">:</span> <span class="k">public</span> <span class="n">cocos2d</span><span class="o">::</span><span class="n">extension</span><span class="o">::</span><span class="n">CCLayerLoader</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'><span class="k">public</span><span class="o">:</span>
</span><span class='line'>    <span class="n">CCB_STATIC_NEW_AUTORELEASE_OBJECT_METHOD</span><span class="p">(</span><span class="n">HeaderLayerLoader</span><span class="p">,</span> <span class="n">loader</span><span class="p">);</span>
</span><span class='line'><span class="k">protected</span><span class="o">:</span>
</span><span class='line'>    <span class="n">CCB_VIRTUAL_NEW_AUTORELEASE_CREATECCNODE_METHOD</span><span class="p">(</span><span class="n">HeaderLayer</span><span class="p">);</span>
</span><span class='line'><span class="p">};</span>
</span></code></pre></td></tr></table></div></figure>


<figure class='code'><figcaption><span>HeaderLayer.cpp</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="n">SEL_MenuHandler</span> <span class="n">HeaderLayer</span><span class="o">::</span><span class="n">onResolveCCBCCMenuItemSelector</span><span class="p">(</span><span class="n">cocos2d</span><span class="o">::</span><span class="n">CCObject</span> <span class="o">*</span><span class="n">pTarget</span><span class="p">,</span> <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">pSelectorName</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">CCB_SELECTORRESOLVER_CCMENUITEM_GLUE</span><span class="p">(</span><span class="k">this</span><span class="p">,</span> <span class="s">&quot;onBackClicked&quot;</span><span class="p">,</span> <span class="n">HeaderLayer</span><span class="o">::</span><span class="n">onBackClicked</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="nb">NULL</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">SEL_CCControlHandler</span> <span class="n">HeaderLayer</span><span class="o">::</span><span class="n">onResolveCCBCCControlSelector</span><span class="p">(</span><span class="n">cocos2d</span><span class="o">::</span><span class="n">CCObject</span> <span class="o">*</span><span class="n">pTarget</span><span class="p">,</span> <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">pSelectorName</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="nb">NULL</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">void</span> <span class="n">HeaderLayer</span><span class="o">::</span><span class="n">onBackClicked</span><span class="p">(</span><span class="n">cocos2d</span><span class="o">::</span><span class="n">CCObject</span> <span class="o">*</span><span class="n">pSender</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">CCDirector</span><span class="o">::</span><span class="n">sharedDirector</span><span class="p">()</span><span class="o">-&gt;</span><span class="n">popScene</span><span class="p">();</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h5>2</h5>

<p>在CocosBuilder中新建一个<code>Menus.ccb</code>, 并将根节点<code>Custom class</code>设置为<code>MenuLayer</code>. <br/>
再加入几个<code>CCMenuItemImage</code>, Selector分别设置为<code>onPressA</code>, <code>onPressB</code>, <code>onPressC</code>. <br/>
再加入一个<code>CCLabelBMFont</code>, 绑定<code>Doc root var</code>, 值为<code>mMessageLabelBMFont</code>. <br/>
在Xcode中新建一个类<code>MenuLayer</code>, 并且在<code>MenuLayer.h</code>中同时声明一个<code>MenuLayerLoader</code>类.</p>

<figure class='code'><figcaption><span>MenuLayer.h</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="k">class</span> <span class="nc">MenuLayer</span>
</span><span class='line'><span class="o">:</span> <span class="k">public</span> <span class="n">cocos2d</span><span class="o">::</span><span class="n">CCLayer</span>
</span><span class='line'><span class="p">,</span> <span class="k">public</span> <span class="n">cocos2d</span><span class="o">::</span><span class="n">extension</span><span class="o">::</span><span class="n">CCBMemberVariableAssigner</span>
</span><span class='line'><span class="p">,</span> <span class="k">public</span> <span class="n">cocos2d</span><span class="o">::</span><span class="n">extension</span><span class="o">::</span><span class="n">CCBSelectorResolver</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'><span class="k">public</span><span class="o">:</span>
</span><span class='line'>    <span class="n">MenuLayer</span><span class="p">();</span>
</span><span class='line'>    <span class="o">~</span><span class="n">MenuLayer</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">CCB_STATIC_NEW_AUTORELEASE_OBJECT_WITH_INIT_METHOD</span><span class="p">(</span><span class="n">MenuLayer</span><span class="p">,</span> <span class="n">create</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">virtual</span> <span class="kt">bool</span> <span class="n">onAssignCCBMemberVariable</span><span class="p">(</span><span class="n">CCObject</span><span class="o">*</span> <span class="n">pTarget</span><span class="p">,</span> <span class="k">const</span> <span class="kt">char</span><span class="o">*</span> <span class="n">pMemberVariableName</span><span class="p">,</span> <span class="n">CCNode</span><span class="o">*</span> <span class="n">pNode</span><span class="p">);</span>
</span><span class='line'>    <span class="k">virtual</span> <span class="n">cocos2d</span><span class="o">::</span><span class="n">SEL_MenuHandler</span> <span class="n">onResolveCCBCCMenuItemSelector</span><span class="p">(</span><span class="n">CCObject</span> <span class="o">*</span> <span class="n">pTarget</span><span class="p">,</span> <span class="k">const</span> <span class="kt">char</span><span class="o">*</span> <span class="n">pSelectorName</span><span class="p">);</span>
</span><span class='line'>    <span class="k">virtual</span> <span class="n">cocos2d</span><span class="o">::</span><span class="n">extension</span><span class="o">::</span><span class="n">SEL_CCControlHandler</span> <span class="n">onResolveCCBCCControlSelector</span><span class="p">(</span><span class="n">CCObject</span> <span class="o">*</span> <span class="n">pTarget</span><span class="p">,</span> <span class="k">const</span> <span class="kt">char</span><span class="o">*</span> <span class="n">pSelectorName</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="kt">void</span> <span class="n">onPressA</span><span class="p">(</span><span class="n">cocos2d</span><span class="o">::</span><span class="n">CCObject</span> <span class="o">*</span><span class="n">pSender</span><span class="p">);</span>
</span><span class='line'>    <span class="kt">void</span> <span class="n">onPressB</span><span class="p">(</span><span class="n">cocos2d</span><span class="o">::</span><span class="n">CCObject</span> <span class="o">*</span><span class="n">pSender</span><span class="p">);</span>
</span><span class='line'>    <span class="kt">void</span> <span class="n">onPressC</span><span class="p">(</span><span class="n">cocos2d</span><span class="o">::</span><span class="n">CCObject</span> <span class="o">*</span><span class="n">pSender</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="k">private</span><span class="o">:</span>
</span><span class='line'>    <span class="n">cocos2d</span><span class="o">::</span><span class="n">CCLabelBMFont</span> <span class="o">*</span><span class="n">mMessageLabelBMFont</span><span class="p">;</span>
</span><span class='line'><span class="p">};</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">MenuLayerLoader</span> <span class="o">:</span> <span class="k">public</span> <span class="n">cocos2d</span><span class="o">::</span><span class="n">extension</span><span class="o">::</span><span class="n">CCNodeLoaderLibrary</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'><span class="k">public</span><span class="o">:</span>
</span><span class='line'>    <span class="n">CCB_STATIC_NEW_AUTORELEASE_OBJECT_METHOD</span><span class="p">(</span><span class="n">MenuLayerLoader</span><span class="p">,</span> <span class="n">loader</span><span class="p">);</span>
</span><span class='line'><span class="k">protected</span><span class="o">:</span>
</span><span class='line'>    <span class="n">CCB_VIRTUAL_NEW_AUTORELEASE_CREATECCNODE_METHOD</span><span class="p">(</span><span class="n">MenuLayer</span><span class="p">);</span>
</span><span class='line'><span class="p">};</span>
</span></code></pre></td></tr></table></div></figure>


<figure class='code'><figcaption><span>MenuLayer.cpp</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="n">MenuLayer</span><span class="o">::</span><span class="n">MenuLayer</span><span class="p">()</span>
</span><span class='line'><span class="o">:</span> <span class="n">mMessageLabelBMFont</span><span class="p">(</span><span class="nb">NULL</span><span class="p">)</span>
</span><span class='line'><span class="p">{}</span>
</span><span class='line'>
</span><span class='line'><span class="n">MenuLayer</span><span class="o">::~</span><span class="n">MenuLayer</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">CC_SAFE_DELETE</span><span class="p">(</span><span class="n">mMessageLabelBMFont</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">bool</span> <span class="n">MenuLayer</span><span class="o">::</span><span class="n">onAssignCCBMemberVariable</span><span class="p">(</span><span class="n">cocos2d</span><span class="o">::</span><span class="n">CCObject</span> <span class="o">*</span><span class="n">pTarget</span><span class="p">,</span> <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">pMemberVariableName</span><span class="p">,</span> <span class="n">cocos2d</span><span class="o">::</span><span class="n">CCNode</span> <span class="o">*</span><span class="n">pNode</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">CCB_MEMBERVARIABLEASSIGNER_GLUE</span><span class="p">(</span><span class="k">this</span><span class="p">,</span> <span class="s">&quot;mMessageLabelBMFont&quot;</span><span class="p">,</span> <span class="n">CCLabelBMFont</span><span class="o">*</span><span class="p">,</span> <span class="k">this</span><span class="o">-&gt;</span><span class="n">mMessageLabelBMFont</span><span class="p">);</span>
</span><span class='line'>    <span class="k">return</span> <span class="kc">false</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">SEL_MenuHandler</span> <span class="n">MenuLayer</span><span class="o">::</span><span class="n">onResolveCCBCCMenuItemSelector</span><span class="p">(</span><span class="n">cocos2d</span><span class="o">::</span><span class="n">CCObject</span> <span class="o">*</span><span class="n">pTarget</span><span class="p">,</span> <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">pSelectorName</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">CCB_SELECTORRESOLVER_CCMENUITEM_GLUE</span><span class="p">(</span><span class="k">this</span><span class="p">,</span> <span class="s">&quot;onPressA&quot;</span><span class="p">,</span> <span class="n">MenuLayer</span><span class="o">::</span><span class="n">onPressA</span><span class="p">);</span>
</span><span class='line'>    <span class="n">CCB_SELECTORRESOLVER_CCMENUITEM_GLUE</span><span class="p">(</span><span class="k">this</span><span class="p">,</span> <span class="s">&quot;onPressB&quot;</span><span class="p">,</span> <span class="n">MenuLayer</span><span class="o">::</span><span class="n">onPressB</span><span class="p">);</span>
</span><span class='line'>    <span class="n">CCB_SELECTORRESOLVER_CCMENUITEM_GLUE</span><span class="p">(</span><span class="k">this</span><span class="p">,</span> <span class="s">&quot;onPressC_NO_Match&quot;</span><span class="p">,</span> <span class="n">MenuLayer</span><span class="o">::</span><span class="n">onPressC</span><span class="p">);</span>
</span><span class='line'>   <span class="c1">//注意这里, 我们给第三个绑定了一个不存在的SelectorName. </span>
</span><span class='line'>    <span class="k">return</span> <span class="nb">NULL</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">SEL_CCControlHandler</span> <span class="n">MenuLayer</span><span class="o">::</span><span class="n">onResolveCCBCCControlSelector</span><span class="p">(</span><span class="n">cocos2d</span><span class="o">::</span><span class="n">CCObject</span> <span class="o">*</span><span class="n">pTarget</span><span class="p">,</span> <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">pSelectorName</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="nb">NULL</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">void</span> <span class="n">MenuLayer</span><span class="o">::</span><span class="n">onPressA</span><span class="p">(</span><span class="n">cocos2d</span><span class="o">::</span><span class="n">CCObject</span> <span class="o">*</span><span class="n">pSender</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">this</span><span class="o">-&gt;</span><span class="n">mMessageLabelBMFont</span><span class="o">-&gt;</span><span class="n">setString</span><span class="p">(</span><span class="s">&quot;A pressed.&quot;</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">void</span> <span class="n">MenuLayer</span><span class="o">::</span><span class="n">onPressB</span><span class="p">(</span><span class="n">cocos2d</span><span class="o">::</span><span class="n">CCObject</span> <span class="o">*</span><span class="n">pSender</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">this</span><span class="o">-&gt;</span><span class="n">mMessageLabelBMFont</span><span class="o">-&gt;</span><span class="n">setString</span><span class="p">(</span><span class="s">&quot;B pressed.&quot;</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">void</span> <span class="n">MenuLayer</span><span class="o">::</span><span class="n">onPressC</span><span class="p">(</span><span class="n">cocos2d</span><span class="o">::</span><span class="n">CCObject</span> <span class="o">*</span><span class="n">pSender</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">this</span><span class="o">-&gt;</span><span class="n">mMessageLabelBMFont</span><span class="o">-&gt;</span><span class="n">setString</span><span class="p">(</span><span class="s">&quot;C pressed.&quot;</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h5>3</h5>

<p>或许有点着急了吧, 我们如何让这个运行起来呢?  <br/>
首先给<code>MainScene</code>增加一个新函数的声明及定义, 还需要增加一个变量用于和<code>Header.ccb</code>中的<code>mTitleLabelTTF</code>绑定.</p>

<figure class='code'><figcaption><span>MainScene.h</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="k">public</span><span class="o">:</span>
</span><span class='line'>    <span class="kt">void</span> <span class="n">openTest</span><span class="p">(</span><span class="k">const</span> <span class="kt">char</span> <span class="o">*</span> <span class="n">pCCBFileName</span><span class="p">,</span> <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span> <span class="n">pCCNodeName</span> <span class="o">=</span> <span class="nb">NULL</span><span class="p">,</span> <span class="n">cocos2d</span><span class="o">::</span><span class="n">extension</span><span class="o">::</span><span class="n">CCNodeLoader</span> <span class="o">*</span> <span class="n">pCCNodeLoader</span> <span class="o">=</span> <span class="nb">NULL</span><span class="p">);</span>
</span><span class='line'><span class="k">private</span><span class="o">:</span>
</span><span class='line'>    <span class="n">cocos2d</span><span class="o">::</span><span class="n">CCLabelTTF</span> <span class="o">*</span><span class="n">mTitleLabelTTF</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<figure class='code'><figcaption><span>MainScene.cpp</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="kt">void</span> <span class="n">MainScene</span><span class="o">::</span><span class="n">openTest</span><span class="p">(</span><span class="k">const</span> <span class="kt">char</span> <span class="o">*</span> <span class="n">pCCBFileName</span><span class="p">,</span> <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span> <span class="n">pCCNodeName</span><span class="p">,</span> <span class="n">cocos2d</span><span class="o">::</span><span class="n">extension</span><span class="o">::</span><span class="n">CCNodeLoader</span> <span class="o">*</span> <span class="n">pCCNodeLoader</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">CCScene</span> <span class="o">*</span><span class="n">scene</span> <span class="o">=</span> <span class="n">CCScene</span><span class="o">::</span><span class="n">create</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">CCNodeLoaderLibrary</span> <span class="o">*</span><span class="n">lib</span> <span class="o">=</span> <span class="n">CCNodeLoaderLibrary</span><span class="o">::</span><span class="n">newDefaultCCNodeLoaderLibrary</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">lib</span><span class="o">-&gt;</span><span class="n">registerCCNodeLoader</span><span class="p">(</span><span class="s">&quot;HeaderLayer&quot;</span><span class="p">,</span> <span class="n">HeaderLayerLoader</span><span class="o">::</span><span class="n">loader</span><span class="p">());</span>
</span><span class='line'>    <span class="n">lib</span><span class="o">-&gt;</span><span class="n">registerCCNodeLoader</span><span class="p">(</span><span class="n">pCCNodeName</span><span class="p">,</span> <span class="n">pCCNodeLoader</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">CCBReader</span> <span class="o">*</span><span class="n">reader</span> <span class="o">=</span> <span class="k">new</span> <span class="n">CCBReader</span><span class="p">(</span><span class="n">lib</span><span class="p">);</span>
</span><span class='line'>    <span class="n">CCNode</span> <span class="o">*</span><span class="n">node</span> <span class="o">=</span> <span class="n">reader</span><span class="o">-&gt;</span><span class="n">readNodeGraphFromFile</span><span class="p">(</span><span class="n">pCCBFileName</span><span class="p">,</span> <span class="k">this</span><span class="p">);</span>
</span><span class='line'>    <span class="n">reader</span><span class="o">-&gt;</span><span class="n">autorelease</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">node</span> <span class="o">!=</span> <span class="nb">NULL</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="n">scene</span><span class="o">-&gt;</span><span class="n">addChild</span><span class="p">(</span><span class="n">node</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">this</span><span class="o">-&gt;</span><span class="n">mTitleLabelTTF</span><span class="o">-&gt;</span><span class="n">setString</span><span class="p">(</span><span class="n">pCCBFileName</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">CCDirector</span><span class="o">::</span><span class="n">sharedDirector</span><span class="p">()</span><span class="o">-&gt;</span><span class="n">pushScene</span><span class="p">(</span><span class="n">scene</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">bool</span> <span class="n">MainScene</span><span class="o">::</span><span class="n">onAssignCCBMemberVariable</span><span class="p">(</span><span class="n">cocos2d</span><span class="o">::</span><span class="n">CCObject</span> <span class="o">*</span><span class="n">pTarget</span><span class="p">,</span> <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">pMemberVariableName</span><span class="p">,</span> <span class="n">cocos2d</span><span class="o">::</span><span class="n">CCNode</span> <span class="o">*</span><span class="n">pNode</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">CCB_MEMBERVARIABLEASSIGNER_GLUE</span><span class="p">(</span><span class="k">this</span><span class="p">,</span> <span class="s">&quot;mLabelText&quot;</span><span class="p">,</span> <span class="n">CCLabelBMFont</span><span class="o">*</span><span class="p">,</span> <span class="k">this</span><span class="o">-&gt;</span><span class="n">mLabelText</span><span class="p">);</span>
</span><span class='line'>    <span class="n">CCB_MEMBERVARIABLEASSIGNER_GLUE</span><span class="p">(</span><span class="k">this</span><span class="p">,</span> <span class="s">&quot;mTitleLabelTTF&quot;</span><span class="p">,</span> <span class="n">CCLabelTTF</span><span class="o">*</span><span class="p">,</span> <span class="k">this</span><span class="o">-&gt;</span><span class="n">mTitleLabelTTF</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="kc">false</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="kt">void</span> <span class="n">MainScene</span><span class="o">::</span><span class="n">onButtonTest</span><span class="p">(</span><span class="n">cocos2d</span><span class="o">::</span><span class="n">CCObject</span> <span class="o">*</span><span class="n">pSender</span><span class="p">,</span> <span class="n">cocos2d</span><span class="o">::</span><span class="n">extension</span><span class="o">::</span><span class="n">CCControlEvent</span> <span class="n">pCCControlEvent</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">this</span><span class="o">-&gt;</span><span class="n">openTest</span><span class="p">(</span><span class="s">&quot;ccb/Menus.ccbi&quot;</span><span class="p">,</span> <span class="s">&quot;MenuLayer&quot;</span><span class="p">,</span> <span class="n">MenuLayerLoader</span><span class="o">::</span><span class="n">loader</span><span class="p">());</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h5>4</h5>

<p><code>Sprites &amp; 9 Slice</code> 这个比较简单, 只是靠CocosBuilder就能完成任务了.</p>

<p><img src="http://young40.github.com/upload/2012-12/ccb-sbs-3-001.png"></p>

<p>我拼的不太好, 嘿嘿. 主要是着重代码, 并非设计, 漂亮的事情交给美术妹纸吧.</p>

<h5>5</h5>

<p><code>Buttons</code>这块主要是研究了<code>CCControlEvent</code>的各种情况. 我们只贴出核心代码.</p>

<figure class='code'><figcaption><span>ButtonsLayer.cpp</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="kt">void</span> <span class="n">ButtonsLayer</span><span class="o">::</span><span class="n">onBtnClicked</span><span class="p">(</span><span class="n">cocos2d</span><span class="o">::</span><span class="n">CCObject</span> <span class="o">*</span><span class="n">pSender</span><span class="p">,</span> <span class="n">cocos2d</span><span class="o">::</span><span class="n">extension</span><span class="o">::</span><span class="n">CCControlEvent</span> <span class="n">pCCControlEvent</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">switch</span> <span class="p">(</span><span class="n">pCCControlEvent</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">case</span> <span class="nl">CCControlEventTouchCancel:</span>
</span><span class='line'>            <span class="k">this</span><span class="o">-&gt;</span><span class="n">mEventLabelBMFont</span><span class="o">-&gt;</span><span class="n">setString</span><span class="p">(</span><span class="s">&quot;Cancel&quot;</span><span class="p">);</span>
</span><span class='line'>            <span class="k">break</span><span class="p">;</span>
</span><span class='line'>        <span class="k">case</span> <span class="nl">CCControlEventTouchDown:</span>
</span><span class='line'>            <span class="k">this</span><span class="o">-&gt;</span><span class="n">mEventLabelBMFont</span><span class="o">-&gt;</span><span class="n">setString</span><span class="p">(</span><span class="s">&quot;Touch Down&quot;</span><span class="p">);</span>
</span><span class='line'>            <span class="k">break</span><span class="p">;</span>
</span><span class='line'>        <span class="k">case</span> <span class="nl">CCControlEventTouchDragEnter:</span>
</span><span class='line'>            <span class="k">this</span><span class="o">-&gt;</span><span class="n">mEventLabelBMFont</span><span class="o">-&gt;</span><span class="n">setString</span><span class="p">(</span><span class="s">&quot;Drag Enter&quot;</span><span class="p">);</span>
</span><span class='line'>            <span class="k">break</span><span class="p">;</span>
</span><span class='line'>        <span class="k">case</span> <span class="nl">CCControlEventTouchDragExit:</span>
</span><span class='line'>            <span class="k">this</span><span class="o">-&gt;</span><span class="n">mEventLabelBMFont</span><span class="o">-&gt;</span><span class="n">setString</span><span class="p">(</span><span class="s">&quot;Drag Exit&quot;</span><span class="p">);</span>
</span><span class='line'>            <span class="k">break</span><span class="p">;</span>
</span><span class='line'>        <span class="k">case</span> <span class="nl">CCControlEventTouchDragInside:</span>
</span><span class='line'>            <span class="k">this</span><span class="o">-&gt;</span><span class="n">mEventLabelBMFont</span><span class="o">-&gt;</span><span class="n">setString</span><span class="p">(</span><span class="s">&quot;Drag Inside&quot;</span><span class="p">);</span>
</span><span class='line'>            <span class="k">break</span><span class="p">;</span>
</span><span class='line'>        <span class="k">case</span> <span class="nl">CCControlEventTouchDragOutside:</span>
</span><span class='line'>            <span class="k">this</span><span class="o">-&gt;</span><span class="n">mEventLabelBMFont</span><span class="o">-&gt;</span><span class="n">setString</span><span class="p">(</span><span class="s">&quot;Drag OutSide&quot;</span><span class="p">);</span>
</span><span class='line'>            <span class="k">break</span><span class="p">;</span>
</span><span class='line'>        <span class="k">case</span> <span class="nl">CCControlEventTouchUpInside:</span>
</span><span class='line'>            <span class="k">this</span><span class="o">-&gt;</span><span class="n">mEventLabelBMFont</span><span class="o">-&gt;</span><span class="n">setString</span><span class="p">(</span><span class="s">&quot;Up Inside&quot;</span><span class="p">);</span>
</span><span class='line'>            <span class="k">break</span><span class="p">;</span>
</span><span class='line'>        <span class="k">case</span> <span class="nl">CCControlEventTouchUpOutside:</span>
</span><span class='line'>            <span class="k">this</span><span class="o">-&gt;</span><span class="n">mEventLabelBMFont</span><span class="o">-&gt;</span><span class="n">setString</span><span class="p">(</span><span class="s">&quot;Up Outside&quot;</span><span class="p">);</span>
</span><span class='line'>            <span class="k">break</span><span class="p">;</span>
</span><span class='line'>        <span class="k">default</span><span class="o">:</span><span class="c1">//所有的定义都在上面了,TestCPP里面有句经典的点评, 想看的可以去翻一下.</span>
</span><span class='line'>            <span class="k">break</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://young40.github.com/upload/2012-12/ccb-sbs-3-002.png"></p>

<hr />


<p>代码打包下载:<a href="http://pan.baidu.com/share/link?shareid=158075&uk=2281999082" target="_blank">下载点</a></p>

<ul>
<li>本文是系列文章, 请查看其他文章:</li>
<li><a href="http://young40.github.com/blog/2012/12/21/cocosbuilder-step-by-step-part-one/">一步一步CocosBuilder(1)</a></li>
<li><a href="http://young40.github.com/blog/2012/12/25/cocosbuilder-step-by-step-part-two/">一步一步CocosBuilder(2)</a></li>
<li><a href="http://young40.github.com/blog/2012/12/28/cocosbuilder-step-by-step-part-three/">一步一步CocosBuilder(3)</a></li>
<li><a href="http://young40.github.com/blog/2012/12/29/cocosbuilder-step-by-step-part-four/">一步一步CocosBuilder(4)完结</a></li>
</ul>


<p>谢谢您耐心看完此文, 希望能对您有些帮助.如果有什么问题, 意见, 建议, 拍砖, 欢迎留言或者联系我.</p>

<p>新浪微博: <a href="http://weibo.com/young40">@杨世玲</a> <a href="http://weibo.com/young40">http://weibo.com/young40</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[一步一步CocosBuilder(2)]]></title>
    <link href="http://young40.github.com/blog/2012/12/25/cocosbuilder-step-by-step-part-two/"/>
    <updated>2012-12-25T21:15:00+08:00</updated>
    <id>http://young40.github.com/blog/2012/12/25/cocosbuilder-step-by-step-part-two</id>
    <content type="html"><![CDATA[<p>上一篇我们建立了基本的工作环境, 这一次我们将基本实现例子中的HelloCocosBuilder.</p>

<h3>注意</h3>

<p>这两天纠结了一个问题. 我发现按照上次的配置来实现例子, 图片的大小怎么都和例子中的搭配不上. 后来动用CCB的源代码才看出端倪.
CCB v3.0加入了一个<code>resources-auto</code>的目录, 在发布的时候, 会自动缩放图片到对应的分辨率去. 因为图片的分辨率不合适(初步目测), 我们暂时不使用这功能. 请大家将上一篇文章
中的<code>resources-auto</code>文件夹下图片移到父目录<code>ccb-source</code>下面. 这个也解释了为什么<code>resources-auto</code>有非图片文件会导致CCB崩溃的原因.</p>

<!--more-->


<h5>1</h5>

<p>在CCB中打开MainScene.ccb,按<code>delete</code>键删除已经存在的几个Sprite.</p>

<h5>2</h5>

<p>添加一个<code>CCLayerGradient</code>到屏幕, 如果有问题的话, 可以参见下文档. 选中该节点, 我们可以在右侧看到他的属性, 常规的属性有比如位置, 大小, 锚点, 缩放, 旋转, 标签.
我们现在将其设置为大小为100%x100%的大小, 即满屏.</p>

<h5>3</h5>

<p>从左侧的文件中将<code>burst.png</code>拖入屏幕, 也可以使用工具栏添加然后再选择属性<code>Sprite frame</code>. <br/>
可以在节点树上双击该节点给其重命名, 我们将该节点命名为<code>CCSprite-burst</code>, 便于识别.<br/>
同样我们将其中心的设置到屏幕中心50%x50%, 缩放到2.5倍. <br/>
然后将<code>Blend src</code>, <code>Blend dst</code> 都设置为<code>One</code>, 好吧, 我暂时还不知道这个Blend是什么东西. 有知道的朋友不妨在评论中告诉我下, 或者参考资料. <br/>
大概是透明之类的东西吧.</p>

<h5>4</h5>

<p>然后我们再添加一个<code>CCParticleSystemQuad</code>粒子系统, 就是工具栏的那个Fx按钮. <br/>
将其位置设为最下居中, 在最下边<code>Particle Texture</code>设置为<code>ccbParticleSnow.png</code>效果,粒子系统还是很复杂的,估计能单独讲很久了. 这里就不再展开了.</p>

<h5>5</h5>

<p>将<code>logo-icon.png</code>拖入屏幕, 放在左上角合适位置, 并将其缩放到0.5. 节点重命名为<code>CCSprite-logo-icon</code>. <br/>
接下来就是动画的制作了.选中节点, 可以在菜单栏中<code>Animation =&gt; Insert KeyFrame</code>找到插入Framekey的各种快捷键.或许我们需要记熟他们. <br/>
首先让我们给<code>Timeline</code>设置下时间.双击时间可以编辑, 我们输入00:03:00, 就是3秒钟. 后面最后一位是帧数, 每秒30帧. <br/>
按下小三角可以展开当前节点的各种KeyFrame.  <br/>
拖动时间轴游标到1秒10帧,按下键盘<code>S</code>, 可以插入一个Scale类型的KeyFrame, 这时将当前节点Scale属性改为0. <br/>
然后继续拖动时间轴游标到2秒10帧, 再插入一个Scale KeyFrame, 并将Scale属性改为0.5. 这时点击播放按钮, 可以看到logo会蹦出来. <br/>
然后在紫色条上点击右键, 可以看到动作菜单, 我们选择<code>Bounce Out</code>, 这个时候再点击播放, 就可以看到logo蹦出的时候会有一个弹震的效果. <br/>
再来说明两点, 紫色条设置不同的动作, 可以看到上面会有一点阴影变化, 可以帮助我们快速确认设置的是什么动作. <br/>
如果不小心加多了KeyFrame, 那么可以点击选择KeyFrame, 然后点击<code>delete</code>键删除. <br/>
还有需要注意的是, 如果游标不在KeyFrame的点上, 那么此时无法编辑该节点属性, 移动到相应的KeyFrame点即可.</p>

<h5>6</h5>

<p>然后依法炮制, 将<code>logo.png</code>加入, 你可以给其设置想要的动画效果.</p>

<h5>7</h5>

<p>我们再添加一个<code>CCLabelBMFont</code>, 字体设置为<code>markerfelt24shadow.fnt</code>.Label的内容设置为&#8221;Hello Cocos2d-x!!!&#8221;, 然后调整下位置, 换个喜欢的颜色.</p>

<h5>8</h5>

<p>我们再添加一个<code>CCControlButton</code>, Title设置为<code>Menu &amp; Item</code>.  <br/>
然后再分别设置State Normal, State Highlighted的Sprite frame为<code>btn-test-0.png</code> &nbsp; <code>btn-test-1.png</code>. <br/>
然后再设置下弹出效果. <br/>
将这个节点再复制5份, 对齐. 再分别设置下Title和弹出效果.设置对齐的时候可能会比较麻烦. 可以从标尺那里拉出几条线, 用于对齐.将该对齐线拉出显示区域即可删除. <br/>
<img src="http://young40.github.com/upload/2012-12/ccb-sbs-2-001.png"></p>

<h5>9</h5>

<p>最后将左右的两片叶子加入屏幕, 设置个动画即可.
然后将CCB项目发布一下, 在Xcode里面将项目运行一下. 就可以看到效果了.</p>

<h5>10</h5>

<p>我们接下来研究文件和类的绑定, 控件和变量的绑定, 以及事件和函数的绑定. <br/>
我们在CCB中将根节点的<code>Custom class</code>设置为<code>MainScene</code>.<br/>
我们在Xcode中打开<code>MainScene.h</code>, 给<code>MainScene</code>增加一个新的函数<code>CCB_STATIC_NEW_AUTORELEASE_OBJECT_WITH_INIT_METHOD(MainScene, create);</code>. <br/>
最后的代码应该如下:</p>

<figure class='code'><figcaption><span>MainScene</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="k">class</span> <span class="nc">MainScene</span>
</span><span class='line'><span class="o">:</span> <span class="k">public</span> <span class="n">cocos2d</span><span class="o">::</span><span class="n">CCLayer</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'><span class="k">public</span><span class="o">:</span>
</span><span class='line'>    <span class="k">static</span> <span class="n">cocos2d</span><span class="o">::</span><span class="n">CCScene</span><span class="o">*</span> <span class="n">scene</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">CCB_STATIC_NEW_AUTORELEASE_OBJECT_WITH_INIT_METHOD</span><span class="p">(</span><span class="n">MainScene</span><span class="p">,</span> <span class="n">create</span><span class="p">);</span>
</span><span class='line'><span class="p">};</span>
</span></code></pre></td></tr></table></div></figure>


<p>然后在<code>MainScene.h</code>中添加一个新类<code>MainSceneLayerLoader</code>代码如下:</p>

<figure class='code'><figcaption><span>MainSceneLayerLoader</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="k">class</span> <span class="nc">MainSceneLayerLoader</span> <span class="o">:</span> <span class="k">public</span> <span class="n">cocos2d</span><span class="o">::</span><span class="n">extension</span><span class="o">::</span><span class="n">CCLayerLoader</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'><span class="k">public</span><span class="o">:</span>
</span><span class='line'>    <span class="n">CCB_STATIC_NEW_AUTORELEASE_OBJECT_METHOD</span><span class="p">(</span><span class="n">MainSceneLayerLoader</span><span class="p">,</span> <span class="n">loader</span><span class="p">);</span>
</span><span class='line'><span class="k">protected</span><span class="o">:</span>
</span><span class='line'>    <span class="n">CCB_VIRTUAL_NEW_AUTORELEASE_CREATECCNODE_METHOD</span><span class="p">(</span><span class="n">MainScene</span><span class="p">);</span>
</span><span class='line'><span class="p">};</span>
</span></code></pre></td></tr></table></div></figure>


<p>如果需要探究的话, 可以点开相应的函数定义. 也都是些简单的工作. <br/>
吐槽下, 这些名字真的是太难记. 可能需要多熟悉下, 搞清楚其原理了才好.</p>

<p>然后我们在<code>MainScene.cpp</code>中添加一行注册将ccb文件和类绑定起来.</p>

<figure class='code'><figcaption><span>MainScene::scene()</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="n">CCNodeLoaderLibrary</span> <span class="o">*</span><span class="n">lib</span> <span class="o">=</span> <span class="n">CCNodeLoaderLibrary</span><span class="o">::</span><span class="n">newDefaultCCNodeLoaderLibrary</span><span class="p">();</span>
</span><span class='line'><span class="n">lib</span><span class="o">-&gt;</span><span class="n">registerCCNodeLoader</span><span class="p">(</span><span class="s">&quot;MainScene&quot;</span><span class="p">,</span> <span class="n">MainSceneLayerLoader</span><span class="o">::</span><span class="n">loader</span><span class="p">());</span>
</span></code></pre></td></tr></table></div></figure>


<p>然后运行下, 确保没有错误. <br/>
这几行代码, 就是ccb文件和类绑定的最简模式了.</p>

<h5>11</h5>

<p>接着我们研究下控件和变量的绑定. <br/>
我们先在CCB中给<code>CCLabelBMFont</code>添加一个<code>Doc root var</code>类型的绑定<code>mLabelText</code>. <br/>
一个需要注意的地方就是CCB v3.0alpha似乎无法将<code>jsControlled</code>设置为<code>false</code>, 所以可能需要手工打开<code>MainScene.ccb</code>将其改为<code>false</code>.</p>

<figure class='code'><figcaption><span>MainScene.ccb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;key&gt;</span>jsControlled<span class="nt">&lt;/key&gt;</span>
</span><span class='line'><span class="nt">&lt;false/&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>然后在Xcode中给<code>MainScene</code>增加一个从<code>CCBMemberVariableAssigner</code>的继承并实现其虚函数. 并且添加相应的变量.</p>

<figure class='code'><figcaption><span>MainScene</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="k">class</span> <span class="nc">MainScene</span>
</span><span class='line'><span class="o">:</span> <span class="k">public</span> <span class="n">cocos2d</span><span class="o">::</span><span class="n">CCLayer</span>
</span><span class='line'><span class="p">,</span> <span class="k">public</span> <span class="n">cocos2d</span><span class="o">::</span><span class="n">extension</span><span class="o">::</span><span class="n">CCBMemberVariableAssigner</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'><span class="k">public</span><span class="o">:</span>
</span><span class='line'>    <span class="n">MainScene</span><span class="p">();</span>
</span><span class='line'>    <span class="o">~</span><span class="n">MainScene</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">static</span> <span class="n">cocos2d</span><span class="o">::</span><span class="n">CCScene</span><span class="o">*</span> <span class="n">scene</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">CCB_STATIC_NEW_AUTORELEASE_OBJECT_WITH_INIT_METHOD</span><span class="p">(</span><span class="n">MainScene</span><span class="p">,</span> <span class="n">create</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">virtual</span> <span class="kt">bool</span> <span class="n">onAssignCCBMemberVariable</span><span class="p">(</span><span class="n">cocos2d</span><span class="o">::</span><span class="n">CCObject</span><span class="o">*</span> <span class="n">pTarget</span><span class="p">,</span> <span class="k">const</span> <span class="kt">char</span><span class="o">*</span> <span class="n">pMemberVariableName</span><span class="p">,</span> <span class="n">cocos2d</span><span class="o">::</span><span class="n">CCNode</span><span class="o">*</span> <span class="n">pNode</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="k">private</span><span class="o">:</span>
</span><span class='line'>    <span class="n">cocos2d</span><span class="o">::</span><span class="n">CCLabelBMFont</span> <span class="o">*</span><span class="n">mLabelText</span><span class="p">;</span>
</span><span class='line'><span class="p">};</span>
</span></code></pre></td></tr></table></div></figure>


<p>在<code>MainScene.cpp</code>中需要添加的是:</p>

<figure class='code'><figcaption><span>MainScene.cpp</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="n">MainScene</span><span class="o">::</span><span class="n">MainScene</span><span class="p">()</span><span class="c1">//构造函数</span>
</span><span class='line'><span class="o">:</span> <span class="n">mLabelText</span><span class="p">(</span><span class="nb">NULL</span><span class="p">)</span>
</span><span class='line'><span class="p">{}</span>
</span><span class='line'>
</span><span class='line'><span class="n">MainScene</span><span class="o">::~</span><span class="n">MainScene</span><span class="p">()</span><span class="c1">//析构函数中释放内存不能忘</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">CC_SAFE_DELETE</span><span class="p">(</span><span class="n">mLabelText</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">bool</span> <span class="n">MainScene</span><span class="o">::</span><span class="n">onAssignCCBMemberVariable</span><span class="p">(</span><span class="n">cocos2d</span><span class="o">::</span><span class="n">CCObject</span> <span class="o">*</span><span class="n">pTarget</span><span class="p">,</span> <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">pMemberVariableName</span><span class="p">,</span> <span class="n">cocos2d</span><span class="o">::</span><span class="n">CCNode</span> <span class="o">*</span><span class="n">pNode</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">CCB_MEMBERVARIABLEASSIGNER_GLUE</span><span class="p">(</span><span class="k">this</span><span class="p">,</span> <span class="s">&quot;mLabelText&quot;</span><span class="p">,</span> <span class="n">CCLabelBMFont</span><span class="o">*</span><span class="p">,</span> <span class="k">this</span><span class="o">-&gt;</span><span class="n">mLabelText</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="kc">true</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>需要注意的是, 由于绑定较晚, 所以无法在init函数中使用变量<code>mLabelText</code>.</p>

<h5>12</h5>

<p>接下来我们研究事件和函数的绑定. <br/>
在CCB中找到<code>Menu &amp; Item</code>这个<code>CCControlButton</code>, 并设置其Selector为<code>onButtonTest</code>.Target设置为<code>Document root</code>. <br/>
这里需要注意的是, 设置值的时候,cocos2d-iphone似乎比较喜欢设置成<code>onButtonTest:</code>即多个<code>:</code>的形式. 我们在cocos2d-x中保持一致即可.不必加<code>:</code>.  <br/>
然后打开<code>MainScene.h</code>给<code>MainScene</code>再增加一个继承.</p>

<figure class='code'><figcaption><span>MainScene</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="k">class</span> <span class="nc">MainScene</span>
</span><span class='line'><span class="o">:</span> <span class="k">public</span> <span class="n">cocos2d</span><span class="o">::</span><span class="n">CCLayer</span>
</span><span class='line'><span class="p">,</span> <span class="k">public</span> <span class="n">cocos2d</span><span class="o">::</span><span class="n">extension</span><span class="o">::</span><span class="n">CCBMemberVariableAssigner</span>
</span><span class='line'><span class="p">,</span> <span class="k">public</span> <span class="n">cocos2d</span><span class="o">::</span><span class="n">extension</span><span class="o">::</span><span class="n">CCBSelectorResolver</span>
</span></code></pre></td></tr></table></div></figure>


<p>还有需要实现的函数</p>

<figure class='code'><figcaption><span>MainScene</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="k">virtual</span> <span class="n">cocos2d</span><span class="o">::</span><span class="n">SEL_MenuHandler</span> <span class="n">onResolveCCBCCMenuItemSelector</span><span class="p">(</span><span class="n">cocos2d</span><span class="o">::</span><span class="n">CCObject</span> <span class="o">*</span> <span class="n">pTarget</span><span class="p">,</span> <span class="k">const</span> <span class="kt">char</span><span class="o">*</span> <span class="n">pSelectorName</span><span class="p">);</span>
</span><span class='line'><span class="k">virtual</span> <span class="n">cocos2d</span><span class="o">::</span><span class="n">extension</span><span class="o">::</span><span class="n">SEL_CCControlHandler</span> <span class="n">onResolveCCBCCControlSelector</span><span class="p">(</span><span class="n">cocos2d</span><span class="o">::</span><span class="n">CCObject</span> <span class="o">*</span> <span class="n">pTarget</span><span class="p">,</span> <span class="k">const</span> <span class="kt">char</span><span class="o">*</span> <span class="n">pSelectorName</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="kt">void</span> <span class="n">onButtonTest</span><span class="p">(</span><span class="n">cocos2d</span><span class="o">::</span><span class="n">CCObject</span> <span class="o">*</span><span class="n">pSender</span><span class="p">,</span> <span class="n">cocos2d</span><span class="o">::</span><span class="n">extension</span><span class="o">::</span><span class="n">CCControlEvent</span> <span class="n">pCCControlEvent</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>接下来是增加的函数的实现</p>

<figure class='code'><figcaption><span>MainScene.cpp</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="n">SEL_MenuHandler</span> <span class="n">MainScene</span><span class="o">::</span><span class="n">onResolveCCBCCMenuItemSelector</span><span class="p">(</span><span class="n">cocos2d</span><span class="o">::</span><span class="n">CCObject</span> <span class="o">*</span><span class="n">pTarget</span><span class="p">,</span> <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">pSelectorName</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="nb">NULL</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">SEL_CCControlHandler</span> <span class="n">MainScene</span><span class="o">::</span><span class="n">onResolveCCBCCControlSelector</span><span class="p">(</span><span class="n">cocos2d</span><span class="o">::</span><span class="n">CCObject</span> <span class="o">*</span><span class="n">pTarget</span><span class="p">,</span> <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">pSelectorName</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">CCB_SELECTORRESOLVER_CCCONTROL_GLUE</span><span class="p">(</span><span class="k">this</span><span class="p">,</span> <span class="s">&quot;onButtonTest&quot;</span><span class="p">,</span> <span class="n">MainScene</span><span class="o">::</span><span class="n">onButtonTest</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="nb">NULL</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">void</span> <span class="n">MainScene</span><span class="o">::</span><span class="n">onButtonTest</span><span class="p">(</span><span class="n">cocos2d</span><span class="o">::</span><span class="n">CCObject</span> <span class="o">*</span><span class="n">pSender</span><span class="p">,</span> <span class="n">cocos2d</span><span class="o">::</span><span class="n">extension</span><span class="o">::</span><span class="n">CCControlEvent</span> <span class="n">pCCControlEvent</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">this</span><span class="o">-&gt;</span><span class="n">mLabelText</span><span class="o">-&gt;</span><span class="n">setString</span><span class="p">(</span><span class="s">&quot;Hello CocosBuilder!!!&quot;</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>好了, 现在运行一下, 点击按钮, 就会看到<code>Hello Cocos2d-x!!!</code>变成了<code>Hello CocosBuilder!!!</code>了.</p>

<h5>13</h5>

<p>刚才我们提到变量绑定较init函数(更别提运行更早的构造函数了)更晚. 那么如何运行后就控制这些控件呢?  <br/>
方法当然是有, 我们需要增加一个<code>CCNodeLoaderListener</code>, 并实现其接口.新增代码如下:</p>

<figure class='code'><figcaption><span>MainScene</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="p">,</span> <span class="k">public</span> <span class="n">cocos2d</span><span class="o">::</span><span class="n">extension</span><span class="o">::</span><span class="n">CCBSelectorResolver</span>
</span><span class='line'><span class="p">,</span> <span class="k">public</span> <span class="n">cocos2d</span><span class="o">::</span><span class="n">extension</span><span class="o">::</span><span class="n">CCNodeLoaderListener</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="c1">///......代码省略鸟</span>
</span><span class='line'>    <span class="k">virtual</span> <span class="kt">void</span> <span class="n">onNodeLoaded</span><span class="p">(</span><span class="n">cocos2d</span><span class="o">::</span><span class="n">CCNode</span> <span class="o">*</span> <span class="n">pNode</span><span class="p">,</span> <span class="n">cocos2d</span><span class="o">::</span><span class="n">extension</span><span class="o">::</span><span class="n">CCNodeLoader</span> <span class="o">*</span> <span class="n">pNodeLoader</span><span class="p">);</span>
</span><span class='line'>    <span class="c1">///......代码省略鸟</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<figure class='code'><figcaption><span>MainScene.cpp</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="kt">void</span> <span class="n">MainScene</span><span class="o">::</span><span class="n">onNodeLoaded</span><span class="p">(</span><span class="n">cocos2d</span><span class="o">::</span><span class="n">CCNode</span> <span class="o">*</span><span class="n">pNode</span><span class="p">,</span> <span class="n">cocos2d</span><span class="o">::</span><span class="n">extension</span><span class="o">::</span><span class="n">CCNodeLoader</span> <span class="o">*</span><span class="n">pNodeLoader</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">this</span><span class="o">-&gt;</span><span class="n">mLabelText</span><span class="o">-&gt;</span><span class="n">setString</span><span class="p">(</span><span class="s">&quot;All Loaded&quot;</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>好啦, 运行就能看到<code>All Loaded</code>啦.</p>

<p><img src="http://young40.github.com/upload/2012-12/ccb-sbs-2-002.png"></p>

<hr />


<p>代码打包下载:<a href="http://pan.baidu.com/share/link?shareid=158075&uk=2281999082" target="_blank">下载点</a></p>

<ul>
<li>本文是系列文章, 请查看其他文章:</li>
<li><a href="http://young40.github.com/blog/2012/12/21/cocosbuilder-step-by-step-part-one/">一步一步CocosBuilder(1)</a></li>
<li><a href="http://young40.github.com/blog/2012/12/25/cocosbuilder-step-by-step-part-two/">一步一步CocosBuilder(2)</a></li>
<li><a href="http://young40.github.com/blog/2012/12/28/cocosbuilder-step-by-step-part-three/">一步一步CocosBuilder(3)</a></li>
<li><a href="http://young40.github.com/blog/2012/12/29/cocosbuilder-step-by-step-part-four/">一步一步CocosBuilder(4)完结</a></li>
</ul>


<p>谢谢您耐心看完此文, 希望能对您有些帮助.如果有什么问题, 意见, 建议, 拍砖, 欢迎留言或者联系我.</p>

<p>新浪微博: <a href="http://weibo.com/young40">@杨世玲</a> <a href="http://weibo.com/young40">http://weibo.com/young40</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[一步一步CocosBuilder(1)]]></title>
    <link href="http://young40.github.com/blog/2012/12/21/cocosbuilder-step-by-step-part-one/"/>
    <updated>2012-12-21T02:46:00+08:00</updated>
    <id>http://young40.github.com/blog/2012/12/21/cocosbuilder-step-by-step-part-one</id>
    <content type="html"><![CDATA[<p>CocosBuilder是Cocos2d系列的配套开源工具,最新的版本是3.0a, 也是我们这个系列文章所采用的版本.
CCB(CocosBuilder简称)目前只有OS X版本, 没有Windows的版本, 而且源代码也是用Objective-c, 估计移植难度会比较大.
我想这个也是其不够流行的原因吧.</p>

<p>如果你是CCB的熟客,那么你一定会记得CCB v2.x以前版本附带的例子. 而CCB v3.0采用了一个叫做CocosDragonJS的例子, 主要是展示CCB的Javascript的调用能力.
我虽然很喜欢JS, 但是正在学习2d-x, 又很想学好, 所以还是打好基础, 学好原滋原味的2d-x才好, 以后换用无论是Html5, 还是JS, Lua, 心里才会觉得踏实.
我无论C++,还是2d-x都是新手,又是第一次想正儿八经的写博客文章, 难免有很多错误, 还望各位看客踊跃拍砖.</p>

<p>这次的目的是基本实现原来v2.0中的例子.
我采用的2d-x的版本是:cocos2d-2.1beta3-x-2.1.0, 以OS X版本为主, 以sample目录下的HelloCpp为基础改进. CCB的版本是v3.0alpha0.</p>

<!--more-->


<p>本文的目标是基本实现将CCB整合进Mac OS X版本的项目中.</p>

<p>首先将2d-x源代码中sample目录下的HelloCpp目录重命名为TestCocosBuilder.并使用CocosBuilder创建新项目文件在其Resources文件夹中.
还需要将项目需要的图片资源放入Resources目录中. 具体可以参见我打包后的整体项目文件.还可以参见文末的目录树说明.</p>

<p>贴下Xcode项目的目录,如果添加extensions应该逐个添加,否则可能会遇到编译错误,有可能会把其他平台文件错误添加进来.</p>

<p><img src="http://young40.github.com/upload/2012-12/ccb-sbs-1-001.png"></p>

<p>做完这些准备工作后, 我们接下来按步来讲解.</p>

<p>1.首先编辑下<code>AppMacros.h</code>, 修改以下代码</p>

<figure class='code'><figcaption><span>AppMacros.h</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="k">static</span> <span class="n">Resource</span> <span class="n">smallResource</span>  <span class="o">=</span>  <span class="p">{</span> <span class="n">cocos2d</span><span class="o">::</span><span class="n">CCSizeMake</span><span class="p">(</span><span class="mi">480</span><span class="p">,</span> <span class="mi">320</span><span class="p">),</span>   <span class="s">&quot;resources-iphone&quot;</span> <span class="p">};</span>
</span><span class='line'><span class="k">static</span> <span class="n">Resource</span> <span class="n">mediumResource</span> <span class="o">=</span>  <span class="p">{</span> <span class="n">cocos2d</span><span class="o">::</span><span class="n">CCSizeMake</span><span class="p">(</span><span class="mi">1024</span><span class="p">,</span> <span class="mi">768</span><span class="p">),</span>  <span class="s">&quot;resources-ipad&quot;</span>   <span class="p">};</span>
</span><span class='line'><span class="k">static</span> <span class="n">Resource</span> <span class="n">largeResource</span>  <span class="o">=</span>  <span class="p">{</span> <span class="n">cocos2d</span><span class="o">::</span><span class="n">CCSizeMake</span><span class="p">(</span><span class="mi">2048</span><span class="p">,</span> <span class="mi">1536</span><span class="p">),</span> <span class="s">&quot;resources-ipadhd&quot;</span> <span class="p">};</span>
</span></code></pre></td></tr></table></div></figure>


<p>这一段主要是修改<code>HelloCpp</code>默认的资源目录, 配合CCB的发布路径.同时可以将原来几个目录中文件分别移入对应目录.
2.添加一个新类<code>MainScene</code>如下</p>

<figure class='code'><figcaption><span>MainScene.h</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="cp">#ifndef __HelloCpp__MainScene__</span>
</span><span class='line'><span class="cp">#define __HelloCpp__MainScene__</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#include &quot;cocos2d.h&quot;</span>
</span><span class='line'><span class="cp">#include &quot;cocos-ext.h&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">MainScene</span>
</span><span class='line'><span class="o">:</span> <span class="k">public</span> <span class="n">cocos2d</span><span class="o">::</span><span class="n">CCLayer</span> <span class="c1">//从CCLayer派生</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'><span class="k">public</span><span class="o">:</span>
</span><span class='line'>    <span class="k">static</span> <span class="n">cocos2d</span><span class="o">::</span><span class="n">CCScene</span><span class="o">*</span> <span class="n">scene</span><span class="p">();</span>
</span><span class='line'><span class="p">};</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#endif </span><span class="cm">/* defined(__HelloCpp__MainScene__) */</span><span class="cp"></span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>MainScene.cpp</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="cp">#include &quot;MainScene.h&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="n">USING_NS_CC</span><span class="p">;</span>
</span><span class='line'><span class="n">USING_NS_CC_EXT</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="n">CCScene</span><span class="o">*</span> <span class="n">MainScene</span><span class="o">::</span><span class="n">scene</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">CCScene</span> <span class="o">*</span><span class="n">scene</span> <span class="o">=</span> <span class="n">CCScene</span><span class="o">::</span><span class="n">create</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">CCNodeLoaderLibrary</span> <span class="o">*</span><span class="n">lib</span> <span class="o">=</span> <span class="n">CCNodeLoaderLibrary</span><span class="o">::</span><span class="n">newDefaultCCNodeLoaderLibrary</span><span class="p">();</span> <span class="c1">//生成一个默认的Node Loader</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">CCBReader</span> <span class="o">*</span><span class="n">reader</span> <span class="o">=</span> <span class="k">new</span> <span class="n">CCBReader</span><span class="p">(</span><span class="n">lib</span><span class="p">);</span> <span class="c1">//用node load lib 初始化一个ccb reader</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">CCNode</span> <span class="o">*</span><span class="n">node</span> <span class="o">=</span> <span class="n">reader</span><span class="o">-&gt;</span><span class="n">readNodeGraphFromFile</span><span class="p">(</span><span class="s">&quot;MainScene.ccbi&quot;</span><span class="p">,</span> <span class="n">scene</span><span class="p">);</span> <span class="c1">//从ccbi文件中加载node</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">reader</span><span class="o">-&gt;</span><span class="n">release</span><span class="p">();</span> <span class="c1">//注意手动释放内存</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">node</span><span class="o">!=</span><span class="nb">NULL</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="n">scene</span><span class="o">-&gt;</span><span class="n">addChild</span><span class="p">(</span><span class="n">node</span><span class="p">);</span> <span class="c1">//将node 添加到scene中</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="n">scene</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>3.修改<code>AppDelegate.cpp</code>中默认的启动scene</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="n">CCScene</span> <span class="o">*</span><span class="n">pScene</span> <span class="o">=</span> <span class="n">MainScene</span><span class="o">::</span><span class="n">scene</span><span class="p">();</span> <span class="c1">//HelloWorld::scene();</span>
</span></code></pre></td></tr></table></div></figure>


<p>4.注意CCB中发布选项的设置, 并发布一次.
<img src="http://young40.github.com/upload/2012-12/ccb-sbs-1-002.png"></p>

<p>5.如果没有错误的话, 你应该可以看到运行的效果.
<img src="http://young40.github.com/upload/2012-12/ccb-sbs-1-003.png"></p>

<p>Update:
@王哲Walzer 说,CCB大部分是美术在用, 在美术圈讨论, 所以程序圈较少看到人在讨论, 其实用的公司挺多的.
http://weibo.com/1702027805/zay18wLT5</p>

<figure class='code'><figcaption><span>目录结构</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>├── samples <span class="c">#目录结构和2d-x源代码保持一致,相信大家对2d-x源代码很熟悉了.</span>
</span><span class='line'>│   └── CocosBuilderTest <span class="c">#项目所在目录</span>
</span><span class='line'>│       ├── Classes <span class="c">#代码所在目录</span>
</span><span class='line'>│       ├── Resources <span class="c">#资源目录</span>
</span><span class='line'>│       │   ├── ccb <span class="c">#ccb发布后的目录</span>
</span><span class='line'>│       │   │   ├── HelloCocosBuilder.ccbi
</span><span class='line'>│       │   │   ├── ...
</span><span class='line'>│       │   │   └── TestSprites.ccbi
</span><span class='line'>│       │   ├── ccbResources <span class="c">#发布后的默认ccb资源</span>
</span><span class='line'>│       │   ├── fonts
</span><span class='line'>│       │   ├── resources-ipad <span class="c">#注意这几个目录, 稍后我们会提及</span>
</span><span class='line'>│       │   ├── resources-ipadhd
</span><span class='line'>│       │   ├── resources-iphone
</span><span class='line'>│       │   ├── resources-iphonehd
</span><span class='line'>│       ├── ccb-source <span class="c">#ccb项目目录</span>
</span><span class='line'>│       │   ├── ccb
</span><span class='line'>│       │   │   ├── HelloCocosBuilder.ccb <span class="c">#这几个是原CocosBuilder例子中的ccb, 直接复制过来了.</span>
</span><span class='line'>│       │   │   ├── ...
</span><span class='line'>│       │   │   └── TestSprites.ccbi
</span><span class='line'>│       │   ├── ccbResources
</span><span class='line'>│       │   ├── resources-auto <span class="c">#CocosBuilderv3.0的资源目录, 似乎只能存放图片</span>
</span><span class='line'>│       │   │   ├── btn-a-0.png <span class="c">#否则会引起发布是造成CocosBuilder崩溃</span>
</span><span class='line'>│       │   │   ├── ...
</span><span class='line'>│       │   │   └── scale-9-demo.png
</span><span class='line'>│       │   ├── MainScene.ccb <span class="c">#默认生成的ccb, 我们这一次不对其更改</span>
</span><span class='line'>│       │   ├── MainScene.js
</span><span class='line'>│       │   ├── animated-grossini.plist
</span><span class='line'>│       │   ├── animated-grossini.png
</span><span class='line'>│       │   ├── ccb-source.ccbproj
</span><span class='line'>│       │   ├── comic<span class="se">\ </span>andy.ttf
</span><span class='line'>│       │   ├── grossini-generic.plist
</span><span class='line'>│       │   ├── grossini-generic.png
</span><span class='line'>│       │   ├── markerfelt24shadow.fnt
</span><span class='line'>│       │   └── markerfelt24shadow.png
</span><span class='line'>│       └── proj.mac
</span><span class='line'>│           ├── HelloCpp.xcodeproj <span class="c">#项目文件, 暂时只支持mac os x</span>
</span><span class='line'>├── cocos2dx <span class="c">#2d-x文件</span>
</span><span class='line'>├── extensions <span class="c">#2d-x的扩展</span>
</span><span class='line'>│   ├── CCBReader <span class="c">#这个是解析CocosBuilder的主要CCBReader</span>
</span><span class='line'>│   │   ├── CCBAnimationManager.cpp
</span><span class='line'>│   │   ├── CCBAnimationManager.h
</span><span class='line'>│   │   ├── ...
</span><span class='line'>│   │   └── CCSpriteLoader.h
</span><span class='line'>│   ├── GUI
</span><span class='line'>│   ├── network
</span><span class='line'>│   ├── physics_nodes
</span><span class='line'>│   ├── ExtensionMacros.h
</span><span class='line'>│   └── cocos-ext.h
</span></code></pre></td></tr></table></div></figure>


<hr />


<p>代码打包下载:<a href="http://pan.baidu.com/share/link?shareid=158075&uk=2281999082" target="_blank">下载点</a></p>

<ul>
<li>本文是系列文章, 请查看其他文章:</li>
<li><a href="http://young40.github.com/blog/2012/12/21/cocosbuilder-step-by-step-part-one/">一步一步CocosBuilder(1)</a></li>
<li><a href="http://young40.github.com/blog/2012/12/25/cocosbuilder-step-by-step-part-two/">一步一步CocosBuilder(2)</a></li>
<li><a href="http://young40.github.com/blog/2012/12/28/cocosbuilder-step-by-step-part-three/">一步一步CocosBuilder(3)</a></li>
<li><a href="http://young40.github.com/blog/2012/12/29/cocosbuilder-step-by-step-part-four/">一步一步CocosBuilder(4)完结</a></li>
</ul>


<p>谢谢您耐心看完此文, 希望能对您有些帮助.如果有什么问题, 意见, 建议, 拍砖, 欢迎留言或者联系我.</p>

<p>新浪微博: <a href="http://weibo.com/young40">@杨世玲</a> <a href="http://weibo.com/young40">http://weibo.com/young40</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[2d-x深读2:CCPlatformMacros.h]]></title>
    <link href="http://young40.github.com/blog/2012/12/17/cocos2d-x-source-code-research-2-ccplatformmacros-dot-h/"/>
    <updated>2012-12-17T01:49:00+08:00</updated>
    <id>http://young40.github.com/blog/2012/12/17/cocos2d-x-source-code-research-2-ccplatformmacros-dot-h</id>
    <content type="html"><![CDATA[<ul>
<li>路径:<code>cocos2d-2.1beta3-x-2.1.0/cocos2dx/include/ccConfig.h</code></li>
<li>路径:<code>cocos2d-2.1beta3-x-2.1.0/cocos2dx/platform/mac/CCPlatformDefine.h</code> //注意我是以mac平台研究的, 其他平台略有不同</li>
<li>路径:<code>cocos2d-2.1beta3-x-2.1.0/cocos2dx/platform/CCPlatformMacros.h</code></li>
</ul>


<!--more-->


<figure class='code'><figcaption><span>ccConfig.h</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
<span class='line-number'>136</span>
<span class='line-number'>137</span>
<span class='line-number'>138</span>
<span class='line-number'>139</span>
<span class='line-number'>140</span>
<span class='line-number'>141</span>
<span class='line-number'>142</span>
<span class='line-number'>143</span>
<span class='line-number'>144</span>
<span class='line-number'>145</span>
<span class='line-number'>146</span>
<span class='line-number'>147</span>
<span class='line-number'>148</span>
<span class='line-number'>149</span>
<span class='line-number'>150</span>
<span class='line-number'>151</span>
<span class='line-number'>152</span>
<span class='line-number'>153</span>
<span class='line-number'>154</span>
<span class='line-number'>155</span>
<span class='line-number'>156</span>
<span class='line-number'>157</span>
<span class='line-number'>158</span>
<span class='line-number'>159</span>
<span class='line-number'>160</span>
<span class='line-number'>161</span>
<span class='line-number'>162</span>
<span class='line-number'>163</span>
<span class='line-number'>164</span>
<span class='line-number'>165</span>
<span class='line-number'>166</span>
<span class='line-number'>167</span>
<span class='line-number'>168</span>
<span class='line-number'>169</span>
<span class='line-number'>170</span>
<span class='line-number'>171</span>
<span class='line-number'>172</span>
<span class='line-number'>173</span>
<span class='line-number'>174</span>
<span class='line-number'>175</span>
<span class='line-number'>176</span>
<span class='line-number'>177</span>
<span class='line-number'>178</span>
<span class='line-number'>179</span>
<span class='line-number'>180</span>
<span class='line-number'>181</span>
<span class='line-number'>182</span>
<span class='line-number'>183</span>
<span class='line-number'>184</span>
<span class='line-number'>185</span>
<span class='line-number'>186</span>
<span class='line-number'>187</span>
<span class='line-number'>188</span>
<span class='line-number'>189</span>
<span class='line-number'>190</span>
<span class='line-number'>191</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="cp">#include &quot;platform/CCPlatformConfig.h&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//设置为1后会include CCPhysicsScript 和 CCPhysicsDebugNode 添加到物理引擎支持</span>
</span><span class='line'><span class="c1">//需要保证Chipmunk在搜索路径中</span>
</span><span class='line'><span class="cp">#ifndef CC_ENABLE_CHIPMUNK_INTEGRATION</span>
</span><span class='line'><span class="cp">#define CC_ENABLE_CHIPMUNK_INTEGRATION 0</span>
</span><span class='line'><span class="cp">#endif</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//设置为1后会include CCPhysicsScript 添加到Box2D的支持</span>
</span><span class='line'><span class="c1">//同样需要保证Box2D会在搜索路径中</span>
</span><span class='line'><span class="cp">#ifndef CC_ENABLE_BOX2D_INTEGRATION</span>
</span><span class='line'><span class="cp">#define CC_ENABLE_BOX2D_INTEGRATION 0</span>
</span><span class='line'><span class="cp">#endif</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/** </span>
</span><span class='line'><span class="cm"> 设置为1后,2d学会维护一个OpenGL状态缓存来避免不必要的切换</span>
</span><span class='line'><span class="cm"> 为了使用这个功能,需要用下列函数来替换GL的对应函数</span>
</span><span class='line'><span class="cm">    - ccGLUseProgram() instead of glUseProgram()</span>
</span><span class='line'><span class="cm">    - ccGLDeleteProgram() instead of glDeleteProgram()</span>
</span><span class='line'><span class="cm">    - ccGLBlendFunc() instead of glBlendFunc()</span>
</span><span class='line'><span class="cm">如果这个功能被禁止, 那么这些函数会直接调用对应的GL函数, 当然就没有缓存了</span>
</span><span class='line'><span class="cm">打开这个功能能提高速度</span>
</span><span class='line'><span class="cm">如果你的代码是从GL ES 1.1升级过来的, 保持这个功能被禁用. 如果各种功能正常的话, 你可以启用这个功能</span>
</span><span class='line'><span class="cm">#ifndef CC_ENABLE_GL_STATE_CACHE</span>
</span><span class='line'><span class="cm">#define CC_ENABLE_GL_STATE_CACHE 1</span>
</span><span class='line'><span class="cm">#endif</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm">启用后,纹理的坐标会用这个公式来计算</span>
</span><span class='line'><span class="cm">- texCoord.left = (rect.origin.x*2+1) / (texture.wide*2);</span>
</span><span class='line'><span class="cm">- texCoord.right = texCoord.left + (rect.size.width*2-2)/(texture.wide*2);</span>
</span><span class='line'>
</span><span class='line'><span class="cm">The same for bottom and top.</span>
</span><span class='line'>
</span><span class='line'><span class="cm">This formula prevents artifacts by using 99% of the texture.</span>
</span><span class='line'><span class="cm">The &quot;correct&quot; way to prevent artifacts is by using the spritesheet-artifact-fixer.py or a similar tool.</span>
</span><span class='line'>
</span><span class='line'><span class="cm">受影响的类:</span>
</span><span class='line'><span class="cm">- CCSprite / CCSpriteBatchNode and subclasses: CCLabelBMFont, CCTMXTiledMap</span>
</span><span class='line'><span class="cm">- CCLabelAtlas</span>
</span><span class='line'><span class="cm">- CCQuadParticleSystem</span>
</span><span class='line'><span class="cm">- CCTileMap</span>
</span><span class='line'><span class="cm">*/</span>
</span><span class='line'><span class="cp">#ifndef CC_FIX_ARTIFACTS_BY_STRECHING_TEXEL</span>
</span><span class='line'><span class="cp">#define CC_FIX_ARTIFACTS_BY_STRECHING_TEXEL 0</span>
</span><span class='line'><span class="cp">#endif</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//默认0.5秒, 更新下FPS的数据. 数字越大FPS数据越可靠.</span>
</span><span class='line'><span class="cp">#ifndef CC_DIRECTOR_STATS_INTERVAL</span>
</span><span class='line'><span class="cp">#define CC_DIRECTOR_STATS_INTERVAL (0.5f)</span>
</span><span class='line'><span class="cp">#endif</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//FPS数据显示位置,默认左下</span>
</span><span class='line'><span class="cp">#ifndef CC_DIRECTOR_FPS_POSITION</span>
</span><span class='line'><span class="cp">#define CC_DIRECTOR_FPS_POSITION ccp(0,0)</span>
</span><span class='line'><span class="cp">#endif</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/** @def CC_DIRECTOR_DISPATCH_FAST_EVENTS</span>
</span><span class='line'><span class="cm"> If enabled, and only when it is used with CCFastDirector, the main loop will wait 0.04 seconds to</span>
</span><span class='line'><span class="cm"> dispatch all the events, even if there are not events to dispatch.</span>
</span><span class='line'><span class="cm"> If your game uses lot&#39;s of events (eg: touches) it might be a good idea to enable this feature.</span>
</span><span class='line'><span class="cm"> Otherwise, it is safe to leave it disabled.</span>
</span><span class='line'><span class="cm"> </span>
</span><span class='line'><span class="cm"> To enable set it to 1. Disabled by default.</span>
</span><span class='line'><span class="cm"> </span>
</span><span class='line'><span class="cm"> @warning This feature is experimental</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="cp">#ifndef CC_DIRECTOR_DISPATCH_FAST_EVENTS</span>
</span><span class='line'> <span class="cp">#define CC_DIRECTOR_DISPATCH_FAST_EVENTS 0</span>
</span><span class='line'><span class="cp">#endif</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/** @def CC_DIRECTOR_MAC_USE_DISPLAY_LINK_THREAD</span>
</span><span class='line'><span class="cm">If enabled, cocos2d-mac will run on the Display Link thread. If disabled cocos2d-mac will run in its own thread.</span>
</span><span class='line'>
</span><span class='line'><span class="cm">If enabled, the images will be drawn at the &quot;correct&quot; time, but the events might not be very responsive.</span>
</span><span class='line'><span class="cm">If disabled, some frames might be skipped, but the events will be dispatched as they arrived.</span>
</span><span class='line'>
</span><span class='line'><span class="cm">To enable set it to a 1, to disable it set to 0. Enabled by default.</span>
</span><span class='line'>
</span><span class='line'><span class="cm">Only valid for cocos2d-mac. Not supported on cocos2d-ios.</span>
</span><span class='line'>
</span><span class='line'><span class="cm">*/</span>
</span><span class='line'><span class="cp">#ifndef CC_DIRECTOR_MAC_USE_DISPLAY_LINK_THREAD</span>
</span><span class='line'><span class="cp">#define CC_DIRECTOR_MAC_USE_DISPLAY_LINK_THREAD 1</span>
</span><span class='line'><span class="cp">#endif</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/** @def CC_NODE_RENDER_SUBPIXEL</span>
</span><span class='line'><span class="cm"> If enabled, the CCNode objects (CCSprite, CCLabel,etc) will be able to render in subpixels.</span>
</span><span class='line'><span class="cm"> If disabled, integer pixels will be used.</span>
</span><span class='line'><span class="cm"> </span>
</span><span class='line'><span class="cm"> To enable set it to 1. Enabled by default.</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="cp">#ifndef CC_NODE_RENDER_SUBPIXEL</span>
</span><span class='line'><span class="cp">#define CC_NODE_RENDER_SUBPIXEL 1</span>
</span><span class='line'><span class="cp">#endif</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/** @def CC_SPRITEBATCHNODE_RENDER_SUBPIXEL</span>
</span><span class='line'><span class="cm"> If enabled, the CCSprite objects rendered with CCSpriteBatchNode will be able to render in subpixels.</span>
</span><span class='line'><span class="cm"> If disabled, integer pixels will be used.</span>
</span><span class='line'><span class="cm"> </span>
</span><span class='line'><span class="cm"> To enable set it to 1. Enabled by default.</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="cp">#ifndef CC_SPRITEBATCHNODE_RENDER_SUBPIXEL</span>
</span><span class='line'><span class="cp">#define CC_SPRITEBATCHNODE_RENDER_SUBPIXEL    1</span>
</span><span class='line'><span class="cp">#endif</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/** @def CC_TEXTURE_ATLAS_USE_TRIANGLE_STRIP</span>
</span><span class='line'><span class="cm"> Use GL_TRIANGLE_STRIP instead of GL_TRIANGLES when rendering the texture atlas.</span>
</span><span class='line'><span class="cm"> It seems it is the recommend way, but it is much slower, so, enable it at your own risk</span>
</span><span class='line'><span class="cm"> </span>
</span><span class='line'><span class="cm"> To enable set it to a value different than 0. Disabled by default.</span>
</span><span class='line'>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="cp">#ifndef CC_TEXTURE_ATLAS_USE_TRIANGLE_STRIP</span>
</span><span class='line'><span class="cp">#define CC_TEXTURE_ATLAS_USE_TRIANGLE_STRIP 0</span>
</span><span class='line'><span class="cp">#endif</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//VAO定点数组对象</span>
</span><span class='line'><span class="cm">/** @def CC_TEXTURE_ATLAS_USE_VAO</span>
</span><span class='line'><span class="cm"> By default, CCTextureAtlas (used by many cocos2d classes) will use VAO (Vertex Array Objects).</span>
</span><span class='line'><span class="cm"> Apple recommends its usage but they might consume a lot of memory, specially if you use many of them.</span>
</span><span class='line'><span class="cm"> So for certain cases, where you might need hundreds of VAO objects, it might be a good idea to disable it.</span>
</span><span class='line'><span class="cm"> </span>
</span><span class='line'><span class="cm"> To disable it set it to 0. Enabled by default.</span>
</span><span class='line'><span class="cm"> </span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="cp">#ifndef CC_TEXTURE_ATLAS_USE_VAO</span>
</span><span class='line'>    <span class="cp">#if (CC_TARGET_PLATFORM == CC_PLATFORM_IOS) || (CC_TARGET_PLATFORM == CC_PLATFORM_MAC)</span>
</span><span class='line'>        <span class="cp">#define CC_TEXTURE_ATLAS_USE_VAO 1</span>
</span><span class='line'>    <span class="cp">#else</span>
</span><span class='line'>        <span class="cm">/* Some Windows display adapter driver cannot support VAO. */</span>
</span><span class='line'>        <span class="cm">/* Some android devices cannot support VAO very well, so we disable it by default for android platform. */</span>
</span><span class='line'>        <span class="cm">/* Blackberry also doesn&#39;t support this feature. */</span>
</span><span class='line'>      <span class="cp">#define CC_TEXTURE_ATLAS_USE_VAO 0</span>
</span><span class='line'>    <span class="cp">#endif</span>
</span><span class='line'><span class="cp">#endif</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="cm">/** @def CC_USE_LA88_LABELS</span>
</span><span class='line'><span class="cm"> If enabled, it will use LA88 (Luminance Alpha 16-bit textures) for CCLabelTTF objects.</span>
</span><span class='line'><span class="cm"> If it is disabled, it will use A8 (Alpha 8-bit textures).</span>
</span><span class='line'><span class="cm"> LA88 textures are 6% faster than A8 textures, but they will consume 2x memory.</span>
</span><span class='line'>
</span><span class='line'><span class="cm"> This feature is enabled by default.</span>
</span><span class='line'>
</span><span class='line'><span class="cm"> @since v0.99.5</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="cp">#ifndef CC_USE_LA88_LABELS</span>
</span><span class='line'><span class="cp">#define CC_USE_LA88_LABELS 1</span>
</span><span class='line'><span class="cp">#endif</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm">  启用后,所有CCSprite的子类都会花上一个边框,方便调试</span>
</span><span class='line'><span class="cm"> 0 -- disabled</span>
</span><span class='line'><span class="cm"> 1 -- draw bounding box</span>
</span><span class='line'><span class="cm"> 2 -- draw texture box</span>
</span><span class='line'><span class="cm">*/</span>
</span><span class='line'><span class="cp">#ifndef CC_SPRITE_DEBUG_DRAW</span>
</span><span class='line'><span class="cp">#define CC_SPRITE_DEBUG_DRAW 0</span>
</span><span class='line'><span class="cp">#endif</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//CCSpriteBatchNode的调试用加边框</span>
</span><span class='line'><span class="cp">#ifndef CC_SPRITEBATCHNODE_DEBUG_DRAW</span>
</span><span class='line'><span class="cp">#define CC_SPRITEBATCHNODE_DEBUG_DRAW 0</span>
</span><span class='line'><span class="cp">#endif</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//CCLabelBMFont调试加边框</span>
</span><span class='line'><span class="cp">#ifndef CC_LABELBMFONT_DEBUG_DRAW</span>
</span><span class='line'><span class="cp">#define CC_LABELBMFONT_DEBUG_DRAW 0</span>
</span><span class='line'><span class="cp">#endif</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//LabeltAtlas调试加边框</span>
</span><span class='line'><span class="cp">#ifndef CC_LABELATLAS_DEBUG_DRAW</span>
</span><span class='line'><span class="cp">#define CC_LABELATLAS_DEBUG_DRAW 0</span>
</span><span class='line'><span class="cp">#endif</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/** @def CC_ENABLE_PROFILERS</span>
</span><span class='line'><span class="cm"> If enabled, will activate various profilers within cocos2d. This statistical data will be output to the console</span>
</span><span class='line'><span class="cm"> once per second showing average time (in milliseconds) required to execute the specific routine(s).</span>
</span><span class='line'><span class="cm"> Useful for debugging purposes only. It is recommended to leave it disabled.</span>
</span><span class='line'><span class="cm"> </span>
</span><span class='line'><span class="cm"> To enable set it to a value different than 0. Disabled by default.</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="cp">#ifndef CC_ENABLE_PROFILERS</span>
</span><span class='line'><span class="cp">#define CC_ENABLE_PROFILERS 0</span>
</span><span class='line'><span class="cp">#endif</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/** Enable Lua engine debug log */</span>
</span><span class='line'><span class="cp">#ifndef CC_LUA_ENGINE_DEBUG</span>
</span><span class='line'><span class="cp">#define CC_LUA_ENGINE_DEBUG 0</span>
</span><span class='line'><span class="cp">#endif</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>mac/CCPlatformDefine.h</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="cp">#include &lt;assert.h&gt; </span><span class="c1">//引入assert</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#define CC_DLL </span><span class="c1">//CC_DLL只在win32平台下有效</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#if CC_DISABLE_ASSERT &gt; 0</span>
</span><span class='line'><span class="cp">#define CC_ASSERT(cond) </span><span class="c1">//禁用了assert</span>
</span><span class='line'><span class="cp">#else</span>
</span><span class='line'><span class="cp">#define CC_ASSERT(cond) assert(cond) </span><span class="c1">//启用了assert</span>
</span><span class='line'><span class="cp">#endif</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#define CC_UNUSED_PARAM(unusedparam) (void)unusedparam</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//定义空指针</span>
</span><span class='line'><span class="cp">#ifndef NULL</span>
</span><span class='line'><span class="cp">#ifdef __cplusplus</span>
</span><span class='line'><span class="cp">#define NULL    0</span>
</span><span class='line'><span class="cp">#else</span>
</span><span class='line'><span class="cp">#define NULL    ((void *)0)</span>
</span><span class='line'><span class="cp">#endif</span>
</span><span class='line'><span class="cp">#endif</span>
</span></code></pre></td></tr></table></div></figure>


<p>我们可以看到win32中不同的部分比如<code>CC_DLL</code></p>

<figure class='code'><figcaption><span>win32/CCPlatformDefine.h</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="cp">#if defined(_USRDLL)</span>
</span><span class='line'>    <span class="cp">#define CC_DLL     __declspec(dllexport)</span>
</span><span class='line'><span class="cp">#else         </span><span class="cm">/* use a DLL library */</span><span class="cp"></span>
</span><span class='line'>    <span class="cp">#define CC_DLL     __declspec(dllimport)</span>
</span><span class='line'><span class="cp">#endif</span>
</span></code></pre></td></tr></table></div></figure>


<p>Linux部分也是<code>CC_DLL</code>不同</p>

<figure class='code'><figcaption><span>linux/CCPlatformDefine.h</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="cp">#if defined(_USRDLL)</span>
</span><span class='line'><span class="cp">#define CC_DLL __attribute__ ((visibility (&quot;default&quot;)))</span>
</span><span class='line'><span class="cp">#else         </span><span class="cm">/* use a DLL library */</span><span class="cp"></span>
</span><span class='line'><span class="cp">#define CC_DLL __attribute__ ((visibility (&quot;default&quot;)))</span>
</span><span class='line'><span class="cp">#endif</span>
</span></code></pre></td></tr></table></div></figure>


<p>Android中比较不同的部分是<code>CC_ASSERT</code></p>

<figure class='code'><figcaption><span>android/CCPlatformDefine.h</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="cp">#define CC_ASSERT(cond) \</span>
</span><span class='line'><span class="cp">if (! (cond)) \</span>
</span><span class='line'><span class="cp">{ \</span>
</span><span class='line'><span class="cp">    char content[256]; \</span>
</span><span class='line'><span class="cp">    sprintf(content, &quot;%s function:%s line:%d&quot;, __FILE__, __FUNCTION__, __LINE__);  \</span>
</span><span class='line'><span class="cp">    CCMessageBox(content, &quot;Assert error&quot;); \</span>
</span><span class='line'><span class="cp">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>我们最后再来看下<code>CCPlatformMacros.h</code></p>

<figure class='code'><figcaption><span>CCPlatformMacros.h</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
<span class='line-number'>136</span>
<span class='line-number'>137</span>
<span class='line-number'>138</span>
<span class='line-number'>139</span>
<span class='line-number'>140</span>
<span class='line-number'>141</span>
<span class='line-number'>142</span>
<span class='line-number'>143</span>
<span class='line-number'>144</span>
<span class='line-number'>145</span>
<span class='line-number'>146</span>
<span class='line-number'>147</span>
<span class='line-number'>148</span>
<span class='line-number'>149</span>
<span class='line-number'>150</span>
<span class='line-number'>151</span>
<span class='line-number'>152</span>
<span class='line-number'>153</span>
<span class='line-number'>154</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="cp">#include &quot;ccConfig.h&quot;</span>
</span><span class='line'><span class="cp">#include &quot;CCPlatformConfig.h&quot;</span>
</span><span class='line'><span class="cp">#include &quot;CCPlatformDefine.h&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//CREATE_FUNC是2d-x的一个核心功能,一般采用例如`MySpriter *my = MySpriter::create()`的形式调用.</span>
</span><span class='line'><span class="c1">//这里的create()成员函数即是由CREATE_FUNC创建, 来达到让2d-x来管理内存分配的功能</span>
</span><span class='line'><span class="cp">#define CREATE_FUNC(__TYPE__) \</span>
</span><span class='line'><span class="cp">static __TYPE__* create() \</span>
</span><span class='line'><span class="cp">{ \</span>
</span><span class='line'><span class="cp">    __TYPE__ *pRet = new __TYPE__(); \</span>
</span><span class='line'><span class="cp">    if (pRet &amp;&amp; pRet-&gt;init()) \</span>
</span><span class='line'><span class="cp">    { \</span>
</span><span class='line'><span class="cp">        pRet-&gt;autorelease(); \</span>
</span><span class='line'><span class="cp">        return pRet; \</span>
</span><span class='line'><span class="cp">    } \</span>
</span><span class='line'><span class="cp">    else \</span>
</span><span class='line'><span class="cp">    { \</span>
</span><span class='line'><span class="cp">        delete pRet; \</span>
</span><span class='line'><span class="cp">        pRet = NULL; \</span>
</span><span class='line'><span class="cp">        return NULL; \</span>
</span><span class='line'><span class="cp">    } \</span>
</span><span class='line'><span class="cp">}</span>
</span><span class='line'><span class="c1">//早期版本还有一个NODE_FUNC完成和CREATE_FUNC一样的功能,已经废弃,不再讨论</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//CC_ENABLE_CACHE_TEXTURE_DATA 只在Android上启用, 会缓存纹理</span>
</span><span class='line'><span class="cp">#if (CC_TARGET_PLATFORM == CC_PLATFORM_ANDROID)</span>
</span><span class='line'>    <span class="cp">#define CC_ENABLE_CACHE_TEXTURE_DATA       1</span>
</span><span class='line'><span class="cp">#else</span>
</span><span class='line'>    <span class="cp">#define CC_ENABLE_CACHE_TEXTURE_DATA       0</span>
</span><span class='line'><span class="cp">#endif</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#if (CC_TARGET_PLATFORM == CC_PLATFORM_ANDROID) || (CC_TARGET_PLATFORM == CC_PLATFORM_WIN32)</span>
</span><span class='line'><span class="c1">//重新绑定indices, 避免在android和win32下glDrawElements函数crash的bug</span>
</span><span class='line'>    <span class="cp">#define CC_REBIND_INDICES_BUFFER  1</span>
</span><span class='line'><span class="cp">#else</span>
</span><span class='line'>    <span class="cp">#define CC_REBIND_INDICES_BUFFER  0</span>
</span><span class='line'><span class="cp">#endif</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//常用宏定义</span>
</span><span class='line'><span class="cp">#ifdef __cplusplus </span><span class="c1">//namespace只在C++中起作用</span>
</span><span class='line'>    <span class="cp">#define NS_CC_BEGIN                     namespace cocos2d {</span>
</span><span class='line'>    <span class="cp">#define NS_CC_END                       }</span>
</span><span class='line'>    <span class="cp">#define USING_NS_CC                     using namespace cocos2d  </span><span class="c1">//应该尽量使用USING_NS_CC, 兼容性更好</span>
</span><span class='line'><span class="cp">#else</span>
</span><span class='line'>    <span class="cp">#define NS_CC_BEGIN </span>
</span><span class='line'>    <span class="cp">#define NS_CC_END </span>
</span><span class='line'>    <span class="cp">#define USING_NS_CC </span>
</span><span class='line'><span class="cp">#endif </span>
</span><span class='line'>
</span><span class='line'><span class="c1">//成员函数快捷声明/定义宏</span>
</span><span class='line'><span class="c1">//多使用这些宏, 可以方便地定义出合乎面向对象原则的成员变量.</span>
</span><span class='line'><span class="c1">//需要注意的是这些调用了这些宏之后, 应该养成重新写public, private等标号的习惯. 因为之后的都会变成public</span>
</span><span class='line'><span class="c1">//定义的成员变量都是protected的</span>
</span><span class='line'><span class="c1">//只读的成员变量</span>
</span><span class='line'><span class="cp">#define CC_PROPERTY_READONLY(varType, varName, funName)\</span>
</span><span class='line'><span class="cp">protected: varType varName;\</span>
</span><span class='line'><span class="cp">public: virtual varType get##funName(void);</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//getter是为引用</span>
</span><span class='line'><span class="cp">#define CC_PROPERTY_READONLY_PASS_BY_REF(varType, varName, funName)\</span>
</span><span class='line'><span class="cp">protected: varType varName;\</span>
</span><span class='line'><span class="cp">public: virtual const varType&amp; get##funName(void);</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//可读可写成员变量</span>
</span><span class='line'><span class="cp">#define CC_PROPERTY(varType, varName, funName)\</span>
</span><span class='line'><span class="cp">protected: varType varName;\</span>
</span><span class='line'><span class="cp">public: virtual varType get##funName(void);\</span>
</span><span class='line'><span class="cp">public: virtual void set##funName(varType var);</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#define CC_PROPERTY_PASS_BY_REF(varType, varName, funName)\</span>
</span><span class='line'><span class="cp">protected: varType varName;\</span>
</span><span class='line'><span class="cp">public: virtual varType get##funName(void);\</span>
</span><span class='line'><span class="cp">public: virtual void set##funName(const varType&amp; var);</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//以上的getter,setter只有声明, 下面的这些带有定义</span>
</span><span class='line'><span class="cp">#define CC_SYNTHESIZE_READONLY(varType, varName, funName)\</span>
</span><span class='line'><span class="cp">protected: varType varName;\</span>
</span><span class='line'><span class="cp">public: virtual varType get##funName(void) const { return varName; }</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#define CC_SYNTHESIZE_READONLY_PASS_BY_REF(varType, varName, funName)\</span>
</span><span class='line'><span class="cp">protected: varType varName;\</span>
</span><span class='line'><span class="cp">public: virtual const varType&amp; get##funName(void) const { return varName; }</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#define CC_SYNTHESIZE(varType, varName, funName)\</span>
</span><span class='line'><span class="cp">protected: varType varName;\</span>
</span><span class='line'><span class="cp">public: virtual varType get##funName(void) const { return varName; }\</span>
</span><span class='line'><span class="cp">public: virtual void set##funName(varType var){ varName = var; }</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#define CC_SYNTHESIZE_PASS_BY_REF(varType, varName, funName)\</span>
</span><span class='line'><span class="cp">protected: varType varName;\</span>
</span><span class='line'><span class="cp">public: virtual varType get##funName(void) const { return varName; }\</span>
</span><span class='line'><span class="cp">public: virtual void set##funName(const varType&amp; var){ varName = var; }</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//setter中会retain一次var, 防止被gc回收.</span>
</span><span class='line'><span class="cp">#define CC_SYNTHESIZE_RETAIN(varType, varName, funName)    \</span>
</span><span class='line'><span class="cp">private: varType varName; \</span>
</span><span class='line'><span class="cp">public: virtual varType get##funName(void) const { return varName; } \</span>
</span><span class='line'><span class="cp">public: virtual void set##funName(varType var)   \</span>
</span><span class='line'><span class="cp">{ \</span>
</span><span class='line'><span class="cp">    if (varName != var) \</span>
</span><span class='line'><span class="cp">    { \</span>
</span><span class='line'><span class="cp">        CC_SAFE_RETAIN(var); \</span>
</span><span class='line'><span class="cp">        CC_SAFE_RELEASE(varName); \</span>
</span><span class='line'><span class="cp">        varName = var; \</span>
</span><span class='line'><span class="cp">    } \</span>
</span><span class='line'><span class="cp">} </span>
</span><span class='line'>
</span><span class='line'><span class="cp">#define CC_SAFE_DELETE(p)            do { if(p) { delete (p); (p) = 0; } } while(0)</span>
</span><span class='line'><span class="cp">#define CC_SAFE_DELETE_ARRAY(p)     do { if(p) { delete[] (p); (p) = 0; } } while(0)</span>
</span><span class='line'><span class="cp">#define CC_SAFE_FREE(p)                do { if(p) { free(p); (p) = 0; } } while(0)</span>
</span><span class='line'><span class="cp">#define CC_SAFE_RELEASE(p)            do { if(p) { (p)-&gt;release(); } } while(0)</span>
</span><span class='line'><span class="cp">#define CC_SAFE_RELEASE_NULL(p)        do { if(p) { (p)-&gt;release(); (p) = 0; } } while(0)</span>
</span><span class='line'><span class="cp">#define CC_SAFE_RETAIN(p)            do { if(p) { (p)-&gt;retain(); } } while(0)</span>
</span><span class='line'><span class="cp">#define CC_BREAK_IF(cond)            if(cond) break</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#define __CCLOGWITHFUNCTION(s, ...) \</span>
</span><span class='line'><span class="cp">    CCLog(&quot;%s : %s&quot;,__FUNCTION__, CCString::createWithFormat(s, ##__VA_ARGS__)-&gt;getCString())</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//这个宏定义要注意大小写, 会很容易和cocos2d::CCLog弄错, 因为代码提示的问题.</span>
</span><span class='line'><span class="c1">// cocos2d debug</span>
</span><span class='line'><span class="cp">#if !defined(COCOS2D_DEBUG) || COCOS2D_DEBUG == 0</span>
</span><span class='line'><span class="cp">#define CCLOG(...)       do {} while (0)</span>
</span><span class='line'><span class="cp">#define CCLOGINFO(...)   do {} while (0)</span>
</span><span class='line'><span class="cp">#define CCLOGERROR(...)  do {} while (0)</span>
</span><span class='line'><span class="cp">#define CCLOGWARN(...)   do {} while (0)</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#elif COCOS2D_DEBUG == 1</span>
</span><span class='line'><span class="cp">#define CCLOG(format, ...)      cocos2d::CCLog(format, ##__VA_ARGS__)</span>
</span><span class='line'><span class="cp">#define CCLOGERROR(format,...)  cocos2d::CCLog(format, ##__VA_ARGS__)</span>
</span><span class='line'><span class="cp">#define CCLOGINFO(format,...)   do {} while (0)</span>
</span><span class='line'><span class="cp">#define CCLOGWARN(...) __CCLOGWITHFUNCTION(__VA_ARGS__)</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#elif COCOS2D_DEBUG &gt; 1</span>
</span><span class='line'><span class="cp">#define CCLOG(format, ...)      cocos2d::CCLog(format, ##__VA_ARGS__)</span>
</span><span class='line'><span class="cp">#define CCLOGERROR(format,...)  cocos2d::CCLog(format, ##__VA_ARGS__)</span>
</span><span class='line'><span class="cp">#define CCLOGINFO(format,...)   cocos2d::CCLog(format, ##__VA_ARGS__)</span>
</span><span class='line'><span class="cp">#define CCLOGWARN(...) __CCLOGWITHFUNCTION(__VA_ARGS__)</span>
</span><span class='line'><span class="cp">#endif </span><span class="c1">// COCOS2D_DEBUG</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Lua engine debug</span>
</span><span class='line'><span class="cp">#if !defined(COCOS2D_DEBUG) || COCOS2D_DEBUG == 0 || CC_LUA_ENGINE_DEBUG == 0</span>
</span><span class='line'><span class="cp">#define LUALOG(...)</span>
</span><span class='line'><span class="cp">#else</span>
</span><span class='line'><span class="cp">#define LUALOG(format, ...)     cocos2d::CCLog(format, ##__VA_ARGS__)</span>
</span><span class='line'><span class="cp">#endif </span><span class="c1">// Lua engine debug</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//定义废弃(deprecated)属性</span>
</span><span class='line'><span class="cp">#if defined(__GNUC__) &amp;&amp; ((__GNUC__ &gt;= 4) || ((__GNUC__ == 3) &amp;&amp; (__GNUC_MINOR__ &gt;= 1)))</span>
</span><span class='line'>    <span class="cp">#define CC_DEPRECATED_ATTRIBUTE __attribute__((deprecated))</span>
</span><span class='line'><span class="cp">#elif _MSC_VER &gt;= 1400 </span><span class="c1">//vs 2005 or higher</span>
</span><span class='line'>    <span class="cp">#define CC_DEPRECATED_ATTRIBUTE __declspec(deprecated) </span>
</span><span class='line'><span class="cp">#else</span>
</span><span class='line'>    <span class="cp">#define CC_DEPRECATED_ATTRIBUTE</span>
</span><span class='line'><span class="cp">#endif </span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[2d-x深读1:CCPlatformConfig.h]]></title>
    <link href="http://young40.github.com/blog/2012/12/17/cocos2d-x-source-code-research-1-ccplatformconfig-dot-h/"/>
    <updated>2012-12-17T00:43:00+08:00</updated>
    <id>http://young40.github.com/blog/2012/12/17/cocos2d-x-source-code-research-1-ccplatformconfig-dot-h</id>
    <content type="html"><![CDATA[<p>准备好好学习下Cocos2d-x(以下简称2dx), 我正在很努力地学习C++.</p>

<p>作为新手的我, 只能从最基本的代码读起. 就从<code>CCPlatformConfig.h</code>开始研究起吧, 这个文件没有include其他文件, 是最基本的文件.</p>

<p>研究成果见代码.</p>

<!--more-->


<ul>
<li>版本:<code>cocos2d-2.1beta3-x-2.1.0</code></li>
<li>路径:<code>cocos2d-2.1beta3-x-2.1.0/cocos2dx/platform</code></li>
</ul>


<figure class='code'><figcaption><span>CCPlatformConfig.h</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="cp">#ifndef __CC_PLATFORM_CONFIG_H__</span>
</span><span class='line'><span class="cp">#define __CC_PLATFORM_CONFIG_H__</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm">  Config of cocos2d-x project, per target platform.</span>
</span><span class='line'><span class="cm">  */</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//////////////////////////////////////////////////////////////////////////</span>
</span><span class='line'><span class="c1">// pre configure</span>
</span><span class='line'><span class="c1">//////////////////////////////////////////////////////////////////////////</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// define supported target platform macro which CC uses.</span>
</span><span class='line'><span class="cp">#define CC_PLATFORM_UNKNOWN            0</span>
</span><span class='line'><span class="cp">#define CC_PLATFORM_IOS                1</span>
</span><span class='line'><span class="cp">#define CC_PLATFORM_ANDROID            2</span>
</span><span class='line'><span class="cp">#define CC_PLATFORM_WIN32              3</span>
</span><span class='line'><span class="cp">#define CC_PLATFORM_MARMALADE          4</span>
</span><span class='line'><span class="cp">#define CC_PLATFORM_LINUX              5</span>
</span><span class='line'><span class="cp">#define CC_PLATFORM_BADA               6</span>
</span><span class='line'><span class="cp">#define CC_PLATFORM_BLACKBERRY         7</span>
</span><span class='line'><span class="cp">#define CC_PLATFORM_MAC                8</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//默认是unknown的</span>
</span><span class='line'><span class="c1">// Determine target platform by compile environment macro.</span>
</span><span class='line'><span class="cp">#define CC_TARGET_PLATFORM             CC_PLATFORM_UNKNOWN</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//CC_TARGET_OS_MAC等是从编译器的环境变量传入的. 参加各编译器或者IDE的预定义宏设置</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// mac</span>
</span><span class='line'><span class="cp">#if defined(CC_TARGET_OS_MAC)</span>
</span><span class='line'><span class="cp">#undef  CC_TARGET_PLATFORM </span><span class="c1">//先取消定义</span>
</span><span class='line'><span class="cp">#define CC_TARGET_PLATFORM         CC_PLATFORM_MAC </span><span class="c1">//定义为MAC平台</span>
</span><span class='line'><span class="cp">#endif</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// iphone</span>
</span><span class='line'><span class="cp">#if defined(CC_TARGET_OS_IPHONE)</span>
</span><span class='line'>    <span class="cp">#undef  CC_TARGET_PLATFORM</span>
</span><span class='line'>    <span class="cp">#define CC_TARGET_PLATFORM         CC_PLATFORM_IOS</span>
</span><span class='line'>    <span class="cp">#define CC_SUPPORT_PVRTC </span><span class="c1">//支持prv压缩格式</span>
</span><span class='line'><span class="cp">#endif</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// android</span>
</span><span class='line'><span class="cp">#if defined(ANDROID)</span>
</span><span class='line'>    <span class="cp">#undef  CC_TARGET_PLATFORM</span>
</span><span class='line'>    <span class="cp">#define CC_TARGET_PLATFORM         CC_PLATFORM_ANDROID</span>
</span><span class='line'><span class="cp">#endif</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// win32</span>
</span><span class='line'><span class="cp">#if defined(WIN32) &amp;&amp; defined(_WINDOWS)</span>
</span><span class='line'>    <span class="cp">#undef  CC_TARGET_PLATFORM</span>
</span><span class='line'>    <span class="cp">#define CC_TARGET_PLATFORM         CC_PLATFORM_WIN32</span>
</span><span class='line'><span class="cp">#endif</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// linux</span>
</span><span class='line'><span class="cp">#if defined(LINUX)</span>
</span><span class='line'>    <span class="cp">#undef  CC_TARGET_PLATFORM</span>
</span><span class='line'>    <span class="cp">#define CC_TARGET_PLATFORM         CC_PLATFORM_LINUX</span>
</span><span class='line'><span class="cp">#endif</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// marmalade</span>
</span><span class='line'><span class="cp">#if defined(MARMALADE)</span>
</span><span class='line'><span class="cp">#undef  CC_TARGET_PLATFORM</span>
</span><span class='line'><span class="cp">#define CC_TARGET_PLATFORM         CC_PLATFORM_MARMALADE</span>
</span><span class='line'><span class="cp">#endif</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// bada</span>
</span><span class='line'><span class="cp">#if defined(SHP)</span>
</span><span class='line'><span class="cp">#undef  CC_TARGET_PLATFORM</span>
</span><span class='line'><span class="cp">#define CC_TARGET_PLATFORM         CC_PLATFORM_BADA</span>
</span><span class='line'><span class="cp">#endif</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// qnx</span>
</span><span class='line'><span class="cp">#if defined(__QNX__)</span>
</span><span class='line'>    <span class="cp">#undef  CC_TARGET_PLATFORM</span>
</span><span class='line'>    <span class="cp">#define CC_TARGET_PLATFORM     CC_PLATFORM_BLACKBERRY</span>
</span><span class='line'><span class="cp">#endif</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="c1">//////////////////////////////////////////////////////////////////////////</span>
</span><span class='line'><span class="c1">// post configure</span>
</span><span class='line'><span class="c1">//////////////////////////////////////////////////////////////////////////</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//不支持的平台,如果你在上面平台上遇到这个错误, 就可能是预定义变量, 或者编译器的环境变量设置错误</span>
</span><span class='line'><span class="c1">// check user set platform</span>
</span><span class='line'><span class="cp">#if ! CC_TARGET_PLATFORM</span>
</span><span class='line'>    <span class="cp">#error  &quot;Cannot recognize the target platform; are you targeting an unsupported platform?&quot;</span>
</span><span class='line'><span class="cp">#endif </span>
</span><span class='line'>
</span><span class='line'><span class="cp">#if (CC_TARGET_PLATFORM == CC_PLATFORM_WIN32)</span>
</span><span class='line'><span class="cp">#pragma warning (disable:4127) </span><span class="c1">//在win32平台不显示4127的warning, 这个具体用法可以参见</span>
</span><span class='line'><span class="c1">//http://blog.csdn.net/wowolook/article/details/8060334</span>
</span><span class='line'><span class="cp">#endif  </span><span class="c1">// CC_PLATFORM_WIN32</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#endif  </span><span class="c1">// __CC_PLATFORM_CONFIG_H__</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Cocos2d-x 真是太棒了]]></title>
    <link href="http://young40.github.com/blog/2012/12/14/cocos2d-x-is-awesome/"/>
    <updated>2012-12-14T03:07:00+08:00</updated>
    <id>http://young40.github.com/blog/2012/12/14/cocos2d-x-is-awesome</id>
    <content type="html"><![CDATA[<p>大概从7月20号左右, 开始决定转向游戏, 首先接触了cocos2d-iphone, 学习了几天. 然后简单了解下就转向了cocos2d-x的学习.</p>

<p>2d-x最令人开心的就是跨平台特性, 经过这段时间的尝试, 感觉跨平台特性确实很强大. 我一般都是在Xcode写代码, 以os x平台做调试, 然后ios平台就不用提了, 直接编译即可.
Win和Android下面一般都是直接编译即可. 当然, 因为我对C++也是刚刚开始学习, 所以代码写的不标准, 那么在VS下面会无法通过编译. 主要是体现在一些需要将函数作为参数传入的地方,
比较会不容易弄清楚回调函数的参数. Xcode我通通将<code>CCObject *sender</code>作为参数, 而VS要求就非常严格了.</p>

<!--more-->


<p>在Win上, 我使用VS2012编译, 能很好地支持我现在使用的C++11的一些特性, 比如类似于:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>vector&lt;int&gt; v(1);
</span><span class='line'>for (auto i : v)
</span><span class='line'>{
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<p>而在Android上, 因为一直没有更新NDK, 版本是r8b, 一直没有办法很好地编译这段代码. 更新为r8c之后,可以编译了.太好了, 我还是很喜欢C++11的这些新的语法糖.</p>

<p>默认是没有启用C++11特性的, 可以在<code>Android.mk</code>中, 添加<code>LOCAL_CPPFLAGS += -std=c++0x</code>来启用这个特性.</p>

<p>作为练习, 我将潘潘的j2me的坦克游戏简单移植到ios上, 简单实现以后, 我转向山寨@胡铠鸥 的PopCube(<a target="_blank" href="https://itunes.apple.com/cn/app/popcube!/id562905043?l=en&mt=8">原版下载</a>)了. 山寨的很彻底, 直接将图片,声音等资源从原版的ipa里面提取出来, 或许游戏资源的保护也应该做的更好一点.</p>

<p>接下来要转向继续开发坦克了, 希望一切顺利.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[C++随机数]]></title>
    <link href="http://young40.github.com/blog/2012/12/12/random-number-in-cpp/"/>
    <updated>2012-12-12T05:52:00+08:00</updated>
    <id>http://young40.github.com/blog/2012/12/12/random-number-in-cpp</id>
    <content type="html"><![CDATA[<p>这两天写一个方块消除游戏, 开局的时候就需要随机颜色方块布局. 在调试的时候, 发现似乎有些关卡总是相同的.
终于发现了程序第一次打开的时候, 开局总是相同的.</p>

<!--more-->


<p>rand()可以产生0到之间的伪随机数, 可以利用srand()指定一个无符号整数作为种子. 如果种子相同, 那么产生的伪随机数列相同.
默认种子为1, 所以如果不改变种子的话, 获得的随机数列总是相同的.</p>

<figure class='code'><figcaption><span>Random</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="n">srand</span><span class="p">(</span> <span class="n">time</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span> <span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="mi">10</span><span class="p">;</span> <span class="o">++</span><span class="n">i</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">printf</span><span class="p">(</span><span class="s">&quot;%d</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="n">rand</span><span class="p">());</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[声明和定义的研究]]></title>
    <link href="http://young40.github.com/blog/2012/12/10/declaration-and-definition-in-cpp/"/>
    <updated>2012-12-10T07:35:00+08:00</updated>
    <id>http://young40.github.com/blog/2012/12/10/declaration-and-definition-in-cpp</id>
    <content type="html"><![CDATA[<p>最近一直在看C++, 基础的东西瞄了一遍就飘过了, 然后就记不得很清楚了.
这两天觉得看书的时候, 对声明和定义的含义很含糊, 以至于都不是很明白书上在说什么地方了.
看来有必要对声明和定义重新研究下, 既然架设了这个博客, 那么就写一篇博客吧.</p>

<!--more-->


<p>定义(Definiation)用于给变量分配存储空间, 还可以给变量指定初始值. 变量只能有一个定义.</p>

<p>声明(Declaration)表明变量的类型和名字. 定义也是声明.可以通过extern这种方式来仅声明而不定义变量.</p>

<figure class='code'><figcaption><span>Declaration</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='c++'><span class='line'><span class="k">extern</span> <span class="kt">int</span> <span class="n">i</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<p>定义会分配内存空间.</p>

<p>可以多次声明.</p>

<p>好吧, 这篇文章不能称之为研究, 仅仅是从C++ Primer抄下来的而已.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[在OS X上折腾OctoPress]]></title>
    <link href="http://young40.github.com/blog/2012/12/09/setup-octopress-on-os-x-10-dot-8/"/>
    <updated>2012-12-09T10:19:00+08:00</updated>
    <id>http://young40.github.com/blog/2012/12/09/setup-octopress-on-os-x-10-dot-8</id>
    <content type="html"><![CDATA[<p>这两天心血来潮, 突然想在github上架设个博客玩玩了, 比较好的两个选择就是OctoPress和Jekyll-Bootstrap.
昨天尝试了用Jekyll-Bootstrap, 感觉还不错啦, 我因为没有找到代码高亮的方法, 以及自定义的方法, 就放弃了.</p>

<p>然后今天就尝试OctoPress, 不想op需要ruby 1.9.3, 而OS X 10.8自带的是1.8.7. 果然在执行rake generate的时候出错.</p>

<p>我是有安装homebrew的软件包管理器的, 使用brew安装ruby, 结果Terminal下还是1.8.7.</p>

<!--more-->


<p>然后就学习到有个东西叫做rvm, ruby版本管理器, 允许多个ruby同时安装. 官方的源速度太慢, 所以尝试用sed换成淘宝源, 网上别人给出的sed命令报错, 所以又复习了下vim替换, 全部替换了下.</p>

<p>再接着安装bundler, 报错说RedCloth无法安装.网上搜索了下无果, 注意到中间的时候有个地方提示查看log, 然后发现以这个log为名字的log在系统里面太多了, 也区分不出路径. 索性将所有搜索到的都删除掉. 然后发现RedCloth安装文件需要gcc-4.2, 所以将gcc ln了一个gcc-4.2.</p>

<p>另外, 由于对git不是很熟悉, octopress将主目录作为source分支, 而_deploy目录作为master分支, 为了弄明白这个问题, 我花费了更长的时间.不过也总算是对git的pull, push, branch理解更深入了一点</p>

<p>博客终于跑起来了, 还是非常开心.</p>

<p>PS:我再说两点.
1.github的服务器有缓存,更新后, 可能需要强制刷新才能看到更新.
2.分类是支持中文的, 但rake preview不支持.
3.Disqus支持中文, 但是可能需要申请.可以在Disqus设置页面找到申请链接.</p>
]]></content>
  </entry>
  
</feed>
