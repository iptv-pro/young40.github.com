<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[喜气羊羊]]></title>
  <link href="http://young40.github.com/atom.xml" rel="self"/>
  <link href="http://young40.github.com/"/>
  <updated>2012-12-17T20:23:57+08:00</updated>
  <id>http://young40.github.com/</id>
  <author>
    <name><![CDATA[Young40]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[2d-x深读2:CCPlatformMacros.h]]></title>
    <link href="http://young40.github.com/blog/2012/12/17/cocos2d-x-source-code-research-2-ccplatformmacros-dot-h/"/>
    <updated>2012-12-17T01:49:00+08:00</updated>
    <id>http://young40.github.com/blog/2012/12/17/cocos2d-x-source-code-research-2-ccplatformmacros-dot-h</id>
    <content type="html"><![CDATA[<ul>
<li>路径:<code>cocos2d-2.1beta3-x-2.1.0/cocos2dx/include/ccConfig.h</code></li>
<li>路径:<code>cocos2d-2.1beta3-x-2.1.0/cocos2dx/platform/mac/CCPlatformDefine.h</code> //注意我是以mac平台研究的, 其他平台略有不同</li>
<li>路径:<code>cocos2d-2.1beta3-x-2.1.0/cocos2dx/platform/CCPlatformMacros.h</code></li>
</ul>


<!--more-->


<figure class='code'><figcaption><span>ccConfig.h</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
<span class='line-number'>136</span>
<span class='line-number'>137</span>
<span class='line-number'>138</span>
<span class='line-number'>139</span>
<span class='line-number'>140</span>
<span class='line-number'>141</span>
<span class='line-number'>142</span>
<span class='line-number'>143</span>
<span class='line-number'>144</span>
<span class='line-number'>145</span>
<span class='line-number'>146</span>
<span class='line-number'>147</span>
<span class='line-number'>148</span>
<span class='line-number'>149</span>
<span class='line-number'>150</span>
<span class='line-number'>151</span>
<span class='line-number'>152</span>
<span class='line-number'>153</span>
<span class='line-number'>154</span>
<span class='line-number'>155</span>
<span class='line-number'>156</span>
<span class='line-number'>157</span>
<span class='line-number'>158</span>
<span class='line-number'>159</span>
<span class='line-number'>160</span>
<span class='line-number'>161</span>
<span class='line-number'>162</span>
<span class='line-number'>163</span>
<span class='line-number'>164</span>
<span class='line-number'>165</span>
<span class='line-number'>166</span>
<span class='line-number'>167</span>
<span class='line-number'>168</span>
<span class='line-number'>169</span>
<span class='line-number'>170</span>
<span class='line-number'>171</span>
<span class='line-number'>172</span>
<span class='line-number'>173</span>
<span class='line-number'>174</span>
<span class='line-number'>175</span>
<span class='line-number'>176</span>
<span class='line-number'>177</span>
<span class='line-number'>178</span>
<span class='line-number'>179</span>
<span class='line-number'>180</span>
<span class='line-number'>181</span>
<span class='line-number'>182</span>
<span class='line-number'>183</span>
<span class='line-number'>184</span>
<span class='line-number'>185</span>
<span class='line-number'>186</span>
<span class='line-number'>187</span>
<span class='line-number'>188</span>
<span class='line-number'>189</span>
<span class='line-number'>190</span>
<span class='line-number'>191</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="cp">#include &quot;platform/CCPlatformConfig.h&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//设置为1后会include CCPhysicsScript 和 CCPhysicsDebugNode 添加到物理引擎支持</span>
</span><span class='line'><span class="c1">//需要保证Chipmunk在搜索路径中</span>
</span><span class='line'><span class="cp">#ifndef CC_ENABLE_CHIPMUNK_INTEGRATION</span>
</span><span class='line'><span class="cp">#define CC_ENABLE_CHIPMUNK_INTEGRATION 0</span>
</span><span class='line'><span class="cp">#endif</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//设置为1后会include CCPhysicsScript 添加到Box2D的支持</span>
</span><span class='line'><span class="c1">//同样需要保证Box2D会在搜索路径中</span>
</span><span class='line'><span class="cp">#ifndef CC_ENABLE_BOX2D_INTEGRATION</span>
</span><span class='line'><span class="cp">#define CC_ENABLE_BOX2D_INTEGRATION 0</span>
</span><span class='line'><span class="cp">#endif</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/** </span>
</span><span class='line'><span class="cm"> 设置为1后,2d学会维护一个OpenGL状态缓存来避免不必要的切换</span>
</span><span class='line'><span class="cm"> 为了使用这个功能,需要用下列函数来替换GL的对应函数</span>
</span><span class='line'><span class="cm">    - ccGLUseProgram() instead of glUseProgram()</span>
</span><span class='line'><span class="cm">    - ccGLDeleteProgram() instead of glDeleteProgram()</span>
</span><span class='line'><span class="cm">    - ccGLBlendFunc() instead of glBlendFunc()</span>
</span><span class='line'><span class="cm">如果这个功能被禁止, 那么这些函数会直接调用对应的GL函数, 当然就没有缓存了</span>
</span><span class='line'><span class="cm">打开这个功能能提高速度</span>
</span><span class='line'><span class="cm">如果你的代码是从GL ES 1.1升级过来的, 保持这个功能被禁用. 如果各种功能正常的话, 你可以启用这个功能</span>
</span><span class='line'><span class="cm">#ifndef CC_ENABLE_GL_STATE_CACHE</span>
</span><span class='line'><span class="cm">#define CC_ENABLE_GL_STATE_CACHE 1</span>
</span><span class='line'><span class="cm">#endif</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm">启用后,纹理的坐标会用这个公式来计算</span>
</span><span class='line'><span class="cm">- texCoord.left = (rect.origin.x*2+1) / (texture.wide*2);</span>
</span><span class='line'><span class="cm">- texCoord.right = texCoord.left + (rect.size.width*2-2)/(texture.wide*2);</span>
</span><span class='line'>
</span><span class='line'><span class="cm">The same for bottom and top.</span>
</span><span class='line'>
</span><span class='line'><span class="cm">This formula prevents artifacts by using 99% of the texture.</span>
</span><span class='line'><span class="cm">The &quot;correct&quot; way to prevent artifacts is by using the spritesheet-artifact-fixer.py or a similar tool.</span>
</span><span class='line'>
</span><span class='line'><span class="cm">受影响的类:</span>
</span><span class='line'><span class="cm">- CCSprite / CCSpriteBatchNode and subclasses: CCLabelBMFont, CCTMXTiledMap</span>
</span><span class='line'><span class="cm">- CCLabelAtlas</span>
</span><span class='line'><span class="cm">- CCQuadParticleSystem</span>
</span><span class='line'><span class="cm">- CCTileMap</span>
</span><span class='line'><span class="cm">*/</span>
</span><span class='line'><span class="cp">#ifndef CC_FIX_ARTIFACTS_BY_STRECHING_TEXEL</span>
</span><span class='line'><span class="cp">#define CC_FIX_ARTIFACTS_BY_STRECHING_TEXEL 0</span>
</span><span class='line'><span class="cp">#endif</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//默认0.5秒, 更新下FPS的数据. 数字越大FPS数据越可靠.</span>
</span><span class='line'><span class="cp">#ifndef CC_DIRECTOR_STATS_INTERVAL</span>
</span><span class='line'><span class="cp">#define CC_DIRECTOR_STATS_INTERVAL (0.5f)</span>
</span><span class='line'><span class="cp">#endif</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//FPS数据显示位置,默认左下</span>
</span><span class='line'><span class="cp">#ifndef CC_DIRECTOR_FPS_POSITION</span>
</span><span class='line'><span class="cp">#define CC_DIRECTOR_FPS_POSITION ccp(0,0)</span>
</span><span class='line'><span class="cp">#endif</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/** @def CC_DIRECTOR_DISPATCH_FAST_EVENTS</span>
</span><span class='line'><span class="cm"> If enabled, and only when it is used with CCFastDirector, the main loop will wait 0.04 seconds to</span>
</span><span class='line'><span class="cm"> dispatch all the events, even if there are not events to dispatch.</span>
</span><span class='line'><span class="cm"> If your game uses lot&#39;s of events (eg: touches) it might be a good idea to enable this feature.</span>
</span><span class='line'><span class="cm"> Otherwise, it is safe to leave it disabled.</span>
</span><span class='line'><span class="cm"> </span>
</span><span class='line'><span class="cm"> To enable set it to 1. Disabled by default.</span>
</span><span class='line'><span class="cm"> </span>
</span><span class='line'><span class="cm"> @warning This feature is experimental</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="cp">#ifndef CC_DIRECTOR_DISPATCH_FAST_EVENTS</span>
</span><span class='line'> <span class="cp">#define CC_DIRECTOR_DISPATCH_FAST_EVENTS 0</span>
</span><span class='line'><span class="cp">#endif</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/** @def CC_DIRECTOR_MAC_USE_DISPLAY_LINK_THREAD</span>
</span><span class='line'><span class="cm">If enabled, cocos2d-mac will run on the Display Link thread. If disabled cocos2d-mac will run in its own thread.</span>
</span><span class='line'>
</span><span class='line'><span class="cm">If enabled, the images will be drawn at the &quot;correct&quot; time, but the events might not be very responsive.</span>
</span><span class='line'><span class="cm">If disabled, some frames might be skipped, but the events will be dispatched as they arrived.</span>
</span><span class='line'>
</span><span class='line'><span class="cm">To enable set it to a 1, to disable it set to 0. Enabled by default.</span>
</span><span class='line'>
</span><span class='line'><span class="cm">Only valid for cocos2d-mac. Not supported on cocos2d-ios.</span>
</span><span class='line'>
</span><span class='line'><span class="cm">*/</span>
</span><span class='line'><span class="cp">#ifndef CC_DIRECTOR_MAC_USE_DISPLAY_LINK_THREAD</span>
</span><span class='line'><span class="cp">#define CC_DIRECTOR_MAC_USE_DISPLAY_LINK_THREAD 1</span>
</span><span class='line'><span class="cp">#endif</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/** @def CC_NODE_RENDER_SUBPIXEL</span>
</span><span class='line'><span class="cm"> If enabled, the CCNode objects (CCSprite, CCLabel,etc) will be able to render in subpixels.</span>
</span><span class='line'><span class="cm"> If disabled, integer pixels will be used.</span>
</span><span class='line'><span class="cm"> </span>
</span><span class='line'><span class="cm"> To enable set it to 1. Enabled by default.</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="cp">#ifndef CC_NODE_RENDER_SUBPIXEL</span>
</span><span class='line'><span class="cp">#define CC_NODE_RENDER_SUBPIXEL 1</span>
</span><span class='line'><span class="cp">#endif</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/** @def CC_SPRITEBATCHNODE_RENDER_SUBPIXEL</span>
</span><span class='line'><span class="cm"> If enabled, the CCSprite objects rendered with CCSpriteBatchNode will be able to render in subpixels.</span>
</span><span class='line'><span class="cm"> If disabled, integer pixels will be used.</span>
</span><span class='line'><span class="cm"> </span>
</span><span class='line'><span class="cm"> To enable set it to 1. Enabled by default.</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="cp">#ifndef CC_SPRITEBATCHNODE_RENDER_SUBPIXEL</span>
</span><span class='line'><span class="cp">#define CC_SPRITEBATCHNODE_RENDER_SUBPIXEL    1</span>
</span><span class='line'><span class="cp">#endif</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/** @def CC_TEXTURE_ATLAS_USE_TRIANGLE_STRIP</span>
</span><span class='line'><span class="cm"> Use GL_TRIANGLE_STRIP instead of GL_TRIANGLES when rendering the texture atlas.</span>
</span><span class='line'><span class="cm"> It seems it is the recommend way, but it is much slower, so, enable it at your own risk</span>
</span><span class='line'><span class="cm"> </span>
</span><span class='line'><span class="cm"> To enable set it to a value different than 0. Disabled by default.</span>
</span><span class='line'>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="cp">#ifndef CC_TEXTURE_ATLAS_USE_TRIANGLE_STRIP</span>
</span><span class='line'><span class="cp">#define CC_TEXTURE_ATLAS_USE_TRIANGLE_STRIP 0</span>
</span><span class='line'><span class="cp">#endif</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//VAO定点数组对象</span>
</span><span class='line'><span class="cm">/** @def CC_TEXTURE_ATLAS_USE_VAO</span>
</span><span class='line'><span class="cm"> By default, CCTextureAtlas (used by many cocos2d classes) will use VAO (Vertex Array Objects).</span>
</span><span class='line'><span class="cm"> Apple recommends its usage but they might consume a lot of memory, specially if you use many of them.</span>
</span><span class='line'><span class="cm"> So for certain cases, where you might need hundreds of VAO objects, it might be a good idea to disable it.</span>
</span><span class='line'><span class="cm"> </span>
</span><span class='line'><span class="cm"> To disable it set it to 0. Enabled by default.</span>
</span><span class='line'><span class="cm"> </span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="cp">#ifndef CC_TEXTURE_ATLAS_USE_VAO</span>
</span><span class='line'>    <span class="cp">#if (CC_TARGET_PLATFORM == CC_PLATFORM_IOS) || (CC_TARGET_PLATFORM == CC_PLATFORM_MAC)</span>
</span><span class='line'>        <span class="cp">#define CC_TEXTURE_ATLAS_USE_VAO 1</span>
</span><span class='line'>    <span class="cp">#else</span>
</span><span class='line'>        <span class="cm">/* Some Windows display adapter driver cannot support VAO. */</span>
</span><span class='line'>        <span class="cm">/* Some android devices cannot support VAO very well, so we disable it by default for android platform. */</span>
</span><span class='line'>        <span class="cm">/* Blackberry also doesn&#39;t support this feature. */</span>
</span><span class='line'>      <span class="cp">#define CC_TEXTURE_ATLAS_USE_VAO 0</span>
</span><span class='line'>    <span class="cp">#endif</span>
</span><span class='line'><span class="cp">#endif</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="cm">/** @def CC_USE_LA88_LABELS</span>
</span><span class='line'><span class="cm"> If enabled, it will use LA88 (Luminance Alpha 16-bit textures) for CCLabelTTF objects.</span>
</span><span class='line'><span class="cm"> If it is disabled, it will use A8 (Alpha 8-bit textures).</span>
</span><span class='line'><span class="cm"> LA88 textures are 6% faster than A8 textures, but they will consume 2x memory.</span>
</span><span class='line'>
</span><span class='line'><span class="cm"> This feature is enabled by default.</span>
</span><span class='line'>
</span><span class='line'><span class="cm"> @since v0.99.5</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="cp">#ifndef CC_USE_LA88_LABELS</span>
</span><span class='line'><span class="cp">#define CC_USE_LA88_LABELS 1</span>
</span><span class='line'><span class="cp">#endif</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm">  启用后,所有CCSprite的子类都会花上一个边框,方便调试</span>
</span><span class='line'><span class="cm"> 0 -- disabled</span>
</span><span class='line'><span class="cm"> 1 -- draw bounding box</span>
</span><span class='line'><span class="cm"> 2 -- draw texture box</span>
</span><span class='line'><span class="cm">*/</span>
</span><span class='line'><span class="cp">#ifndef CC_SPRITE_DEBUG_DRAW</span>
</span><span class='line'><span class="cp">#define CC_SPRITE_DEBUG_DRAW 0</span>
</span><span class='line'><span class="cp">#endif</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//CCSpriteBatchNode的调试用加边框</span>
</span><span class='line'><span class="cp">#ifndef CC_SPRITEBATCHNODE_DEBUG_DRAW</span>
</span><span class='line'><span class="cp">#define CC_SPRITEBATCHNODE_DEBUG_DRAW 0</span>
</span><span class='line'><span class="cp">#endif</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//CCLabelBMFont调试加边框</span>
</span><span class='line'><span class="cp">#ifndef CC_LABELBMFONT_DEBUG_DRAW</span>
</span><span class='line'><span class="cp">#define CC_LABELBMFONT_DEBUG_DRAW 0</span>
</span><span class='line'><span class="cp">#endif</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//LabeltAtlas调试加边框</span>
</span><span class='line'><span class="cp">#ifndef CC_LABELATLAS_DEBUG_DRAW</span>
</span><span class='line'><span class="cp">#define CC_LABELATLAS_DEBUG_DRAW 0</span>
</span><span class='line'><span class="cp">#endif</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/** @def CC_ENABLE_PROFILERS</span>
</span><span class='line'><span class="cm"> If enabled, will activate various profilers within cocos2d. This statistical data will be output to the console</span>
</span><span class='line'><span class="cm"> once per second showing average time (in milliseconds) required to execute the specific routine(s).</span>
</span><span class='line'><span class="cm"> Useful for debugging purposes only. It is recommended to leave it disabled.</span>
</span><span class='line'><span class="cm"> </span>
</span><span class='line'><span class="cm"> To enable set it to a value different than 0. Disabled by default.</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="cp">#ifndef CC_ENABLE_PROFILERS</span>
</span><span class='line'><span class="cp">#define CC_ENABLE_PROFILERS 0</span>
</span><span class='line'><span class="cp">#endif</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/** Enable Lua engine debug log */</span>
</span><span class='line'><span class="cp">#ifndef CC_LUA_ENGINE_DEBUG</span>
</span><span class='line'><span class="cp">#define CC_LUA_ENGINE_DEBUG 0</span>
</span><span class='line'><span class="cp">#endif</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>mac/CCPlatformDefine.h</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="cp">#include &lt;assert.h&gt; </span><span class="c1">//引入assert</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#define CC_DLL </span><span class="c1">//CC_DLL只在win32平台下有效</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#if CC_DISABLE_ASSERT &gt; 0</span>
</span><span class='line'><span class="cp">#define CC_ASSERT(cond) </span><span class="c1">//禁用了assert</span>
</span><span class='line'><span class="cp">#else</span>
</span><span class='line'><span class="cp">#define CC_ASSERT(cond) assert(cond) </span><span class="c1">//启用了assert</span>
</span><span class='line'><span class="cp">#endif</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#define CC_UNUSED_PARAM(unusedparam) (void)unusedparam</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//定义空指针</span>
</span><span class='line'><span class="cp">#ifndef NULL</span>
</span><span class='line'><span class="cp">#ifdef __cplusplus</span>
</span><span class='line'><span class="cp">#define NULL    0</span>
</span><span class='line'><span class="cp">#else</span>
</span><span class='line'><span class="cp">#define NULL    ((void *)0)</span>
</span><span class='line'><span class="cp">#endif</span>
</span><span class='line'><span class="cp">#endif</span>
</span></code></pre></td></tr></table></div></figure>


<p>我们可以看到win32中不同的部分比如<code>CC_DLL</code></p>

<figure class='code'><figcaption><span>win32/CCPlatformDefine.h</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="cp">#if defined(_USRDLL)</span>
</span><span class='line'>    <span class="cp">#define CC_DLL     __declspec(dllexport)</span>
</span><span class='line'><span class="cp">#else         </span><span class="cm">/* use a DLL library */</span><span class="cp"></span>
</span><span class='line'>    <span class="cp">#define CC_DLL     __declspec(dllimport)</span>
</span><span class='line'><span class="cp">#endif</span>
</span></code></pre></td></tr></table></div></figure>


<p>Linux部分也是<code>CC_DLL</code>不同</p>

<figure class='code'><figcaption><span>linux/CCPlatformDefine.h</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="cp">#if defined(_USRDLL)</span>
</span><span class='line'><span class="cp">#define CC_DLL __attribute__ ((visibility (&quot;default&quot;)))</span>
</span><span class='line'><span class="cp">#else         </span><span class="cm">/* use a DLL library */</span><span class="cp"></span>
</span><span class='line'><span class="cp">#define CC_DLL __attribute__ ((visibility (&quot;default&quot;)))</span>
</span><span class='line'><span class="cp">#endif</span>
</span></code></pre></td></tr></table></div></figure>


<p>Android中比较不同的部分是<code>CC_ASSERT</code></p>

<figure class='code'><figcaption><span>android/CCPlatformDefine.h</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="cp">#define CC_ASSERT(cond) \</span>
</span><span class='line'><span class="cp">if (! (cond)) \</span>
</span><span class='line'><span class="cp">{ \</span>
</span><span class='line'><span class="cp">    char content[256]; \</span>
</span><span class='line'><span class="cp">    sprintf(content, &quot;%s function:%s line:%d&quot;, __FILE__, __FUNCTION__, __LINE__);  \</span>
</span><span class='line'><span class="cp">    CCMessageBox(content, &quot;Assert error&quot;); \</span>
</span><span class='line'><span class="cp">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>我们最后再来看下<code>CCPlatformMacros.h</code></p>

<figure class='code'><figcaption><span>CCPlatformMacros.h</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
<span class='line-number'>136</span>
<span class='line-number'>137</span>
<span class='line-number'>138</span>
<span class='line-number'>139</span>
<span class='line-number'>140</span>
<span class='line-number'>141</span>
<span class='line-number'>142</span>
<span class='line-number'>143</span>
<span class='line-number'>144</span>
<span class='line-number'>145</span>
<span class='line-number'>146</span>
<span class='line-number'>147</span>
<span class='line-number'>148</span>
<span class='line-number'>149</span>
<span class='line-number'>150</span>
<span class='line-number'>151</span>
<span class='line-number'>152</span>
<span class='line-number'>153</span>
<span class='line-number'>154</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="cp">#include &quot;ccConfig.h&quot;</span>
</span><span class='line'><span class="cp">#include &quot;CCPlatformConfig.h&quot;</span>
</span><span class='line'><span class="cp">#include &quot;CCPlatformDefine.h&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//CREATE_FUNC是2d-x的一个核心功能,一般采用例如`MySpriter *my = MySpriter::create()`的形式调用.</span>
</span><span class='line'><span class="c1">//这里的create()成员函数即是由CREATE_FUNC创建, 来达到让2d-x来管理内存分配的功能</span>
</span><span class='line'><span class="cp">#define CREATE_FUNC(__TYPE__) \</span>
</span><span class='line'><span class="cp">static __TYPE__* create() \</span>
</span><span class='line'><span class="cp">{ \</span>
</span><span class='line'><span class="cp">    __TYPE__ *pRet = new __TYPE__(); \</span>
</span><span class='line'><span class="cp">    if (pRet &amp;&amp; pRet-&gt;init()) \</span>
</span><span class='line'><span class="cp">    { \</span>
</span><span class='line'><span class="cp">        pRet-&gt;autorelease(); \</span>
</span><span class='line'><span class="cp">        return pRet; \</span>
</span><span class='line'><span class="cp">    } \</span>
</span><span class='line'><span class="cp">    else \</span>
</span><span class='line'><span class="cp">    { \</span>
</span><span class='line'><span class="cp">        delete pRet; \</span>
</span><span class='line'><span class="cp">        pRet = NULL; \</span>
</span><span class='line'><span class="cp">        return NULL; \</span>
</span><span class='line'><span class="cp">    } \</span>
</span><span class='line'><span class="cp">}</span>
</span><span class='line'><span class="c1">//早期版本还有一个NODE_FUNC完成和CREATE_FUNC一样的功能,已经废弃,不再讨论</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//CC_ENABLE_CACHE_TEXTURE_DATA 只在Android上启用, 会缓存纹理</span>
</span><span class='line'><span class="cp">#if (CC_TARGET_PLATFORM == CC_PLATFORM_ANDROID)</span>
</span><span class='line'>    <span class="cp">#define CC_ENABLE_CACHE_TEXTURE_DATA       1</span>
</span><span class='line'><span class="cp">#else</span>
</span><span class='line'>    <span class="cp">#define CC_ENABLE_CACHE_TEXTURE_DATA       0</span>
</span><span class='line'><span class="cp">#endif</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#if (CC_TARGET_PLATFORM == CC_PLATFORM_ANDROID) || (CC_TARGET_PLATFORM == CC_PLATFORM_WIN32)</span>
</span><span class='line'><span class="c1">//重新绑定indices, 避免在android和win32下glDrawElements函数crash的bug</span>
</span><span class='line'>    <span class="cp">#define CC_REBIND_INDICES_BUFFER  1</span>
</span><span class='line'><span class="cp">#else</span>
</span><span class='line'>    <span class="cp">#define CC_REBIND_INDICES_BUFFER  0</span>
</span><span class='line'><span class="cp">#endif</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//常用宏定义</span>
</span><span class='line'><span class="cp">#ifdef __cplusplus </span><span class="c1">//namespace只在C++中起作用</span>
</span><span class='line'>    <span class="cp">#define NS_CC_BEGIN                     namespace cocos2d {</span>
</span><span class='line'>    <span class="cp">#define NS_CC_END                       }</span>
</span><span class='line'>    <span class="cp">#define USING_NS_CC                     using namespace cocos2d  </span><span class="c1">//应该尽量使用USING_NS_CC, 兼容性更好</span>
</span><span class='line'><span class="cp">#else</span>
</span><span class='line'>    <span class="cp">#define NS_CC_BEGIN </span>
</span><span class='line'>    <span class="cp">#define NS_CC_END </span>
</span><span class='line'>    <span class="cp">#define USING_NS_CC </span>
</span><span class='line'><span class="cp">#endif </span>
</span><span class='line'>
</span><span class='line'><span class="c1">//成员函数快捷声明/定义宏</span>
</span><span class='line'><span class="c1">//多使用这些宏, 可以方便地定义出合乎面向对象原则的成员变量.</span>
</span><span class='line'><span class="c1">//需要注意的是这些调用了这些宏之后, 应该养成重新写public, private等标号的习惯. 因为之后的都会变成public</span>
</span><span class='line'><span class="c1">//定义的成员变量都是protected的</span>
</span><span class='line'><span class="c1">//只读的成员变量</span>
</span><span class='line'><span class="cp">#define CC_PROPERTY_READONLY(varType, varName, funName)\</span>
</span><span class='line'><span class="cp">protected: varType varName;\</span>
</span><span class='line'><span class="cp">public: virtual varType get##funName(void);</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//getter是为引用</span>
</span><span class='line'><span class="cp">#define CC_PROPERTY_READONLY_PASS_BY_REF(varType, varName, funName)\</span>
</span><span class='line'><span class="cp">protected: varType varName;\</span>
</span><span class='line'><span class="cp">public: virtual const varType&amp; get##funName(void);</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//可读可写成员变量</span>
</span><span class='line'><span class="cp">#define CC_PROPERTY(varType, varName, funName)\</span>
</span><span class='line'><span class="cp">protected: varType varName;\</span>
</span><span class='line'><span class="cp">public: virtual varType get##funName(void);\</span>
</span><span class='line'><span class="cp">public: virtual void set##funName(varType var);</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#define CC_PROPERTY_PASS_BY_REF(varType, varName, funName)\</span>
</span><span class='line'><span class="cp">protected: varType varName;\</span>
</span><span class='line'><span class="cp">public: virtual varType get##funName(void);\</span>
</span><span class='line'><span class="cp">public: virtual void set##funName(const varType&amp; var);</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//以上的getter,setter只有声明, 下面的这些带有定义</span>
</span><span class='line'><span class="cp">#define CC_SYNTHESIZE_READONLY(varType, varName, funName)\</span>
</span><span class='line'><span class="cp">protected: varType varName;\</span>
</span><span class='line'><span class="cp">public: virtual varType get##funName(void) const { return varName; }</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#define CC_SYNTHESIZE_READONLY_PASS_BY_REF(varType, varName, funName)\</span>
</span><span class='line'><span class="cp">protected: varType varName;\</span>
</span><span class='line'><span class="cp">public: virtual const varType&amp; get##funName(void) const { return varName; }</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#define CC_SYNTHESIZE(varType, varName, funName)\</span>
</span><span class='line'><span class="cp">protected: varType varName;\</span>
</span><span class='line'><span class="cp">public: virtual varType get##funName(void) const { return varName; }\</span>
</span><span class='line'><span class="cp">public: virtual void set##funName(varType var){ varName = var; }</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#define CC_SYNTHESIZE_PASS_BY_REF(varType, varName, funName)\</span>
</span><span class='line'><span class="cp">protected: varType varName;\</span>
</span><span class='line'><span class="cp">public: virtual varType get##funName(void) const { return varName; }\</span>
</span><span class='line'><span class="cp">public: virtual void set##funName(const varType&amp; var){ varName = var; }</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//setter中会retain一次var, 防止被gc回收.</span>
</span><span class='line'><span class="cp">#define CC_SYNTHESIZE_RETAIN(varType, varName, funName)    \</span>
</span><span class='line'><span class="cp">private: varType varName; \</span>
</span><span class='line'><span class="cp">public: virtual varType get##funName(void) const { return varName; } \</span>
</span><span class='line'><span class="cp">public: virtual void set##funName(varType var)   \</span>
</span><span class='line'><span class="cp">{ \</span>
</span><span class='line'><span class="cp">    if (varName != var) \</span>
</span><span class='line'><span class="cp">    { \</span>
</span><span class='line'><span class="cp">        CC_SAFE_RETAIN(var); \</span>
</span><span class='line'><span class="cp">        CC_SAFE_RELEASE(varName); \</span>
</span><span class='line'><span class="cp">        varName = var; \</span>
</span><span class='line'><span class="cp">    } \</span>
</span><span class='line'><span class="cp">} </span>
</span><span class='line'>
</span><span class='line'><span class="cp">#define CC_SAFE_DELETE(p)            do { if(p) { delete (p); (p) = 0; } } while(0)</span>
</span><span class='line'><span class="cp">#define CC_SAFE_DELETE_ARRAY(p)     do { if(p) { delete[] (p); (p) = 0; } } while(0)</span>
</span><span class='line'><span class="cp">#define CC_SAFE_FREE(p)                do { if(p) { free(p); (p) = 0; } } while(0)</span>
</span><span class='line'><span class="cp">#define CC_SAFE_RELEASE(p)            do { if(p) { (p)-&gt;release(); } } while(0)</span>
</span><span class='line'><span class="cp">#define CC_SAFE_RELEASE_NULL(p)        do { if(p) { (p)-&gt;release(); (p) = 0; } } while(0)</span>
</span><span class='line'><span class="cp">#define CC_SAFE_RETAIN(p)            do { if(p) { (p)-&gt;retain(); } } while(0)</span>
</span><span class='line'><span class="cp">#define CC_BREAK_IF(cond)            if(cond) break</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#define __CCLOGWITHFUNCTION(s, ...) \</span>
</span><span class='line'><span class="cp">    CCLog(&quot;%s : %s&quot;,__FUNCTION__, CCString::createWithFormat(s, ##__VA_ARGS__)-&gt;getCString())</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//这个宏定义要注意大小写, 会很容易和cocos2d::CCLog弄错, 因为代码提示的问题.</span>
</span><span class='line'><span class="c1">// cocos2d debug</span>
</span><span class='line'><span class="cp">#if !defined(COCOS2D_DEBUG) || COCOS2D_DEBUG == 0</span>
</span><span class='line'><span class="cp">#define CCLOG(...)       do {} while (0)</span>
</span><span class='line'><span class="cp">#define CCLOGINFO(...)   do {} while (0)</span>
</span><span class='line'><span class="cp">#define CCLOGERROR(...)  do {} while (0)</span>
</span><span class='line'><span class="cp">#define CCLOGWARN(...)   do {} while (0)</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#elif COCOS2D_DEBUG == 1</span>
</span><span class='line'><span class="cp">#define CCLOG(format, ...)      cocos2d::CCLog(format, ##__VA_ARGS__)</span>
</span><span class='line'><span class="cp">#define CCLOGERROR(format,...)  cocos2d::CCLog(format, ##__VA_ARGS__)</span>
</span><span class='line'><span class="cp">#define CCLOGINFO(format,...)   do {} while (0)</span>
</span><span class='line'><span class="cp">#define CCLOGWARN(...) __CCLOGWITHFUNCTION(__VA_ARGS__)</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#elif COCOS2D_DEBUG &gt; 1</span>
</span><span class='line'><span class="cp">#define CCLOG(format, ...)      cocos2d::CCLog(format, ##__VA_ARGS__)</span>
</span><span class='line'><span class="cp">#define CCLOGERROR(format,...)  cocos2d::CCLog(format, ##__VA_ARGS__)</span>
</span><span class='line'><span class="cp">#define CCLOGINFO(format,...)   cocos2d::CCLog(format, ##__VA_ARGS__)</span>
</span><span class='line'><span class="cp">#define CCLOGWARN(...) __CCLOGWITHFUNCTION(__VA_ARGS__)</span>
</span><span class='line'><span class="cp">#endif </span><span class="c1">// COCOS2D_DEBUG</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Lua engine debug</span>
</span><span class='line'><span class="cp">#if !defined(COCOS2D_DEBUG) || COCOS2D_DEBUG == 0 || CC_LUA_ENGINE_DEBUG == 0</span>
</span><span class='line'><span class="cp">#define LUALOG(...)</span>
</span><span class='line'><span class="cp">#else</span>
</span><span class='line'><span class="cp">#define LUALOG(format, ...)     cocos2d::CCLog(format, ##__VA_ARGS__)</span>
</span><span class='line'><span class="cp">#endif </span><span class="c1">// Lua engine debug</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//定义废弃(deprecated)属性</span>
</span><span class='line'><span class="cp">#if defined(__GNUC__) &amp;&amp; ((__GNUC__ &gt;= 4) || ((__GNUC__ == 3) &amp;&amp; (__GNUC_MINOR__ &gt;= 1)))</span>
</span><span class='line'>    <span class="cp">#define CC_DEPRECATED_ATTRIBUTE __attribute__((deprecated))</span>
</span><span class='line'><span class="cp">#elif _MSC_VER &gt;= 1400 </span><span class="c1">//vs 2005 or higher</span>
</span><span class='line'>    <span class="cp">#define CC_DEPRECATED_ATTRIBUTE __declspec(deprecated) </span>
</span><span class='line'><span class="cp">#else</span>
</span><span class='line'>    <span class="cp">#define CC_DEPRECATED_ATTRIBUTE</span>
</span><span class='line'><span class="cp">#endif </span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[2d-x深读1:CCPlatformConfig.h]]></title>
    <link href="http://young40.github.com/blog/2012/12/17/cocos2d-x-source-code-research-1-ccplatformconfig-dot-h/"/>
    <updated>2012-12-17T00:43:00+08:00</updated>
    <id>http://young40.github.com/blog/2012/12/17/cocos2d-x-source-code-research-1-ccplatformconfig-dot-h</id>
    <content type="html"><![CDATA[<p>准备好好学习下Cocos2d-x(以下简称2dx), 我正在很努力地学习C++.</p>

<p>作为新手的我, 只能从最基本的代码读起. 就从<code>CCPlatformConfig.h</code>开始研究起吧, 这个文件没有include其他文件, 是最基本的文件.</p>

<p>研究成果见代码.</p>

<!--more-->


<ul>
<li>版本:<code>cocos2d-2.1beta3-x-2.1.0</code></li>
<li>路径:<code>cocos2d-2.1beta3-x-2.1.0/cocos2dx/platform</code></li>
</ul>


<figure class='code'><figcaption><span>CCPlatformConfig.h</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="cp">#ifndef __CC_PLATFORM_CONFIG_H__</span>
</span><span class='line'><span class="cp">#define __CC_PLATFORM_CONFIG_H__</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm">  Config of cocos2d-x project, per target platform.</span>
</span><span class='line'><span class="cm">  */</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//////////////////////////////////////////////////////////////////////////</span>
</span><span class='line'><span class="c1">// pre configure</span>
</span><span class='line'><span class="c1">//////////////////////////////////////////////////////////////////////////</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// define supported target platform macro which CC uses.</span>
</span><span class='line'><span class="cp">#define CC_PLATFORM_UNKNOWN            0</span>
</span><span class='line'><span class="cp">#define CC_PLATFORM_IOS                1</span>
</span><span class='line'><span class="cp">#define CC_PLATFORM_ANDROID            2</span>
</span><span class='line'><span class="cp">#define CC_PLATFORM_WIN32              3</span>
</span><span class='line'><span class="cp">#define CC_PLATFORM_MARMALADE          4</span>
</span><span class='line'><span class="cp">#define CC_PLATFORM_LINUX              5</span>
</span><span class='line'><span class="cp">#define CC_PLATFORM_BADA               6</span>
</span><span class='line'><span class="cp">#define CC_PLATFORM_BLACKBERRY         7</span>
</span><span class='line'><span class="cp">#define CC_PLATFORM_MAC                8</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//默认是unknown的</span>
</span><span class='line'><span class="c1">// Determine target platform by compile environment macro.</span>
</span><span class='line'><span class="cp">#define CC_TARGET_PLATFORM             CC_PLATFORM_UNKNOWN</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//CC_TARGET_OS_MAC等是从编译器的环境变量传入的. 参加各编译器或者IDE的预定义宏设置</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// mac</span>
</span><span class='line'><span class="cp">#if defined(CC_TARGET_OS_MAC)</span>
</span><span class='line'><span class="cp">#undef  CC_TARGET_PLATFORM </span><span class="c1">//先取消定义</span>
</span><span class='line'><span class="cp">#define CC_TARGET_PLATFORM         CC_PLATFORM_MAC </span><span class="c1">//定义为MAC平台</span>
</span><span class='line'><span class="cp">#endif</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// iphone</span>
</span><span class='line'><span class="cp">#if defined(CC_TARGET_OS_IPHONE)</span>
</span><span class='line'>    <span class="cp">#undef  CC_TARGET_PLATFORM</span>
</span><span class='line'>    <span class="cp">#define CC_TARGET_PLATFORM         CC_PLATFORM_IOS</span>
</span><span class='line'>    <span class="cp">#define CC_SUPPORT_PVRTC </span><span class="c1">//支持prv压缩格式</span>
</span><span class='line'><span class="cp">#endif</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// android</span>
</span><span class='line'><span class="cp">#if defined(ANDROID)</span>
</span><span class='line'>    <span class="cp">#undef  CC_TARGET_PLATFORM</span>
</span><span class='line'>    <span class="cp">#define CC_TARGET_PLATFORM         CC_PLATFORM_ANDROID</span>
</span><span class='line'><span class="cp">#endif</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// win32</span>
</span><span class='line'><span class="cp">#if defined(WIN32) &amp;&amp; defined(_WINDOWS)</span>
</span><span class='line'>    <span class="cp">#undef  CC_TARGET_PLATFORM</span>
</span><span class='line'>    <span class="cp">#define CC_TARGET_PLATFORM         CC_PLATFORM_WIN32</span>
</span><span class='line'><span class="cp">#endif</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// linux</span>
</span><span class='line'><span class="cp">#if defined(LINUX)</span>
</span><span class='line'>    <span class="cp">#undef  CC_TARGET_PLATFORM</span>
</span><span class='line'>    <span class="cp">#define CC_TARGET_PLATFORM         CC_PLATFORM_LINUX</span>
</span><span class='line'><span class="cp">#endif</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// marmalade</span>
</span><span class='line'><span class="cp">#if defined(MARMALADE)</span>
</span><span class='line'><span class="cp">#undef  CC_TARGET_PLATFORM</span>
</span><span class='line'><span class="cp">#define CC_TARGET_PLATFORM         CC_PLATFORM_MARMALADE</span>
</span><span class='line'><span class="cp">#endif</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// bada</span>
</span><span class='line'><span class="cp">#if defined(SHP)</span>
</span><span class='line'><span class="cp">#undef  CC_TARGET_PLATFORM</span>
</span><span class='line'><span class="cp">#define CC_TARGET_PLATFORM         CC_PLATFORM_BADA</span>
</span><span class='line'><span class="cp">#endif</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// qnx</span>
</span><span class='line'><span class="cp">#if defined(__QNX__)</span>
</span><span class='line'>    <span class="cp">#undef  CC_TARGET_PLATFORM</span>
</span><span class='line'>    <span class="cp">#define CC_TARGET_PLATFORM     CC_PLATFORM_BLACKBERRY</span>
</span><span class='line'><span class="cp">#endif</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="c1">//////////////////////////////////////////////////////////////////////////</span>
</span><span class='line'><span class="c1">// post configure</span>
</span><span class='line'><span class="c1">//////////////////////////////////////////////////////////////////////////</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//不支持的平台,如果你在上面平台上遇到这个错误, 就可能是预定义变量, 或者编译器的环境变量设置错误</span>
</span><span class='line'><span class="c1">// check user set platform</span>
</span><span class='line'><span class="cp">#if ! CC_TARGET_PLATFORM</span>
</span><span class='line'>    <span class="cp">#error  &quot;Cannot recognize the target platform; are you targeting an unsupported platform?&quot;</span>
</span><span class='line'><span class="cp">#endif </span>
</span><span class='line'>
</span><span class='line'><span class="cp">#if (CC_TARGET_PLATFORM == CC_PLATFORM_WIN32)</span>
</span><span class='line'><span class="cp">#pragma warning (disable:4127) </span><span class="c1">//在win32平台不显示4127的warning, 这个具体用法可以参见</span>
</span><span class='line'><span class="c1">//http://blog.csdn.net/wowolook/article/details/8060334</span>
</span><span class='line'><span class="cp">#endif  </span><span class="c1">// CC_PLATFORM_WIN32</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#endif  </span><span class="c1">// __CC_PLATFORM_CONFIG_H__</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Vim 生存手册]]></title>
    <link href="http://young40.github.com/blog/2012/12/15/survive-in-vim/"/>
    <updated>2012-12-15T00:23:00+08:00</updated>
    <id>http://young40.github.com/blog/2012/12/15/survive-in-vim</id>
    <content type="html"><![CDATA[<h2>模式</h2>

<p>在普通模式按<code>i</code>进入插入模式
在普通模式按<code>:</code>进入命令模式
在插入模式按<code>esc</code>进入普通模式
在普通模式按<code>v</code>进入可视模式</p>

<h2>命令合成</h2>

<p><code>dw</code>可以看做<code>d</code>(删除)+<code>w</code>(一个单词)合成的. 所以<code>dw</code>, 将向后删除一个单词
数字+命令 会重复该命令
例如: <code>2j</code> 会向下移动两次</p>

<h2>基础命令</h2>

<p><code>h</code>,<code>j</code>,<code>k</code>,<code>l</code>分别代表了向前一个字符,向下一行,向上一行,向后一个字符</p>

<h2>翻页</h2>

<p>Ctrl+D 向下翻半页</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[OS X常用Shell命令]]></title>
    <link href="http://young40.github.com/blog/2012/12/14/os-x-shell-command/"/>
    <updated>2012-12-14T20:45:00+08:00</updated>
    <id>http://young40.github.com/blog/2012/12/14/os-x-shell-command</id>
    <content type="html"><![CDATA[<figure class='code'><figcaption><span>清理 </span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>find ./ -name <span class="s2">&quot;._*&quot;</span> -depth -exec rm <span class="o">{}</span> <span class="se">\;</span>
</span><span class='line'>find ./ -name <span class="s2">&quot;._*&quot;</span> | xargs rm
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Github三板斧]]></title>
    <link href="http://young40.github.com/blog/2012/12/14/easy-github/"/>
    <updated>2012-12-14T15:05:00+08:00</updated>
    <id>http://young40.github.com/blog/2012/12/14/easy-github</id>
    <content type="html"><![CDATA[<figure class='code'><figcaption><span>初始化目录</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>git init
</span></code></pre></td></tr></table></div></figure>




<!--more-->




<figure class='code'><figcaption><span>添加文件</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>git add somefile.php // 添加一个新文件
</span><span class='line'>git add . // 将所有未纳入版本管理的文件添加进来
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>本地提交</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>git commit -a -m <span class="s2">&quot;add ignore file&quot;</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>状态查看</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>git status
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>忽略文件</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>git-ignore .DS_Store  //忽略一个文件 本质是将该文件名添加到.gitignore, 可以在每个目录设立不同的.gitignore文件, 会影响子目录
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Cocos2d-x 真是太棒了]]></title>
    <link href="http://young40.github.com/blog/2012/12/14/cocos2d-x-is-awesome/"/>
    <updated>2012-12-14T03:07:00+08:00</updated>
    <id>http://young40.github.com/blog/2012/12/14/cocos2d-x-is-awesome</id>
    <content type="html"><![CDATA[<p>大概从7月20号左右, 开始决定转向游戏, 首先接触了cocos2d-iphone, 学习了几天. 然后简单了解下就转向了cocos2d-x的学习.</p>

<p>2d-x最令人开心的就是跨平台特性, 经过这段时间的尝试, 感觉跨平台特性确实很强大. 我一般都是在Xcode写代码, 以os x平台做调试, 然后ios平台就不用提了, 直接编译即可.
Win和Android下面一般都是直接编译即可. 当然, 因为我对C++也是刚刚开始学习, 所以代码写的不标准, 那么在VS下面会无法通过编译. 主要是体现在一些需要将函数作为参数传入的地方,
比较会不容易弄清楚回调函数的参数. Xcode我通通将<code>CCObject *sender</code>作为参数, 而VS要求就非常严格了.</p>

<p>在Win上, 我使用VS2012编译, 能很好地支持我现在使用的C++11的一些特性, 比如类似于:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>vector&lt;int&gt; v(1);
</span><span class='line'>for (auto i : v)
</span><span class='line'>{
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<p>而在Android上, 因为一直没有更新NDK, 版本是r8b, 一直没有办法很好地编译这段代码. 更新为r8c之后,可以编译了.太好了, 我还是很喜欢C++11的这些新的语法糖.</p>

<p>默认是没有启用C++11特性的, 可以在<code>Android.mk</code>中, 添加<code>LOCAL_CPPFLAGS += -std=c++0x</code>来启用这个特性.</p>

<p>作为练习, 我将潘潘的j2me的坦克游戏简单移植到ios上, 简单实现以后, 我转向山寨@胡铠鸥 的PopCube(<a target="_blank" href="https://itunes.apple.com/cn/app/popcube!/id562905043?l=en&mt=8">原版下载</a>)了. 山寨的很彻底, 直接将图片,声音等资源从原版的ipa里面提取出来, 或许游戏资源的保护也应该做的更好一点.</p>

<p>接下来要转向继续开发坦克了, 希望一切顺利.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[C++随机数]]></title>
    <link href="http://young40.github.com/blog/2012/12/12/random-number-in-cpp/"/>
    <updated>2012-12-12T05:52:00+08:00</updated>
    <id>http://young40.github.com/blog/2012/12/12/random-number-in-cpp</id>
    <content type="html"><![CDATA[<p>这两天写一个方块消除游戏, 开局的时候就需要随机颜色方块布局. 在调试的时候, 发现似乎有些关卡总是相同的.
终于发现了程序第一次打开的时候, 开局总是相同的.</p>

<p>rand()可以产生0到之间的伪随机数, 可以利用srand()指定一个无符号整数作为种子. 如果种子相同, 那么产生的伪随机数列相同.
默认种子为1, 所以如果不改变种子的话, 获得的随机数列总是相同的.</p>

<figure class='code'><figcaption><span>Random</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="n">srand</span><span class="p">(</span> <span class="n">time</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span> <span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="mi">10</span><span class="p">;</span> <span class="o">++</span><span class="n">i</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">printf</span><span class="p">(</span><span class="s">&quot;%d</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="n">rand</span><span class="p">());</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[声明和定义的研究]]></title>
    <link href="http://young40.github.com/blog/2012/12/10/declaration-and-definition-in-cpp/"/>
    <updated>2012-12-10T07:35:00+08:00</updated>
    <id>http://young40.github.com/blog/2012/12/10/declaration-and-definition-in-cpp</id>
    <content type="html"><![CDATA[<p>最近一直在看C++, 基础的东西瞄了一遍就飘过了, 然后就记不得很清楚了.
这两天觉得看书的时候, 对声明和定义的含义很含糊, 以至于都不是很明白书上在说什么地方了.
看来有必要对声明和定义重新研究下, 既然架设了这个博客, 那么就写一篇博客吧.</p>

<p>定义(Definiation)用于给变量分配存储空间, 还可以给变量指定初始值. 变量只能有一个定义.</p>

<p>声明(Declaration)表明变量的类型和名字. 定义也是声明.可以通过extern这种方式来仅声明而不定义变量.</p>

<figure class='code'><figcaption><span>Declaration</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='c++'><span class='line'><span class="k">extern</span> <span class="kt">int</span> <span class="n">i</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<p>定义会分配内存空间.</p>

<p>可以多次声明.</p>

<p>好吧, 这篇文章不能称之为研究, 仅仅是从C++ Primer抄下来的而已.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[在OS X上折腾OctoPress]]></title>
    <link href="http://young40.github.com/blog/2012/12/09/setup-octopress-on-os-x-10-dot-8/"/>
    <updated>2012-12-09T10:19:00+08:00</updated>
    <id>http://young40.github.com/blog/2012/12/09/setup-octopress-on-os-x-10-dot-8</id>
    <content type="html"><![CDATA[<p>这两天心血来潮, 突然想在github上架设个博客玩玩了, 比较好的两个选择就是OctoPress和Jekyll-Bootstrap.
昨天尝试了用Jekyll-Bootstrap, 感觉还不错啦, 我因为没有找到代码高亮的方法, 以及自定义的方法, 就放弃了.</p>

<p>然后今天就尝试OctoPress, 不想op需要ruby 1.9.3, 而OS X 10.8自带的是1.8.7. 果然在执行rake generate的时候出错.</p>

<p>我是有安装homebrew的软件包管理器的, 使用brew安装ruby, 结果Terminal下还是1.8.7.</p>

<p>然后就学习到有个东西叫做rvm, ruby版本管理器, 允许多个ruby同时安装. 官方的源速度太慢, 所以尝试用sed换成淘宝源, 网上别人给出的sed命令报错, 所以又复习了下vim替换, 全部替换了下.</p>

<p>再接着安装bundler, 报错说RedCloth无法安装.网上搜索了下无果, 注意到中间的时候有个地方提示查看log, 然后发现以这个log为名字的log在系统里面太多了, 也区分不出路径. 索性将所有搜索到的都删除掉. 然后发现RedCloth安装文件需要gcc-4.2, 所以将gcc ln了一个gcc-4.2.</p>

<p>另外, 由于对git不是很熟悉, octopress将主目录作为source分支, 而_deploy目录作为master分支, 为了弄明白这个问题, 我花费了更长的时间.不过也总算是对git的pull, push, branch理解更深入了一点</p>

<p>博客终于跑起来了, 还是非常开心.</p>

<p>PS:我再说两点.
1.github的服务器有缓存,更新后, 可能需要强制刷新才能看到更新.
2.分类是支持中文的, 但rake preview不支持.
3.Disqus支持中文, 但是可能需要申请.可以在Disqus设置页面找到申请链接.</p>
]]></content>
  </entry>
  
</feed>
