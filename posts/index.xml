<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on 杨世玲的博客</title>
    <link>https://www.young40.com/posts/</link>
    <description>Recent content in Posts on 杨世玲的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>© 2019 Copyright 杨世玲</copyright>
    <lastBuildDate>Sun, 22 Jul 2018 00:00:06 +0800</lastBuildDate>
    
	<atom:link href="https://www.young40.com/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>MTSL笔记03: 数据类型 - 向量</title>
      <link>https://www.young40.com/posts/2018-07-22-metal-shading-languae-note-03/</link>
      <pubDate>Sun, 22 Jul 2018 00:00:06 +0800</pubDate>
      
      <guid>https://www.young40.com/posts/2018-07-22-metal-shading-languae-note-03/</guid>
      <description>&lt;p&gt;
Metal支持一系列向量数据类型, 由系统的向量数学库提供.
&lt;/p&gt;
&lt;p&gt;
PS: 这里提到的系统, 我猜着可能是指iOS系统或者是SIMD数学库.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>MTSL笔记02: 数据类型 - 标量</title>
      <link>https://www.young40.com/posts/2018-07-21-metal-shading-language-note-02/</link>
      <pubDate>Sat, 21 Jul 2018 00:28:04 +0800</pubDate>
      
      <guid>https://www.young40.com/posts/2018-07-21-metal-shading-language-note-02/</guid>
      <description>&lt;p&gt;
第二章是关于数据类型, 向量, 矩阵, 原子数据类型, buffer, 纹理(texture), 采样器(sampler), 结构体. 
还设计数据对齐和类型转换. 
&lt;/p&gt;
&lt;p&gt;
我们先来看看标量(Scalar).
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>MTSL笔记01: 简介</title>
      <link>https://www.young40.com/posts/2018-07-19-metal-shading-language-note-01/</link>
      <pubDate>Thu, 19 Jul 2018 22:23:05 +0800</pubDate>
      
      <guid>https://www.young40.com/posts/2018-07-19-metal-shading-language-note-01/</guid>
      <description>&lt;p&gt;
最近在看Metal, Metal Shader不仅绕不过, 还是Metal学习的重点. 学习Metal Shader的资料很少, 庆幸的是苹果提供了很好的文档. 尽管是英文的, 我还是希望自己能坚持下来啃完.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>学习Metal: 带色的三角形</title>
      <link>https://www.young40.com/posts/2018-07-17-learnmetal-a-colored-triangle/</link>
      <pubDate>Tue, 17 Jul 2018 23:15:13 +0800</pubDate>
      
      <guid>https://www.young40.com/posts/2018-07-17-learnmetal-a-colored-triangle/</guid>
      <description>&lt;p&gt;
上篇博客, 渲染了一个三角形. 但只有一个颜色太单调了. 我们来给他上点更丰富的颜色.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>学习Metal: Hello, Triangle</title>
      <link>https://www.young40.com/posts/2018-07-14-learnmetal-a-triangle/</link>
      <pubDate>Sat, 14 Jul 2018 00:21:53 +0800</pubDate>
      
      <guid>https://www.young40.com/posts/2018-07-14-learnmetal-a-triangle/</guid>
      <description>&lt;p&gt;
学习3D的API, 比如OpenGL, DirectX, 做的第一个渲染总会是三角形. 所以, 我们也来看下如何用Metal来渲染一个三角形.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>学习Metal: MetalKit</title>
      <link>https://www.young40.com/posts/2018-07-06-learnmetal-metalkit/</link>
      <pubDate>Fri, 06 Jul 2018 23:30:16 +0800</pubDate>
      
      <guid>https://www.young40.com/posts/2018-07-06-learnmetal-metalkit/</guid>
      <description>&lt;p&gt;
当我们获取了Metal的设备之后, 就可以开始做Metal的渲染了. 我们可以使用Core Animation提供的CAMetalLayer, 或者MetalKit提供的MTKView来显示渲染的结果. 
&lt;/p&gt;
&lt;p&gt;
MetalKit提供的MTKView更为方便快捷. 
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>学习Metal: 获取设备</title>
      <link>https://www.young40.com/posts/2018-07-04-learnmetal-get-device/</link>
      <pubDate>Wed, 04 Jul 2018 00:00:49 +0800</pubDate>
      
      <guid>https://www.young40.com/posts/2018-07-04-learnmetal-get-device/</guid>
      <description>&lt;p&gt;
使用Metal的第一件事, 就是要获取Metal的设备. 正如在OpenGL中, 需要首先获取到OpenGL的context.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>学习Metal: Metal简介</title>
      <link>https://www.young40.com/posts/2018-07-02-learnmetal-introducing-metal/</link>
      <pubDate>Mon, 02 Jul 2018 19:13:01 +0800</pubDate>
      
      <guid>https://www.young40.com/posts/2018-07-02-learnmetal-introducing-metal/</guid>
      <description>&lt;p&gt;
进入到2018年, Metal已经发布了4年了. 随着WWDC 2018上Apple宣布将在iOS, OS X等平台废弃OpenGL, OpenGL ES等API, 摆在开发者面前一个不得不面对的事实就是, 需要去掌握Metal了.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Git全局忽略挖了一个坑</title>
      <link>https://www.young40.com/posts/2018-07-01-git-global-ignore/</link>
      <pubDate>Sun, 01 Jul 2018 00:44:44 +0800</pubDate>
      
      <guid>https://www.young40.com/posts/2018-07-01-git-global-ignore/</guid>
      <description>&lt;p&gt;
自从上次博客迁移完之后, 一直在长草. 刚才偶然间发现, &lt;a href=&#34;https://www.young40.com/tags/&#34;&gt;Tags&lt;/a&gt; 的链接报404找不到. 这是怎么回事呢? 太奇怪了.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>学习Swift: guard</title>
      <link>https://www.young40.com/posts/2018-06-30-learn-swift-01-guard/</link>
      <pubDate>Sat, 30 Jun 2018 11:25:49 +0800</pubDate>
      
      <guid>https://www.young40.com/posts/2018-06-30-learn-swift-01-guard/</guid>
      <description>&lt;p&gt;
&lt;code class=&#34;verbatim&#34;&gt;guard&lt;/code&gt; 是Swift 2.0引入的新关键字, 用于当条件不满足时, 不再执行后续的代码. 当然, 官方文档上说是交出当前作用域的程序控制权.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Google Cloud安装Shadowsocks</title>
      <link>https://www.young40.com/posts/2018-06-12-google-cloud-f-gfw/</link>
      <pubDate>Tue, 12 Jun 2018 23:25:30 +0800</pubDate>
      
      <guid>https://www.young40.com/posts/2018-06-12-google-cloud-f-gfw/</guid>
      <description>&lt;p&gt;
Google Cloud一直在搞首年送300美金的活动, 顺手薅了下羊毛, 记录一下重点过程.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>迁移到了Hugo, 又双叒叕迁移了??!!!</title>
      <link>https://www.young40.com/posts/2018-02-09-move-to-hugo/</link>
      <pubDate>Fri, 09 Feb 2018 15:58:36 +0800</pubDate>
      
      <guid>https://www.young40.com/posts/2018-02-09-move-to-hugo/</guid>
      <description>&lt;h4 id=&#34;headline-1&#34;&gt;
又双叒叕迁移了
&lt;/h4&gt;
&lt;p&gt;
继上次迁移之后, 我的博客又一次&lt;sup class=&#34;footnote-reference&#34;&gt;&lt;a id=&#34;footnote-reference-1&#34; href=&#34;#footnote-1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;迁移了. 基于Node.js的Hexo&lt;sup class=&#34;footnote-reference&#34;&gt;&lt;a id=&#34;footnote-reference-2&#34; href=&#34;#footnote-2&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;用起来还不错, 但现在每次执行hexo命令的时候, 都是一大堆Warning. 
偶然间发现了基于Go的Hugo&lt;sup class=&#34;footnote-reference&#34;&gt;&lt;a id=&#34;footnote-reference-3&#34; href=&#34;#footnote-3&#34;&gt;3&lt;/a&gt;&lt;/sup&gt;, 所以又萌生了迁移的念头.
&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>